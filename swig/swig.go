/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: torch.i

package swig

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef long long swig_type_12;
typedef long long swig_type_13;
extern void _wrap_Swig_free_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_swig_787f477e80c1f310(swig_intgo arg1);
extern void _wrap_final_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_final_get_swig_787f477e80c1f310(void);
extern swig_type_1 _wrap_device_count_swig_787f477e80c1f310(void);
extern _Bool _wrap_is_available_swig_787f477e80c1f310(void);
extern _Bool _wrap_cudnn_is_available_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_OptimizerBase_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_OptimizerBase_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_OptimizerBase_add_parameters_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_OptimizerBase_zero_grad_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_OptimizerBase_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_OptimizerBase_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern swig_type_2 _wrap_OptimizerBase_size_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_OptimizerBase_save_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_OptimizerBase_load_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Optimizer_step_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_Optimizer_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Optimizer_add_parameters_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Optimizer_zero_grad_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_Optimizer_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_Optimizer_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t _swig_base);
extern swig_type_3 _wrap_Optimizer_size_swig_787f477e80c1f310(uintptr_t _swig_base);
extern void _wrap_Optimizer_save_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Optimizer_load_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_LossClosureOptimizer_step_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_LossClosureOptimizer_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LossClosureOptimizer_add_parameters_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_LossClosureOptimizer_zero_grad_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_LossClosureOptimizer_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_LossClosureOptimizer_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t _swig_base);
extern swig_type_4 _wrap_LossClosureOptimizer_size_swig_787f477e80c1f310(uintptr_t _swig_base);
extern void _wrap_LossClosureOptimizer_save_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_LossClosureOptimizer_load_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_new_RMSpropOptions_swig_787f477e80c1f310(double arg1);
extern void _wrap_RMSpropOptions_learning_rate__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_RMSpropOptions_learning_rate__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSpropOptions_alpha__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_RMSpropOptions_alpha__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSpropOptions_eps__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_RMSpropOptions_eps__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSpropOptions_weight_decay__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_RMSpropOptions_weight_decay__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSpropOptions_momentum__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_RMSpropOptions_momentum__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSpropOptions_centered__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RMSpropOptions_centered__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_RMSpropOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSprop_step_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSprop_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RMSprop_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSprop_save_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RMSprop_load_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RMSprop_square_average_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RMSprop_square_average_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSprop_momentum_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RMSprop_momentum_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSprop_grad_average_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RMSprop_grad_average_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_RMSprop_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RMSprop_add_parameters_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_RMSprop_zero_grad_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_RMSprop_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_RMSprop_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t _swig_base);
extern swig_type_5 _wrap_RMSprop_size_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_new_AdagradOptions_swig_787f477e80c1f310(double arg1);
extern void _wrap_AdagradOptions_learning_rate__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_AdagradOptions_learning_rate__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_AdagradOptions_lr_decay__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_AdagradOptions_lr_decay__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_AdagradOptions_weight_decay__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_AdagradOptions_weight_decay__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_AdagradOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adagrad_step_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adagrad_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Adagrad_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adagrad_save_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Adagrad_load_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Adagrad_sum_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Adagrad_sum_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adagrad_step_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Adagrad_step_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_Adagrad_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adagrad_add_parameters_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Adagrad_zero_grad_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_Adagrad_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_Adagrad_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t _swig_base);
extern swig_type_6 _wrap_Adagrad_size_swig_787f477e80c1f310(uintptr_t _swig_base);
extern void _wrap_serialize__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_serialize__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_SGDOptions_swig_787f477e80c1f310(double arg1);
extern void _wrap_SGDOptions_learning_rate__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_SGDOptions_learning_rate__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SGDOptions_momentum__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_SGDOptions_momentum__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SGDOptions_dampening__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_SGDOptions_dampening__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SGDOptions_weight_decay__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_SGDOptions_weight_decay__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SGDOptions_nesterov__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_SGDOptions_nesterov__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_SGDOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SGD_step_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SGD_save_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SGD_load_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SGD_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SGD_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SGD_momentum_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SGD_momentum_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_SGD_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SGD_add_parameters_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SGD_zero_grad_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_SGD_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_SGD_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t _swig_base);
extern swig_type_7 _wrap_SGD_size_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_new_AdamOptions_swig_787f477e80c1f310(double arg1);
extern void _wrap_AdamOptions_learning_rate__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_AdamOptions_learning_rate__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_AdamOptions_beta1__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_AdamOptions_beta1__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_AdamOptions_beta2__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_AdamOptions_beta2__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_AdamOptions_weight_decay__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_AdamOptions_weight_decay__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_AdamOptions_eps__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_AdamOptions_eps__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_AdamOptions_amsgrad__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_AdamOptions_amsgrad__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_AdamOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adam_step_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adam_save_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Adam_load_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Adam_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Adam_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adam_step_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Adam_step_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adam_exp_average_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Adam_exp_average_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adam_exp_average_sq_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Adam_exp_average_sq_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adam_max_exp_average_sq_buffers_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Adam_max_exp_average_sq_buffers_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_Adam_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Adam_add_parameters_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_Adam_zero_grad_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_Adam_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_Adam_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t _swig_base);
extern swig_type_8 _wrap_Adam_size_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_new_LBFGSOptions_swig_787f477e80c1f310(double arg1);
extern void _wrap_LBFGSOptions_learning_rate__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_LBFGSOptions_learning_rate__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGSOptions_max_iter__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGSOptions_max_iter__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGSOptions_max_eval__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGSOptions_max_eval__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGSOptions_tolerance_grad__set_swig_787f477e80c1f310(uintptr_t arg1, float arg2);
extern float _wrap_LBFGSOptions_tolerance_grad__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGSOptions_tolerance_change__set_swig_787f477e80c1f310(uintptr_t arg1, float arg2);
extern float _wrap_LBFGSOptions_tolerance_change__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGSOptions_history_size__set_swig_787f477e80c1f310(uintptr_t arg1, swig_type_9 arg2);
extern swig_type_10 _wrap_LBFGSOptions_history_size__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_LBFGSOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_LBFGS_step_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LBFGS_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_save_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LBFGS_load_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LBFGS_d_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_d_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_H_diag_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_H_diag_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_prev_flat_grad_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_prev_flat_grad_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_t_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_t_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_prev_loss_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_prev_loss_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_ro_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_ro_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_al_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_al_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_old_dirs_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_old_dirs_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_old_stps_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_old_stps_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_func_evals_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_func_evals_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_state_n_iter_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LBFGS_state_n_iter_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_LBFGS_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LBFGS_add_parameters_swig_787f477e80c1f310(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_LBFGS_zero_grad_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_LBFGS_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_LBFGS_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t _swig_base);
extern swig_type_11 _wrap_LBFGS_size_swig_787f477e80c1f310(uintptr_t _swig_base);
extern uintptr_t _wrap_compile_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_Module__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_Module__SWIG_1_swig_787f477e80c1f310(void);
extern void _wrap_delete_Module_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_name_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_clone__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Module_clone__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Module_apply__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_apply__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_apply__SWIG_2_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Module_apply__SWIG_3_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_apply__SWIG_4_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Module_apply__SWIG_5_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_apply__SWIG_6_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_apply__SWIG_7_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Module_apply__SWIG_8_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Module_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_Module_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_named_parameters__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_Module_named_parameters__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_buffers__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_Module_buffers__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_named_buffers__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_Module_named_buffers__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_modules__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_Module_modules__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_named_modules__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern uintptr_t _wrap_Module_named_modules__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Module_named_modules__SWIG_2_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_children_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_named_children_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Module_train__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern void _wrap_Module_train__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Module_eval_swig_787f477e80c1f310(uintptr_t arg1);
extern _Bool _wrap_Module_is_training_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Module_to__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern void _wrap_Module_to__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Module_to__SWIG_2_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_Module_to__SWIG_3_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_to__SWIG_4_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_Module_to__SWIG_5_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_zero_grad_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Module_save_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_load_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Module_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Module_is_serializable_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Module_register_parameter__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap_Module_register_parameter__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_Module_register_buffer_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_RNNOutput_output_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOutput_output_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOutput_state_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOutput_state_get_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_RNNOutput_swig_787f477e80c1f310(void);
extern void _wrap_delete_RNNOutput_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_RNNOptionsBase_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_RNNOptionsBase_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptionsBase_input_size__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOptionsBase_input_size__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptionsBase_hidden_size__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOptionsBase_hidden_size__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptionsBase_layers__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOptionsBase_layers__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptionsBase_with_bias__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RNNOptionsBase_with_bias__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptionsBase_dropout__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_RNNOptionsBase_dropout__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptionsBase_bidirectional__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RNNOptionsBase_bidirectional__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptionsBase_batch_first__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RNNOptionsBase_batch_first__get_swig_787f477e80c1f310(uintptr_t arg1);
extern swig_intgo _wrap_RNNActivation_ReLU_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_RNNActivation_Tanh_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_RNNOptions_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOptions_tanh_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_RNNOptions_relu_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptions_input_size__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOptions_input_size__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptions_hidden_size__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOptions_hidden_size__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptions_layers__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNOptions_layers__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptions_with_bias__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RNNOptions_with_bias__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptions_dropout__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_RNNOptions_dropout__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptions_bidirectional__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RNNOptions_bidirectional__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptions_batch_first__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RNNOptions_batch_first__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNOptions_activation__set_swig_787f477e80c1f310(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RNNOptions_activation__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_RNNOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_RNNImpl__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_RNNImpl__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNNImpl_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNImpl_forward__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_RNNImpl_forward__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RNNImpl_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RNNImpl_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_RNNImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_RNN_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_RNN_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_LSTMImpl__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_LSTMImpl__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_LSTMImpl_forward__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_LSTMImpl_forward__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_LSTMImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LSTM_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_LSTM_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_GRUImpl__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_GRUImpl__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_GRUImpl_forward__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_GRUImpl_forward__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_GRUImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_GRU_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_GRU_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_Conv1dImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_Conv1dImpl_swig_787f477e80c1f310(void);
extern void _wrap_delete_Conv1dImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Conv1d_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Conv1d_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_Conv2dImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_Conv2dImpl_swig_787f477e80c1f310(void);
extern void _wrap_delete_Conv2dImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Conv2d_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Conv2d_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_Conv3dImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_Conv3dImpl_swig_787f477e80c1f310(void);
extern void _wrap_delete_Conv3dImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Conv3d_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Conv3d_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_FunctionalImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_FunctionalImpl_reset_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_FunctionalImpl_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FunctionalImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_FunctionalImpl_is_serializable_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_FunctionalImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Functional_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Functional_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_LinearOptions_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LinearOptions_in__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LinearOptions_in__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LinearOptions_out__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LinearOptions_out__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LinearOptions_with_bias__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_LinearOptions_with_bias__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_LinearOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_LinearImpl__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_LinearImpl__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LinearImpl_reset_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LinearImpl_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LinearImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_LinearImpl_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LinearImpl_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LinearImpl_weight_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LinearImpl_weight_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_LinearImpl_bias_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_LinearImpl_bias_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_LinearImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Linear_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Linear_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_SequentialImpl__SWIG_0_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_SequentialImpl__SWIG_2_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_SequentialImpl_clone__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SequentialImpl_clone__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SequentialImpl_reset_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_SequentialImpl_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SequentialImpl_begin__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_SequentialImpl_begin__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_SequentialImpl_end__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_SequentialImpl_end__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_SequentialImpl_ptr_swig_787f477e80c1f310(uintptr_t arg1, swig_type_12 arg2);
extern swig_type_13 _wrap_SequentialImpl_size_swig_787f477e80c1f310(uintptr_t arg1);
extern _Bool _wrap_SequentialImpl_is_empty_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_SequentialImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Sequential_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Sequential_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_NamedAnyModule_name_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_NamedAnyModule_module_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_NamedAnyModule_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_modules_ordered_dict_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_EmbeddingOptions_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_EmbeddingOptions_count__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_EmbeddingOptions_count__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_EmbeddingOptions_dimension__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_EmbeddingOptions_dimension__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_EmbeddingOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_EmbeddingImpl__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_EmbeddingImpl__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_EmbeddingImpl_reset_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_EmbeddingImpl_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_EmbeddingImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_EmbeddingImpl_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_EmbeddingImpl_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_EmbeddingImpl_weight_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_EmbeddingImpl_weight_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_EmbeddingImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Embedding_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Embedding_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_BatchNormOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormOptions_features__set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BatchNormOptions_features__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormOptions_affine__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_BatchNormOptions_affine__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormOptions_stateful__set_swig_787f477e80c1f310(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_BatchNormOptions_stateful__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormOptions_eps__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_BatchNormOptions_eps__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormOptions_momentum__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_BatchNormOptions_momentum__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_BatchNormOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_BatchNormImpl__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_BatchNormImpl__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormImpl_reset_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormImpl_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BatchNormImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BatchNormImpl_pure_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_BatchNormImpl_options_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BatchNormImpl_options_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormImpl_weight_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BatchNormImpl_weight_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormImpl_bias_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BatchNormImpl_bias_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormImpl_running_mean_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BatchNormImpl_running_mean_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNormImpl_running_var_set_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BatchNormImpl_running_var_get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_BatchNormImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_BatchNorm_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_BatchNorm_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_AnyModule__SWIG_0_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_new_AnyModule__SWIG_4_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_AnyModule__SWIG_5_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_AnyModule_clone__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_AnyModule_clone__SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_AnyModule_ptr_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_AnyModule_type_info_swig_787f477e80c1f310(uintptr_t arg1);
extern _Bool _wrap_AnyModule_is_empty_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_AnyModule_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_DropoutOptions__SWIG_0_swig_787f477e80c1f310(double arg1);
extern uintptr_t _wrap_new_DropoutOptions__SWIG_1_swig_787f477e80c1f310(void);
extern void _wrap_DropoutOptions_rate__set_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern double _wrap_DropoutOptions_rate__get_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_delete_DropoutOptions_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_DropoutImpl__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_DropoutImpl__SWIG_1_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_DropoutImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_DropoutImpl_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_DropoutImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_FeatureDropoutImpl__SWIG_0_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_new_FeatureDropoutImpl__SWIG_1_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_FeatureDropoutImpl_forward_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_FeatureDropoutImpl_pretty_print_swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_FeatureDropoutImpl_swig_787f477e80c1f310(uintptr_t arg1);
extern void _wrap_Dropout_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_Dropout_get_swig_787f477e80c1f310(void);
extern void _wrap_FeatureDropout_set_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_FeatureDropout_get_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_Linear_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_Conv1D_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_Conv2D_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_Conv3D_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_ConvTranspose1D_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_ConvTranspose2D_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_ConvTranspose3D_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_Sigmoid_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_Tanh_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_ReLU_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_Nonlinearity_LeakyReLU_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_FanMode_FanIn_swig_787f477e80c1f310(void);
extern swig_intgo _wrap_FanMode_FanOut_swig_787f477e80c1f310(void);
extern double _wrap_calculate_gain__SWIG_0_swig_787f477e80c1f310(swig_intgo arg1, double arg2);
extern double _wrap_calculate_gain__SWIG_1_swig_787f477e80c1f310(swig_intgo arg1);
extern uintptr_t _wrap_constant__swig_787f477e80c1f310(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_dirac__swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_eye__swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_normal___SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, double arg2, double arg3);
extern uintptr_t _wrap_normal___SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_normal___SWIG_2_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_ones__swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_orthogonal___SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_orthogonal___SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_sparse___SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, double arg2, double arg3);
extern uintptr_t _wrap_sparse___SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_uniform___SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, double arg2, double arg3);
extern uintptr_t _wrap_uniform___SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_uniform___SWIG_2_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_kaiming_normal___SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, double arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_kaiming_normal___SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, double arg2, swig_intgo arg3);
extern uintptr_t _wrap_kaiming_normal___SWIG_2_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_kaiming_normal___SWIG_3_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_kaiming_uniform___SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, double arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_kaiming_uniform___SWIG_1_swig_787f477e80c1f310(uintptr_t arg1, double arg2, swig_intgo arg3);
extern uintptr_t _wrap_kaiming_uniform___SWIG_2_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_kaiming_uniform___SWIG_3_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_xavier_normal___SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_xavier_normal___SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_xavier_uniform___SWIG_0_swig_787f477e80c1f310(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_xavier_uniform___SWIG_1_swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_zeros__swig_787f477e80c1f310(uintptr_t arg1);
extern uintptr_t _wrap_kUInt8_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kInt8_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kInt16_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kInt32_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kInt64_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kFloat16_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kFloat32_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kFloat64_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kU8_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kI8_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kI16_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kI32_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kI64_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kF16_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kF32_get_swig_787f477e80c1f310(void);
extern uintptr_t _wrap_kF64_get_swig_787f477e80c1f310(void);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_swig_787f477e80c1f310(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func SetFinal(arg1 OutputArchive) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_final_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetFinal() (_swig_ret OutputArchive) {
	var swig_r OutputArchive
	swig_r = (OutputArchive)(SwigcptrOutputArchive(C._wrap_final_get_swig_787f477e80c1f310()))
	return swig_r
}

func Device_count() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_device_count_swig_787f477e80c1f310())
	return swig_r
}

func Is_available() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_is_available_swig_787f477e80c1f310())
	return swig_r
}

func Cudnn_is_available() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_cudnn_is_available_swig_787f477e80c1f310())
	return swig_r
}

type SwigcptrOptimizerBase uintptr

func (p SwigcptrOptimizerBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOptimizerBase) SwigIsOptimizerBase() {
}

func NewOptimizerBase(arg1 Std_vector_Sl_at_Tensor_Sg_) (_swig_ret OptimizerBase) {
	var swig_r OptimizerBase
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (OptimizerBase)(SwigcptrOptimizerBase(C._wrap_new_OptimizerBase_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteOptimizerBase(arg1 OptimizerBase) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OptimizerBase_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOptimizerBase) Add_parameters(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_OptimizerBase_add_parameters_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOptimizerBase) Zero_grad() {
	_swig_i_0 := arg1
	C._wrap_OptimizerBase_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOptimizerBase) Parameters__SWIG_0() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_OptimizerBase_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrOptimizerBase) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_OptimizerBase_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrOptimizerBase) Parameters(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_0()
	}
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrOptimizerBase) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_OptimizerBase_size_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrOptimizerBase) Save(arg2 Torch_serialize_OutputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_OptimizerBase_save_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOptimizerBase) Load(arg2 Torch_serialize_InputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_OptimizerBase_load_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

type OptimizerBase interface {
	Swigcptr() uintptr
	SwigIsOptimizerBase()
	Add_parameters(arg2 Std_vector_Sl_at_Tensor_Sg_)
	Zero_grad()
	Parameters(a ...interface{}) interface{}
	Size() (_swig_ret int64)
	Save(arg2 Torch_serialize_OutputArchive)
	Load(arg2 Torch_serialize_InputArchive)
}

type SwigcptrOptimizer uintptr

func (p SwigcptrOptimizer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOptimizer) SwigIsOptimizer() {
}

func (arg1 SwigcptrOptimizer) Step() {
	_swig_i_0 := arg1
	C._wrap_Optimizer_step_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func DeleteOptimizer(arg1 Optimizer) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Optimizer_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptimizer) Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Optimizer_add_parameters_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptimizer) Zero_grad() {
	C._wrap_Optimizer_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOptimizer) Parameters__SWIG_0() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Optimizer_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptimizer) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Optimizer_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrOptimizer) Parameters(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_0()
	}
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrOptimizer) Size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_Optimizer_size_swig_787f477e80c1f310(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptimizer) Save(arg1 Torch_serialize_OutputArchive) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Optimizer_save_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptimizer) Load(arg1 Torch_serialize_InputArchive) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Optimizer_load_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrOptimizer) SwigIsOptimizerBase() {
}

func (p SwigcptrOptimizer) SwigGetOptimizerBase() OptimizerBase {
	return SwigcptrOptimizerBase(p.Swigcptr())
}

type Optimizer interface {
	Swigcptr() uintptr
	SwigIsOptimizer()
	Step()
	Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_)
	Zero_grad()
	Parameters(a ...interface{}) interface{}
	Size() (_swig_ret int64)
	Save(arg1 Torch_serialize_OutputArchive)
	Load(arg1 Torch_serialize_InputArchive)
	SwigIsOptimizerBase()
	SwigGetOptimizerBase() OptimizerBase
}

type SwigcptrLossClosureOptimizer uintptr

func (p SwigcptrLossClosureOptimizer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLossClosureOptimizer) SwigIsLossClosureOptimizer() {
}

func (arg1 SwigcptrLossClosureOptimizer) Step(arg2 Std_function_Sl_at_Tensor_Sp__SP__Sg_) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LossClosureOptimizer_step_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func DeleteLossClosureOptimizer(arg1 LossClosureOptimizer) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_LossClosureOptimizer_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLossClosureOptimizer) Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_LossClosureOptimizer_add_parameters_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLossClosureOptimizer) Zero_grad() {
	C._wrap_LossClosureOptimizer_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLossClosureOptimizer) Parameters__SWIG_0() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_LossClosureOptimizer_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrLossClosureOptimizer) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_LossClosureOptimizer_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrLossClosureOptimizer) Parameters(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_0()
	}
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrLossClosureOptimizer) Size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_LossClosureOptimizer_size_swig_787f477e80c1f310(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrLossClosureOptimizer) Save(arg1 Torch_serialize_OutputArchive) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_LossClosureOptimizer_save_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLossClosureOptimizer) Load(arg1 Torch_serialize_InputArchive) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_LossClosureOptimizer_load_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrLossClosureOptimizer) SwigIsOptimizerBase() {
}

func (p SwigcptrLossClosureOptimizer) SwigGetOptimizerBase() OptimizerBase {
	return SwigcptrOptimizerBase(p.Swigcptr())
}

type LossClosureOptimizer interface {
	Swigcptr() uintptr
	SwigIsLossClosureOptimizer()
	Step(arg2 Std_function_Sl_at_Tensor_Sp__SP__Sg_) (_swig_ret At_Tensor)
	Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_)
	Zero_grad()
	Parameters(a ...interface{}) interface{}
	Size() (_swig_ret int64)
	Save(arg1 Torch_serialize_OutputArchive)
	Load(arg1 Torch_serialize_InputArchive)
	SwigIsOptimizerBase()
	SwigGetOptimizerBase() OptimizerBase
}

type SwigcptrRMSpropOptions uintptr

func (p SwigcptrRMSpropOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRMSpropOptions) SwigIsRMSpropOptions() {
}

func NewRMSpropOptions(arg1 float64) (_swig_ret RMSpropOptions) {
	var swig_r RMSpropOptions
	_swig_i_0 := arg1
	swig_r = (RMSpropOptions)(SwigcptrRMSpropOptions(C._wrap_new_RMSpropOptions_swig_787f477e80c1f310(C.double(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRMSpropOptions) SetLearning_rate_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RMSpropOptions_learning_rate__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrRMSpropOptions) GetLearning_rate_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_RMSpropOptions_learning_rate__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRMSpropOptions) SetAlpha_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RMSpropOptions_alpha__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrRMSpropOptions) GetAlpha_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_RMSpropOptions_alpha__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRMSpropOptions) SetEps_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RMSpropOptions_eps__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrRMSpropOptions) GetEps_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_RMSpropOptions_eps__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRMSpropOptions) SetWeight_decay_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RMSpropOptions_weight_decay__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrRMSpropOptions) GetWeight_decay_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_RMSpropOptions_weight_decay__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRMSpropOptions) SetMomentum_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RMSpropOptions_momentum__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrRMSpropOptions) GetMomentum_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_RMSpropOptions_momentum__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRMSpropOptions) SetCentered_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RMSpropOptions_centered__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRMSpropOptions) GetCentered_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RMSpropOptions_centered__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteRMSpropOptions(arg1 RMSpropOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RMSpropOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type RMSpropOptions interface {
	Swigcptr() uintptr
	SwigIsRMSpropOptions()
	SetLearning_rate_(arg2 float64)
	GetLearning_rate_() (_swig_ret float64)
	SetAlpha_(arg2 float64)
	GetAlpha_() (_swig_ret float64)
	SetEps_(arg2 float64)
	GetEps_() (_swig_ret float64)
	SetWeight_decay_(arg2 float64)
	GetWeight_decay_() (_swig_ret float64)
	SetMomentum_(arg2 float64)
	GetMomentum_() (_swig_ret float64)
	SetCentered_(arg2 bool)
	GetCentered_() (_swig_ret bool)
}

type SwigcptrRMSprop uintptr

func (p SwigcptrRMSprop) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRMSprop) SwigIsRMSprop() {
}

func (arg1 SwigcptrRMSprop) Step() {
	_swig_i_0 := arg1
	C._wrap_RMSprop_step_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRMSprop) SetOptions(arg2 RMSpropOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RMSprop_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRMSprop) GetOptions() (_swig_ret RMSpropOptions) {
	var swig_r RMSpropOptions
	_swig_i_0 := arg1
	swig_r = (RMSpropOptions)(SwigcptrRMSpropOptions(C._wrap_RMSprop_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRMSprop) Save(arg2 Torch_serialize_OutputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RMSprop_save_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRMSprop) Load(arg2 Torch_serialize_InputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RMSprop_load_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRMSprop) SetSquare_average_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RMSprop_square_average_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRMSprop) GetSquare_average_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_RMSprop_square_average_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRMSprop) SetMomentum_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RMSprop_momentum_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRMSprop) GetMomentum_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_RMSprop_momentum_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRMSprop) SetGrad_average_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RMSprop_grad_average_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRMSprop) GetGrad_average_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_RMSprop_grad_average_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteRMSprop(arg1 RMSprop) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RMSprop_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrRMSprop) Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_RMSprop_add_parameters_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrRMSprop) Zero_grad() {
	C._wrap_RMSprop_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrRMSprop) Parameters__SWIG_0() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_RMSprop_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrRMSprop) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_RMSprop_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrRMSprop) Parameters(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_0()
	}
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrRMSprop) Size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_RMSprop_size_swig_787f477e80c1f310(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrRMSprop) SwigIsOptimizer() {
}

func (p SwigcptrRMSprop) SwigGetOptimizer() Optimizer {
	return SwigcptrOptimizer(p.Swigcptr())
}

func (p SwigcptrRMSprop) SwigIsOptimizerBase() {
}

func (p SwigcptrRMSprop) SwigGetOptimizerBase() OptimizerBase {
	return SwigcptrOptimizerBase(p.Swigcptr())
}

type RMSprop interface {
	Swigcptr() uintptr
	SwigIsRMSprop()
	Step()
	SetOptions(arg2 RMSpropOptions)
	GetOptions() (_swig_ret RMSpropOptions)
	Save(arg2 Torch_serialize_OutputArchive)
	Load(arg2 Torch_serialize_InputArchive)
	SetSquare_average_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetSquare_average_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	SetMomentum_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetMomentum_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	SetGrad_average_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetGrad_average_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_)
	Zero_grad()
	Parameters(a ...interface{}) interface{}
	Size() (_swig_ret int64)
	SwigIsOptimizer()
	SwigGetOptimizer() Optimizer
	SwigIsOptimizerBase()
	SwigGetOptimizerBase() OptimizerBase
}

type SwigcptrAdagradOptions uintptr

func (p SwigcptrAdagradOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAdagradOptions) SwigIsAdagradOptions() {
}

func NewAdagradOptions(arg1 float64) (_swig_ret AdagradOptions) {
	var swig_r AdagradOptions
	_swig_i_0 := arg1
	swig_r = (AdagradOptions)(SwigcptrAdagradOptions(C._wrap_new_AdagradOptions_swig_787f477e80c1f310(C.double(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAdagradOptions) SetLearning_rate_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdagradOptions_learning_rate__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrAdagradOptions) GetLearning_rate_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_AdagradOptions_learning_rate__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAdagradOptions) SetLr_decay_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdagradOptions_lr_decay__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrAdagradOptions) GetLr_decay_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_AdagradOptions_lr_decay__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAdagradOptions) SetWeight_decay_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdagradOptions_weight_decay__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrAdagradOptions) GetWeight_decay_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_AdagradOptions_weight_decay__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteAdagradOptions(arg1 AdagradOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_AdagradOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type AdagradOptions interface {
	Swigcptr() uintptr
	SwigIsAdagradOptions()
	SetLearning_rate_(arg2 float64)
	GetLearning_rate_() (_swig_ret float64)
	SetLr_decay_(arg2 float64)
	GetLr_decay_() (_swig_ret float64)
	SetWeight_decay_(arg2 float64)
	GetWeight_decay_() (_swig_ret float64)
}

type SwigcptrAdagrad uintptr

func (p SwigcptrAdagrad) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAdagrad) SwigIsAdagrad() {
}

func (arg1 SwigcptrAdagrad) Step() {
	_swig_i_0 := arg1
	C._wrap_Adagrad_step_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAdagrad) SetOptions(arg2 AdagradOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adagrad_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdagrad) GetOptions() (_swig_ret AdagradOptions) {
	var swig_r AdagradOptions
	_swig_i_0 := arg1
	swig_r = (AdagradOptions)(SwigcptrAdagradOptions(C._wrap_Adagrad_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAdagrad) Save(arg2 Torch_serialize_OutputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adagrad_save_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdagrad) Load(arg2 Torch_serialize_InputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adagrad_load_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdagrad) SetSum_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adagrad_sum_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdagrad) GetSum_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Adagrad_sum_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAdagrad) SetStep_buffers(arg2 Std_vector_Sl_int64_t_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adagrad_step_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdagrad) GetStep_buffers() (_swig_ret Std_vector_Sl_int64_t_Sg_) {
	var swig_r Std_vector_Sl_int64_t_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_int64_t_Sg_)(SwigcptrStd_vector_Sl_int64_t_Sg_(C._wrap_Adagrad_step_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteAdagrad(arg1 Adagrad) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Adagrad_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrAdagrad) Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Adagrad_add_parameters_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrAdagrad) Zero_grad() {
	C._wrap_Adagrad_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrAdagrad) Parameters__SWIG_0() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Adagrad_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrAdagrad) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Adagrad_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrAdagrad) Parameters(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_0()
	}
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrAdagrad) Size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_Adagrad_size_swig_787f477e80c1f310(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrAdagrad) SwigIsOptimizer() {
}

func (p SwigcptrAdagrad) SwigGetOptimizer() Optimizer {
	return SwigcptrOptimizer(p.Swigcptr())
}

func (p SwigcptrAdagrad) SwigIsOptimizerBase() {
}

func (p SwigcptrAdagrad) SwigGetOptimizerBase() OptimizerBase {
	return SwigcptrOptimizerBase(p.Swigcptr())
}

type Adagrad interface {
	Swigcptr() uintptr
	SwigIsAdagrad()
	Step()
	SetOptions(arg2 AdagradOptions)
	GetOptions() (_swig_ret AdagradOptions)
	Save(arg2 Torch_serialize_OutputArchive)
	Load(arg2 Torch_serialize_InputArchive)
	SetSum_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetSum_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	SetStep_buffers(arg2 Std_vector_Sl_int64_t_Sg_)
	GetStep_buffers() (_swig_ret Std_vector_Sl_int64_t_Sg_)
	Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_)
	Zero_grad()
	Parameters(a ...interface{}) interface{}
	Size() (_swig_ret int64)
	SwigIsOptimizer()
	SwigGetOptimizer() Optimizer
	SwigIsOptimizerBase()
	SwigGetOptimizerBase() OptimizerBase
}

func Serialize__SWIG_0(arg1 Torch_serialize_OutputArchive, arg2 Std_string, arg3 Std_vector_Sl_int64_t_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_serialize__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func Serialize__SWIG_1(arg1 Torch_serialize_InputArchive, arg2 Std_string, arg3 Std_vector_Sl_int64_t_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_serialize__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func Serialize(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[0].(SwigcptrTorch_serialize_OutputArchive); !ok {
			goto check_1
		}
		Serialize__SWIG_0(a[0].(Torch_serialize_OutputArchive), a[1].(Std_string), a[2].(Std_vector_Sl_int64_t_Sg_))
		return
	}
check_1:
	if argc == 3 {
		Serialize__SWIG_1(a[0].(Torch_serialize_InputArchive), a[1].(Std_string), a[2].(Std_vector_Sl_int64_t_Sg_))
		return
	}
	panic("No match for overloaded function call")
}

type SwigcptrSGDOptions uintptr

func (p SwigcptrSGDOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSGDOptions) SwigIsSGDOptions() {
}

func NewSGDOptions(arg1 float64) (_swig_ret SGDOptions) {
	var swig_r SGDOptions
	_swig_i_0 := arg1
	swig_r = (SGDOptions)(SwigcptrSGDOptions(C._wrap_new_SGDOptions_swig_787f477e80c1f310(C.double(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSGDOptions) SetLearning_rate_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SGDOptions_learning_rate__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrSGDOptions) GetLearning_rate_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_SGDOptions_learning_rate__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSGDOptions) SetMomentum_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SGDOptions_momentum__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrSGDOptions) GetMomentum_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_SGDOptions_momentum__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSGDOptions) SetDampening_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SGDOptions_dampening__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrSGDOptions) GetDampening_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_SGDOptions_dampening__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSGDOptions) SetWeight_decay_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SGDOptions_weight_decay__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrSGDOptions) GetWeight_decay_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_SGDOptions_weight_decay__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSGDOptions) SetNesterov_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SGDOptions_nesterov__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSGDOptions) GetNesterov_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SGDOptions_nesterov__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteSGDOptions(arg1 SGDOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_SGDOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type SGDOptions interface {
	Swigcptr() uintptr
	SwigIsSGDOptions()
	SetLearning_rate_(arg2 float64)
	GetLearning_rate_() (_swig_ret float64)
	SetMomentum_(arg2 float64)
	GetMomentum_() (_swig_ret float64)
	SetDampening_(arg2 float64)
	GetDampening_() (_swig_ret float64)
	SetWeight_decay_(arg2 float64)
	GetWeight_decay_() (_swig_ret float64)
	SetNesterov_(arg2 bool)
	GetNesterov_() (_swig_ret bool)
}

type SwigcptrSGD uintptr

func (p SwigcptrSGD) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSGD) SwigIsSGD() {
}

func (arg1 SwigcptrSGD) Step() {
	_swig_i_0 := arg1
	C._wrap_SGD_step_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSGD) Save(arg2 Torch_optim_serialize_OutputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SGD_save_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSGD) Load(arg2 Torch_optim_serialize_InputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SGD_load_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSGD) SetOptions(arg2 SGDOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SGD_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSGD) GetOptions() (_swig_ret SGDOptions) {
	var swig_r SGDOptions
	_swig_i_0 := arg1
	swig_r = (SGDOptions)(SwigcptrSGDOptions(C._wrap_SGD_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSGD) SetMomentum_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SGD_momentum_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSGD) GetMomentum_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_SGD_momentum_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteSGD(arg1 SGD) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_SGD_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSGD) Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SGD_add_parameters_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSGD) Zero_grad() {
	C._wrap_SGD_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSGD) Parameters__SWIG_0() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_SGD_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrSGD) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_SGD_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrSGD) Parameters(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_0()
	}
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrSGD) Size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_SGD_size_swig_787f477e80c1f310(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrSGD) SwigIsOptimizer() {
}

func (p SwigcptrSGD) SwigGetOptimizer() Optimizer {
	return SwigcptrOptimizer(p.Swigcptr())
}

func (p SwigcptrSGD) SwigIsOptimizerBase() {
}

func (p SwigcptrSGD) SwigGetOptimizerBase() OptimizerBase {
	return SwigcptrOptimizerBase(p.Swigcptr())
}

type SGD interface {
	Swigcptr() uintptr
	SwigIsSGD()
	Step()
	Save(arg2 Torch_optim_serialize_OutputArchive)
	Load(arg2 Torch_optim_serialize_InputArchive)
	SetOptions(arg2 SGDOptions)
	GetOptions() (_swig_ret SGDOptions)
	SetMomentum_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetMomentum_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_)
	Zero_grad()
	Parameters(a ...interface{}) interface{}
	Size() (_swig_ret int64)
	SwigIsOptimizer()
	SwigGetOptimizer() Optimizer
	SwigIsOptimizerBase()
	SwigGetOptimizerBase() OptimizerBase
}

type SwigcptrAdamOptions uintptr

func (p SwigcptrAdamOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAdamOptions) SwigIsAdamOptions() {
}

func NewAdamOptions(arg1 float64) (_swig_ret AdamOptions) {
	var swig_r AdamOptions
	_swig_i_0 := arg1
	swig_r = (AdamOptions)(SwigcptrAdamOptions(C._wrap_new_AdamOptions_swig_787f477e80c1f310(C.double(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAdamOptions) SetLearning_rate_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdamOptions_learning_rate__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrAdamOptions) GetLearning_rate_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_AdamOptions_learning_rate__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAdamOptions) SetBeta1_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdamOptions_beta1__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrAdamOptions) GetBeta1_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_AdamOptions_beta1__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAdamOptions) SetBeta2_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdamOptions_beta2__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrAdamOptions) GetBeta2_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_AdamOptions_beta2__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAdamOptions) SetWeight_decay_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdamOptions_weight_decay__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrAdamOptions) GetWeight_decay_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_AdamOptions_weight_decay__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAdamOptions) SetEps_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdamOptions_eps__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrAdamOptions) GetEps_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_AdamOptions_eps__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrAdamOptions) SetAmsgrad_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_AdamOptions_amsgrad__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrAdamOptions) GetAmsgrad_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AdamOptions_amsgrad__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteAdamOptions(arg1 AdamOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_AdamOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type AdamOptions interface {
	Swigcptr() uintptr
	SwigIsAdamOptions()
	SetLearning_rate_(arg2 float64)
	GetLearning_rate_() (_swig_ret float64)
	SetBeta1_(arg2 float64)
	GetBeta1_() (_swig_ret float64)
	SetBeta2_(arg2 float64)
	GetBeta2_() (_swig_ret float64)
	SetWeight_decay_(arg2 float64)
	GetWeight_decay_() (_swig_ret float64)
	SetEps_(arg2 float64)
	GetEps_() (_swig_ret float64)
	SetAmsgrad_(arg2 bool)
	GetAmsgrad_() (_swig_ret bool)
}

type SwigcptrAdam uintptr

func (p SwigcptrAdam) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAdam) SwigIsAdam() {
}

func (arg1 SwigcptrAdam) Step() {
	_swig_i_0 := arg1
	C._wrap_Adam_step_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAdam) Save(arg2 Torch_optim_serialize_OutputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adam_save_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdam) Load(arg2 Torch_optim_serialize_InputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adam_load_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdam) SetOptions(arg2 AdamOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adam_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdam) GetOptions() (_swig_ret AdamOptions) {
	var swig_r AdamOptions
	_swig_i_0 := arg1
	swig_r = (AdamOptions)(SwigcptrAdamOptions(C._wrap_Adam_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAdam) SetStep_buffers(arg2 Std_vector_Sl_int64_t_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adam_step_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdam) GetStep_buffers() (_swig_ret Std_vector_Sl_int64_t_Sg_) {
	var swig_r Std_vector_Sl_int64_t_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_int64_t_Sg_)(SwigcptrStd_vector_Sl_int64_t_Sg_(C._wrap_Adam_step_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAdam) SetExp_average_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adam_exp_average_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdam) GetExp_average_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Adam_exp_average_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAdam) SetExp_average_sq_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adam_exp_average_sq_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdam) GetExp_average_sq_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Adam_exp_average_sq_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAdam) SetMax_exp_average_sq_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Adam_max_exp_average_sq_buffers_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAdam) GetMax_exp_average_sq_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Adam_max_exp_average_sq_buffers_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteAdam(arg1 Adam) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Adam_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrAdam) Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Adam_add_parameters_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrAdam) Zero_grad() {
	C._wrap_Adam_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrAdam) Parameters__SWIG_0() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Adam_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrAdam) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Adam_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrAdam) Parameters(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_0()
	}
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrAdam) Size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_Adam_size_swig_787f477e80c1f310(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrAdam) SwigIsOptimizer() {
}

func (p SwigcptrAdam) SwigGetOptimizer() Optimizer {
	return SwigcptrOptimizer(p.Swigcptr())
}

func (p SwigcptrAdam) SwigIsOptimizerBase() {
}

func (p SwigcptrAdam) SwigGetOptimizerBase() OptimizerBase {
	return SwigcptrOptimizerBase(p.Swigcptr())
}

type Adam interface {
	Swigcptr() uintptr
	SwigIsAdam()
	Step()
	Save(arg2 Torch_optim_serialize_OutputArchive)
	Load(arg2 Torch_optim_serialize_InputArchive)
	SetOptions(arg2 AdamOptions)
	GetOptions() (_swig_ret AdamOptions)
	SetStep_buffers(arg2 Std_vector_Sl_int64_t_Sg_)
	GetStep_buffers() (_swig_ret Std_vector_Sl_int64_t_Sg_)
	SetExp_average_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetExp_average_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	SetExp_average_sq_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetExp_average_sq_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	SetMax_exp_average_sq_buffers(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetMax_exp_average_sq_buffers() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_)
	Zero_grad()
	Parameters(a ...interface{}) interface{}
	Size() (_swig_ret int64)
	SwigIsOptimizer()
	SwigGetOptimizer() Optimizer
	SwigIsOptimizerBase()
	SwigGetOptimizerBase() OptimizerBase
}

type SwigcptrLBFGSOptions uintptr

func (p SwigcptrLBFGSOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLBFGSOptions) SwigIsLBFGSOptions() {
}

func NewLBFGSOptions(arg1 float64) (_swig_ret LBFGSOptions) {
	var swig_r LBFGSOptions
	_swig_i_0 := arg1
	swig_r = (LBFGSOptions)(SwigcptrLBFGSOptions(C._wrap_new_LBFGSOptions_swig_787f477e80c1f310(C.double(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGSOptions) SetLearning_rate_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LBFGSOptions_learning_rate__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrLBFGSOptions) GetLearning_rate_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_LBFGSOptions_learning_rate__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLBFGSOptions) SetMax_iter_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGSOptions_max_iter__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGSOptions) GetMax_iter_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_LBFGSOptions_max_iter__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGSOptions) SetMax_eval_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGSOptions_max_eval__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGSOptions) GetMax_eval_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_LBFGSOptions_max_eval__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGSOptions) SetTolerance_grad_(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LBFGSOptions_tolerance_grad__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrLBFGSOptions) GetTolerance_grad_() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_LBFGSOptions_tolerance_grad__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLBFGSOptions) SetTolerance_change_(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LBFGSOptions_tolerance_change__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrLBFGSOptions) GetTolerance_change_() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_LBFGSOptions_tolerance_change__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrLBFGSOptions) SetHistory_size_(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LBFGSOptions_history_size__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.swig_type_9(_swig_i_1))
}

func (arg1 SwigcptrLBFGSOptions) GetHistory_size_() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_LBFGSOptions_history_size__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteLBFGSOptions(arg1 LBFGSOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_LBFGSOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type LBFGSOptions interface {
	Swigcptr() uintptr
	SwigIsLBFGSOptions()
	SetLearning_rate_(arg2 float64)
	GetLearning_rate_() (_swig_ret float64)
	SetMax_iter_(arg2 Int64_t)
	GetMax_iter_() (_swig_ret Int64_t)
	SetMax_eval_(arg2 Int64_t)
	GetMax_eval_() (_swig_ret Int64_t)
	SetTolerance_grad_(arg2 float32)
	GetTolerance_grad_() (_swig_ret float32)
	SetTolerance_change_(arg2 float32)
	GetTolerance_change_() (_swig_ret float32)
	SetHistory_size_(arg2 int64)
	GetHistory_size_() (_swig_ret int64)
}

type SwigcptrLBFGS uintptr

func (p SwigcptrLBFGS) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLBFGS) SwigIsLBFGS() {
}

func (arg1 SwigcptrLBFGS) Step(arg2 Std_function_Sl_at_Tensor_Sp__SP__Sg_) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LBFGS_step_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetOptions(arg2 LBFGSOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetOptions() (_swig_ret LBFGSOptions) {
	var swig_r LBFGSOptions
	_swig_i_0 := arg1
	swig_r = (LBFGSOptions)(SwigcptrLBFGSOptions(C._wrap_LBFGS_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) Save(arg2 Torch_optim_serialize_OutputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_save_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) Load(arg2 Torch_optim_serialize_InputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_load_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) SetD(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_d_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetD() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LBFGS_d_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetH_diag(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_H_diag_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetH_diag() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LBFGS_H_diag_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetPrev_flat_grad(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_prev_flat_grad_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetPrev_flat_grad() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LBFGS_prev_flat_grad_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetT(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_t_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetT() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LBFGS_t_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetPrev_loss(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_prev_loss_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetPrev_loss() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LBFGS_prev_loss_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetRo(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_ro_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetRo() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_LBFGS_ro_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetAl(arg2 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_al_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetAl() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_LBFGS_al_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetOld_dirs(arg2 Std_deque_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_old_dirs_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetOld_dirs() (_swig_ret Std_deque_Sl_at_Tensor_Sg_) {
	var swig_r Std_deque_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_deque_Sl_at_Tensor_Sg_)(SwigcptrStd_deque_Sl_at_Tensor_Sg_(C._wrap_LBFGS_old_dirs_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetOld_stps(arg2 Std_deque_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_old_stps_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetOld_stps() (_swig_ret Std_deque_Sl_at_Tensor_Sg_) {
	var swig_r Std_deque_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_deque_Sl_at_Tensor_Sg_)(SwigcptrStd_deque_Sl_at_Tensor_Sg_(C._wrap_LBFGS_old_stps_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetFunc_evals(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_func_evals_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetFunc_evals() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_LBFGS_func_evals_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLBFGS) SetState_n_iter(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LBFGS_state_n_iter_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLBFGS) GetState_n_iter() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_LBFGS_state_n_iter_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteLBFGS(arg1 LBFGS) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_LBFGS_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLBFGS) Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_LBFGS_add_parameters_swig_787f477e80c1f310(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrLBFGS) Zero_grad() {
	C._wrap_LBFGS_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrLBFGS) Parameters__SWIG_0() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_LBFGS_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrLBFGS) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_LBFGS_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrLBFGS) Parameters(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_0()
	}
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrLBFGS) Size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_LBFGS_size_swig_787f477e80c1f310(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrLBFGS) SwigIsLossClosureOptimizer() {
}

func (p SwigcptrLBFGS) SwigGetLossClosureOptimizer() LossClosureOptimizer {
	return SwigcptrLossClosureOptimizer(p.Swigcptr())
}

func (p SwigcptrLBFGS) SwigIsOptimizerBase() {
}

func (p SwigcptrLBFGS) SwigGetOptimizerBase() OptimizerBase {
	return SwigcptrOptimizerBase(p.Swigcptr())
}

type LBFGS interface {
	Swigcptr() uintptr
	SwigIsLBFGS()
	Step(arg2 Std_function_Sl_at_Tensor_Sp__SP__Sg_) (_swig_ret At_Tensor)
	SetOptions(arg2 LBFGSOptions)
	GetOptions() (_swig_ret LBFGSOptions)
	Save(arg2 Torch_optim_serialize_OutputArchive)
	Load(arg2 Torch_optim_serialize_InputArchive)
	SetD(arg2 At_Tensor)
	GetD() (_swig_ret At_Tensor)
	SetH_diag(arg2 At_Tensor)
	GetH_diag() (_swig_ret At_Tensor)
	SetPrev_flat_grad(arg2 At_Tensor)
	GetPrev_flat_grad() (_swig_ret At_Tensor)
	SetT(arg2 At_Tensor)
	GetT() (_swig_ret At_Tensor)
	SetPrev_loss(arg2 At_Tensor)
	GetPrev_loss() (_swig_ret At_Tensor)
	SetRo(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetRo() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	SetAl(arg2 Std_vector_Sl_at_Tensor_Sg_)
	GetAl() (_swig_ret Std_vector_Sl_at_Tensor_Sg_)
	SetOld_dirs(arg2 Std_deque_Sl_at_Tensor_Sg_)
	GetOld_dirs() (_swig_ret Std_deque_Sl_at_Tensor_Sg_)
	SetOld_stps(arg2 Std_deque_Sl_at_Tensor_Sg_)
	GetOld_stps() (_swig_ret Std_deque_Sl_at_Tensor_Sg_)
	SetFunc_evals(arg2 Int64_t)
	GetFunc_evals() (_swig_ret Int64_t)
	SetState_n_iter(arg2 Int64_t)
	GetState_n_iter() (_swig_ret Int64_t)
	Add_parameters(arg1 Std_vector_Sl_at_Tensor_Sg_)
	Zero_grad()
	Parameters(a ...interface{}) interface{}
	Size() (_swig_ret int64)
	SwigIsLossClosureOptimizer()
	SwigGetLossClosureOptimizer() LossClosureOptimizer
	SwigIsOptimizerBase()
	SwigGetOptimizerBase() OptimizerBase
}

func Compile(arg1 Std_string) (_swig_ret Std_shared_ptr_Sl_torch_jit_script_CompilationUnit_Sg_) {
	var swig_r Std_shared_ptr_Sl_torch_jit_script_CompilationUnit_Sg_
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Std_shared_ptr_Sl_torch_jit_script_CompilationUnit_Sg_)(SwigcptrStd_shared_ptr_Sl_torch_jit_script_CompilationUnit_Sg_(C._wrap_compile_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type SwigcptrModule uintptr

func (p SwigcptrModule) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrModule) SwigIsModule() {
}

func NewModule__SWIG_0(arg1 Std_string) (_swig_ret Module) {
	var swig_r Module
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Module)(SwigcptrModule(C._wrap_new_Module__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewModule__SWIG_1() (_swig_ret Module) {
	var swig_r Module
	swig_r = (Module)(SwigcptrModule(C._wrap_new_Module__SWIG_1_swig_787f477e80c1f310()))
	return swig_r
}

func NewModule(a ...interface{}) Module {
	argc := len(a)
	if argc == 0 {
		return NewModule__SWIG_1()
	}
	if argc == 1 {
		return NewModule__SWIG_0(a[0].(Std_string))
	}
	panic("No match for overloaded function call")
}

func DeleteModule(arg1 Module) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Module_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrModule) Name() (_swig_ret Std_string) {
	var swig_r Std_string
	_swig_i_0 := arg1
	swig_r = (Std_string)(SwigcptrStd_string(C._wrap_Module_name_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrModule) Clone__SWIG_0(arg2 Optional_Sl_Device_Sg_) (_swig_ret Std_shared_ptr_Sl_torch_nn_Module_Sg_) {
	var swig_r Std_shared_ptr_Sl_torch_nn_Module_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Std_shared_ptr_Sl_torch_nn_Module_Sg_)(SwigcptrStd_shared_ptr_Sl_torch_nn_Module_Sg_(C._wrap_Module_clone__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrModule) Clone__SWIG_1() (_swig_ret Std_shared_ptr_Sl_torch_nn_Module_Sg_) {
	var swig_r Std_shared_ptr_Sl_torch_nn_Module_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_torch_nn_Module_Sg_)(SwigcptrStd_shared_ptr_Sl_torch_nn_Module_Sg_(C._wrap_Module_clone__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrModule) Clone(a ...interface{}) Std_shared_ptr_Sl_torch_nn_Module_Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Clone__SWIG_1()
	}
	if argc == 1 {
		return p.Clone__SWIG_0(a[0].(Optional_Sl_Device_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Apply__SWIG_0(arg2 Std_function_Sl_void_Sp_torch_nn_Module_SA__SP__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_apply__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) Apply__SWIG_1(arg2 Std_function_Sl_void_Sp_torch_nn_Module_SS_const_SA__SP__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_apply__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) Apply__SWIG_2(arg2 Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SA__SP__Sg_, arg3 Std_string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Module_apply__SWIG_2_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrModule) Apply__SWIG_3(arg2 Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SA__SP__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_apply__SWIG_3_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) Apply__SWIG_4(arg2 Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_, arg3 Std_string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Module_apply__SWIG_4_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrModule) Apply__SWIG_5(arg2 Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_apply__SWIG_5_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) Apply__SWIG_6(arg2 Std_function_Sl_void_Sp_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_apply__SWIG_6_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) Apply__SWIG_7(arg2 Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_, arg3 Std_string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Module_apply__SWIG_7_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrModule) Apply__SWIG_8(arg2 Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_apply__SWIG_8_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrModule) Apply(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrStd_function_Sl_void_Sp_torch_nn_Module_SA__SP__Sg_); !ok {
			goto check_1
		}
		p.Apply__SWIG_0(a[0].(Std_function_Sl_void_Sp_torch_nn_Module_SA__SP__Sg_))
		return
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(SwigcptrStd_function_Sl_void_Sp_torch_nn_Module_SS_const_SA__SP__Sg_); !ok {
			goto check_2
		}
		p.Apply__SWIG_1(a[0].(Std_function_Sl_void_Sp_torch_nn_Module_SS_const_SA__SP__Sg_))
		return
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SA__SP__Sg_); !ok {
			goto check_3
		}
		p.Apply__SWIG_3(a[0].(Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SA__SP__Sg_))
		return
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_); !ok {
			goto check_4
		}
		p.Apply__SWIG_5(a[0].(Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_))
		return
	}
check_4:
	if argc == 1 {
		if _, ok := a[0].(SwigcptrStd_function_Sl_void_Sp_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_); !ok {
			goto check_5
		}
		p.Apply__SWIG_6(a[0].(Std_function_Sl_void_Sp_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_))
		return
	}
check_5:
	if argc == 1 {
		p.Apply__SWIG_8(a[0].(Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_); !ok {
			goto check_7
		}
		p.Apply__SWIG_4(a[0].(Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_), a[1].(Std_string))
		return
	}
check_7:
	if argc == 2 {
		if _, ok := a[0].(SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_); !ok {
			goto check_8
		}
		p.Apply__SWIG_7(a[0].(Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_), a[1].(Std_string))
		return
	}
check_8:
	if argc == 2 {
		p.Apply__SWIG_2(a[0].(Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SA__SP__Sg_), a[1].(Std_string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Parameters__SWIG_0(arg2 bool) (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Module_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrModule) Parameters__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Module_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrModule) Parameters(a ...interface{}) Std_vector_Sl_at_Tensor_Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Parameters__SWIG_1()
	}
	if argc == 1 {
		return p.Parameters__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Named_parameters__SWIG_0(arg2 bool) (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_(C._wrap_Module_named_parameters__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrModule) Named_parameters__SWIG_1() (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_(C._wrap_Module_named_parameters__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrModule) Named_parameters(a ...interface{}) Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Named_parameters__SWIG_1()
	}
	if argc == 1 {
		return p.Named_parameters__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Buffers__SWIG_0(arg2 bool) (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Module_buffers__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrModule) Buffers__SWIG_1() (_swig_ret Std_vector_Sl_at_Tensor_Sg_) {
	var swig_r Std_vector_Sl_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_at_Tensor_Sg_)(SwigcptrStd_vector_Sl_at_Tensor_Sg_(C._wrap_Module_buffers__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrModule) Buffers(a ...interface{}) Std_vector_Sl_at_Tensor_Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Buffers__SWIG_1()
	}
	if argc == 1 {
		return p.Buffers__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Named_buffers__SWIG_0(arg2 bool) (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_(C._wrap_Module_named_buffers__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrModule) Named_buffers__SWIG_1() (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_
	_swig_i_0 := arg1
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_(C._wrap_Module_named_buffers__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrModule) Named_buffers(a ...interface{}) Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Named_buffers__SWIG_1()
	}
	if argc == 1 {
		return p.Named_buffers__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Modules__SWIG_0(arg2 bool) (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)(SwigcptrStd_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_(C._wrap_Module_modules__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrModule) Modules__SWIG_1() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)(SwigcptrStd_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_(C._wrap_Module_modules__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrModule) Modules(a ...interface{}) Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Modules__SWIG_1()
	}
	if argc == 1 {
		return p.Modules__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Named_modules__SWIG_0(arg2 Std_string, arg3 bool) (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_(C._wrap_Module_named_modules__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrModule) Named_modules__SWIG_1(arg2 Std_string) (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_(C._wrap_Module_named_modules__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrModule) Named_modules__SWIG_2() (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_(C._wrap_Module_named_modules__SWIG_2_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrModule) Named_modules(a ...interface{}) Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Named_modules__SWIG_2()
	}
	if argc == 1 {
		return p.Named_modules__SWIG_1(a[0].(Std_string))
	}
	if argc == 2 {
		return p.Named_modules__SWIG_0(a[0].(Std_string), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Children() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)(SwigcptrStd_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_(C._wrap_Module_children_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrModule) Named_children() (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_(C._wrap_Module_named_children_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrModule) Train__SWIG_0(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Module_train__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrModule) Train__SWIG_1() {
	_swig_i_0 := arg1
	C._wrap_Module_train__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrModule) Train(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Train__SWIG_1()
		return
	}
	if argc == 1 {
		p.Train__SWIG_0(a[0].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Eval() {
	_swig_i_0 := arg1
	C._wrap_Module_eval_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrModule) Is_training() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Module_is_training_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrModule) To__SWIG_0(arg2 Torch_Device, arg3 At_ScalarType, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_Module_to__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrModule) To__SWIG_1(arg2 Torch_Device, arg3 At_ScalarType) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Module_to__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrModule) To__SWIG_2(arg2 At_ScalarType, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_Module_to__SWIG_2_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrModule) To__SWIG_3(arg2 At_ScalarType) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_to__SWIG_3_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) To__SWIG_4(arg2 Torch_Device, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_Module_to__SWIG_4_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrModule) To__SWIG_5(arg2 Torch_Device) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_to__SWIG_5_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrModule) To(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrAt_ScalarType); !ok {
			goto check_1
		}
		p.To__SWIG_3(a[0].(At_ScalarType))
		return
	}
check_1:
	if argc == 1 {
		p.To__SWIG_5(a[0].(Torch_Device))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrTorch_Device); !ok {
			goto check_3
		}
		if _, ok := a[1].(SwigcptrAt_ScalarType); !ok {
			goto check_3
		}
		p.To__SWIG_1(a[0].(Torch_Device), a[1].(At_ScalarType))
		return
	}
check_3:
	if argc == 2 {
		if _, ok := a[0].(SwigcptrTorch_Device); !ok {
			goto check_4
		}
		p.To__SWIG_4(a[0].(Torch_Device), a[1].(bool))
		return
	}
check_4:
	if argc == 2 {
		p.To__SWIG_2(a[0].(At_ScalarType), a[1].(bool))
		return
	}
	if argc == 3 {
		p.To__SWIG_0(a[0].(Torch_Device), a[1].(At_ScalarType), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Zero_grad() {
	_swig_i_0 := arg1
	C._wrap_Module_zero_grad_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrModule) Save(arg2 Torch_serialize_OutputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_save_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) Load(arg2 Torch_serialize_InputArchive) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_load_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Module_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrModule) Is_serializable() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Module_is_serializable_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrModule) Register_parameter__SWIG_0(arg2 Std_string, arg3 At_Tensor, arg4 bool) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_Module_register_parameter__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrModule) Register_parameter__SWIG_1(arg2 Std_string, arg3 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_Module_register_parameter__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrModule) Register_parameter(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 2 {
		return p.Register_parameter__SWIG_1(a[0].(Std_string), a[1].(At_Tensor))
	}
	if argc == 3 {
		return p.Register_parameter__SWIG_0(a[0].(Std_string), a[1].(At_Tensor), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrModule) Register_buffer(arg2 Std_string, arg3 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_Module_register_buffer_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

type Module interface {
	Swigcptr() uintptr
	SwigIsModule()
	Name() (_swig_ret Std_string)
	Clone(a ...interface{}) Std_shared_ptr_Sl_torch_nn_Module_Sg_
	Apply(a ...interface{})
	Parameters(a ...interface{}) Std_vector_Sl_at_Tensor_Sg_
	Named_parameters(a ...interface{}) Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_
	Buffers(a ...interface{}) Std_vector_Sl_at_Tensor_Sg_
	Named_buffers(a ...interface{}) Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_
	Modules(a ...interface{}) Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	Named_modules(a ...interface{}) Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_
	Children() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)
	Named_children() (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_)
	Train(a ...interface{})
	Eval()
	Is_training() (_swig_ret bool)
	To(a ...interface{})
	Zero_grad()
	Save(arg2 Torch_serialize_OutputArchive)
	Load(arg2 Torch_serialize_InputArchive)
	Pretty_print(arg2 Std_ostream)
	Is_serializable() (_swig_ret bool)
	Register_parameter(a ...interface{}) At_Tensor
	Register_buffer(arg2 Std_string, arg3 At_Tensor) (_swig_ret At_Tensor)
}

type SwigcptrRNNOutput uintptr

func (p SwigcptrRNNOutput) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRNNOutput) SwigIsRNNOutput() {
}

func (arg1 SwigcptrRNNOutput) SetOutput(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNOutput_output_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNOutput) GetOutput() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_RNNOutput_output_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOutput) SetState(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNOutput_state_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNOutput) GetState() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_RNNOutput_state_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRNNOutput() (_swig_ret RNNOutput) {
	var swig_r RNNOutput
	swig_r = (RNNOutput)(SwigcptrRNNOutput(C._wrap_new_RNNOutput_swig_787f477e80c1f310()))
	return swig_r
}

func DeleteRNNOutput(arg1 RNNOutput) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RNNOutput_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type RNNOutput interface {
	Swigcptr() uintptr
	SwigIsRNNOutput()
	SetOutput(arg2 At_Tensor)
	GetOutput() (_swig_ret At_Tensor)
	SetState(arg2 At_Tensor)
	GetState() (_swig_ret At_Tensor)
}

type SwigcptrRNNOptionsBase uintptr

func (p SwigcptrRNNOptionsBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRNNOptionsBase) SwigIsRNNOptionsBase() {
}

func NewRNNOptionsBase(arg1 Int64_t, arg2 Int64_t) (_swig_ret RNNOptionsBase) {
	var swig_r RNNOptionsBase
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (RNNOptionsBase)(SwigcptrRNNOptionsBase(C._wrap_new_RNNOptionsBase_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func DeleteRNNOptionsBase(arg1 RNNOptionsBase) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RNNOptionsBase_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRNNOptionsBase) SetInput_size_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNOptionsBase_input_size__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNOptionsBase) GetInput_size_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_RNNOptionsBase_input_size__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOptionsBase) SetHidden_size_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNOptionsBase_hidden_size__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNOptionsBase) GetHidden_size_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_RNNOptionsBase_hidden_size__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOptionsBase) SetLayers_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNOptionsBase_layers__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNOptionsBase) GetLayers_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_RNNOptionsBase_layers__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOptionsBase) SetWith_bias_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptionsBase_with_bias__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRNNOptionsBase) GetWith_bias_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RNNOptionsBase_with_bias__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRNNOptionsBase) SetDropout_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptionsBase_dropout__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrRNNOptionsBase) GetDropout_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_RNNOptionsBase_dropout__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRNNOptionsBase) SetBidirectional_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptionsBase_bidirectional__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRNNOptionsBase) GetBidirectional_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RNNOptionsBase_bidirectional__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRNNOptionsBase) SetBatch_first_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptionsBase_batch_first__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRNNOptionsBase) GetBatch_first_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RNNOptionsBase_batch_first__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type RNNOptionsBase interface {
	Swigcptr() uintptr
	SwigIsRNNOptionsBase()
	SetInput_size_(arg2 Int64_t)
	GetInput_size_() (_swig_ret Int64_t)
	SetHidden_size_(arg2 Int64_t)
	GetHidden_size_() (_swig_ret Int64_t)
	SetLayers_(arg2 Int64_t)
	GetLayers_() (_swig_ret Int64_t)
	SetWith_bias_(arg2 bool)
	GetWith_bias_() (_swig_ret bool)
	SetDropout_(arg2 float64)
	GetDropout_() (_swig_ret float64)
	SetBidirectional_(arg2 bool)
	GetBidirectional_() (_swig_ret bool)
	SetBatch_first_(arg2 bool)
	GetBatch_first_() (_swig_ret bool)
}

type TorchNnRNNActivation int
func _swig_getRNNActivation_ReLU() (_swig_ret TorchNnRNNActivation) {
	var swig_r TorchNnRNNActivation
	swig_r = (TorchNnRNNActivation)(C._wrap_RNNActivation_ReLU_swig_787f477e80c1f310())
	return swig_r
}

var RNNActivation_ReLU TorchNnRNNActivation = _swig_getRNNActivation_ReLU()
func _swig_getRNNActivation_Tanh() (_swig_ret TorchNnRNNActivation) {
	var swig_r TorchNnRNNActivation
	swig_r = (TorchNnRNNActivation)(C._wrap_RNNActivation_Tanh_swig_787f477e80c1f310())
	return swig_r
}

var RNNActivation_Tanh TorchNnRNNActivation = _swig_getRNNActivation_Tanh()
type SwigcptrRNNOptions uintptr

func (p SwigcptrRNNOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRNNOptions) SwigIsRNNOptions() {
}

func NewRNNOptions(arg1 Int64_t, arg2 Int64_t) (_swig_ret RNNOptions) {
	var swig_r RNNOptions
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (RNNOptions)(SwigcptrRNNOptions(C._wrap_new_RNNOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) Tanh() (_swig_ret RNNOptions) {
	var swig_r RNNOptions
	_swig_i_0 := arg1
	swig_r = (RNNOptions)(SwigcptrRNNOptions(C._wrap_RNNOptions_tanh_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) Relu() (_swig_ret RNNOptions) {
	var swig_r RNNOptions
	_swig_i_0 := arg1
	swig_r = (RNNOptions)(SwigcptrRNNOptions(C._wrap_RNNOptions_relu_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) SetInput_size_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNOptions_input_size__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNOptions) GetInput_size_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_RNNOptions_input_size__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) SetHidden_size_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNOptions_hidden_size__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNOptions) GetHidden_size_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_RNNOptions_hidden_size__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) SetLayers_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNOptions_layers__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNOptions) GetLayers_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_RNNOptions_layers__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) SetWith_bias_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptions_with_bias__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRNNOptions) GetWith_bias_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RNNOptions_with_bias__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) SetDropout_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptions_dropout__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrRNNOptions) GetDropout_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_RNNOptions_dropout__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) SetBidirectional_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptions_bidirectional__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRNNOptions) GetBidirectional_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RNNOptions_bidirectional__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) SetBatch_first_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptions_batch_first__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRNNOptions) GetBatch_first_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RNNOptions_batch_first__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRNNOptions) SetActivation_(arg2 TorchNnRNNActivation) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RNNOptions_activation__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRNNOptions) GetActivation_() (_swig_ret TorchNnRNNActivation) {
	var swig_r TorchNnRNNActivation
	_swig_i_0 := arg1
	swig_r = (TorchNnRNNActivation)(C._wrap_RNNOptions_activation__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteRNNOptions(arg1 RNNOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RNNOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type RNNOptions interface {
	Swigcptr() uintptr
	SwigIsRNNOptions()
	Tanh() (_swig_ret RNNOptions)
	Relu() (_swig_ret RNNOptions)
	SetInput_size_(arg2 Int64_t)
	GetInput_size_() (_swig_ret Int64_t)
	SetHidden_size_(arg2 Int64_t)
	GetHidden_size_() (_swig_ret Int64_t)
	SetLayers_(arg2 Int64_t)
	GetLayers_() (_swig_ret Int64_t)
	SetWith_bias_(arg2 bool)
	GetWith_bias_() (_swig_ret bool)
	SetDropout_(arg2 float64)
	GetDropout_() (_swig_ret float64)
	SetBidirectional_(arg2 bool)
	GetBidirectional_() (_swig_ret bool)
	SetBatch_first_(arg2 bool)
	GetBatch_first_() (_swig_ret bool)
	SetActivation_(arg2 TorchNnRNNActivation)
	GetActivation_() (_swig_ret TorchNnRNNActivation)
}

type SwigcptrRNNImpl uintptr

func (p SwigcptrRNNImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRNNImpl) SwigIsRNNImpl() {
}

func NewRNNImpl__SWIG_0(arg1 Int64_t, arg2 Int64_t) (_swig_ret RNNImpl) {
	var swig_r RNNImpl
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (RNNImpl)(SwigcptrRNNImpl(C._wrap_new_RNNImpl__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewRNNImpl__SWIG_1(arg1 RNNOptions) (_swig_ret RNNImpl) {
	var swig_r RNNImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (RNNImpl)(SwigcptrRNNImpl(C._wrap_new_RNNImpl__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRNNImpl(a ...interface{}) RNNImpl {
	argc := len(a)
	if argc == 1 {
		return NewRNNImpl__SWIG_1(a[0].(RNNOptions))
	}
	if argc == 2 {
		return NewRNNImpl__SWIG_0(a[0].(Int64_t), a[1].(Int64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRNNImpl) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNImpl_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNImpl) Forward__SWIG_0(arg2 At_Tensor, arg3 At_Tensor) (_swig_ret RNNOutput) {
	var swig_r RNNOutput
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (RNNOutput)(SwigcptrRNNOutput(C._wrap_RNNImpl_forward__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrRNNImpl) Forward__SWIG_1(arg2 At_Tensor) (_swig_ret RNNOutput) {
	var swig_r RNNOutput
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (RNNOutput)(SwigcptrRNNOutput(C._wrap_RNNImpl_forward__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrRNNImpl) Forward(a ...interface{}) RNNOutput {
	argc := len(a)
	if argc == 1 {
		return p.Forward__SWIG_1(a[0].(At_Tensor))
	}
	if argc == 2 {
		return p.Forward__SWIG_0(a[0].(At_Tensor), a[1].(At_Tensor))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRNNImpl) SetOptions(arg2 RNNOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RNNImpl_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRNNImpl) GetOptions() (_swig_ret RNNOptions) {
	var swig_r RNNOptions
	_swig_i_0 := arg1
	swig_r = (RNNOptions)(SwigcptrRNNOptions(C._wrap_RNNImpl_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteRNNImpl(arg1 RNNImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RNNImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type RNNImpl interface {
	Swigcptr() uintptr
	SwigIsRNNImpl()
	Pretty_print(arg2 Std_ostream)
	Forward(a ...interface{}) RNNOutput
	SetOptions(arg2 RNNOptions)
	GetOptions() (_swig_ret RNNOptions)
}

func SetRNN(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_RNN_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetRNN() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_RNN_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrLSTMImpl uintptr

func (p SwigcptrLSTMImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLSTMImpl) SwigIsLSTMImpl() {
}

func NewLSTMImpl__SWIG_0(arg1 Int64_t, arg2 Int64_t) (_swig_ret LSTMImpl) {
	var swig_r LSTMImpl
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (LSTMImpl)(SwigcptrLSTMImpl(C._wrap_new_LSTMImpl__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewLSTMImpl__SWIG_1(arg1 RNNOptionsBase) (_swig_ret LSTMImpl) {
	var swig_r LSTMImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (LSTMImpl)(SwigcptrLSTMImpl(C._wrap_new_LSTMImpl__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewLSTMImpl(a ...interface{}) LSTMImpl {
	argc := len(a)
	if argc == 1 {
		return NewLSTMImpl__SWIG_1(a[0].(RNNOptionsBase))
	}
	if argc == 2 {
		return NewLSTMImpl__SWIG_0(a[0].(Int64_t), a[1].(Int64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrLSTMImpl) Forward__SWIG_0(arg2 At_Tensor, arg3 At_Tensor) (_swig_ret RNNOutput) {
	var swig_r RNNOutput
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (RNNOutput)(SwigcptrRNNOutput(C._wrap_LSTMImpl_forward__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrLSTMImpl) Forward__SWIG_1(arg2 At_Tensor) (_swig_ret RNNOutput) {
	var swig_r RNNOutput
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (RNNOutput)(SwigcptrRNNOutput(C._wrap_LSTMImpl_forward__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrLSTMImpl) Forward(a ...interface{}) RNNOutput {
	argc := len(a)
	if argc == 1 {
		return p.Forward__SWIG_1(a[0].(At_Tensor))
	}
	if argc == 2 {
		return p.Forward__SWIG_0(a[0].(At_Tensor), a[1].(At_Tensor))
	}
	panic("No match for overloaded function call")
}

func DeleteLSTMImpl(arg1 LSTMImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_LSTMImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type LSTMImpl interface {
	Swigcptr() uintptr
	SwigIsLSTMImpl()
	Forward(a ...interface{}) RNNOutput
}

func SetLSTM(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_LSTM_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetLSTM() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_LSTM_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrGRUImpl uintptr

func (p SwigcptrGRUImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGRUImpl) SwigIsGRUImpl() {
}

func NewGRUImpl__SWIG_0(arg1 Int64_t, arg2 Int64_t) (_swig_ret GRUImpl) {
	var swig_r GRUImpl
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (GRUImpl)(SwigcptrGRUImpl(C._wrap_new_GRUImpl__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewGRUImpl__SWIG_1(arg1 RNNOptionsBase) (_swig_ret GRUImpl) {
	var swig_r GRUImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (GRUImpl)(SwigcptrGRUImpl(C._wrap_new_GRUImpl__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewGRUImpl(a ...interface{}) GRUImpl {
	argc := len(a)
	if argc == 1 {
		return NewGRUImpl__SWIG_1(a[0].(RNNOptionsBase))
	}
	if argc == 2 {
		return NewGRUImpl__SWIG_0(a[0].(Int64_t), a[1].(Int64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrGRUImpl) Forward__SWIG_0(arg2 At_Tensor, arg3 At_Tensor) (_swig_ret RNNOutput) {
	var swig_r RNNOutput
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (RNNOutput)(SwigcptrRNNOutput(C._wrap_GRUImpl_forward__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrGRUImpl) Forward__SWIG_1(arg2 At_Tensor) (_swig_ret RNNOutput) {
	var swig_r RNNOutput
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (RNNOutput)(SwigcptrRNNOutput(C._wrap_GRUImpl_forward__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrGRUImpl) Forward(a ...interface{}) RNNOutput {
	argc := len(a)
	if argc == 1 {
		return p.Forward__SWIG_1(a[0].(At_Tensor))
	}
	if argc == 2 {
		return p.Forward__SWIG_0(a[0].(At_Tensor), a[1].(At_Tensor))
	}
	panic("No match for overloaded function call")
}

func DeleteGRUImpl(arg1 GRUImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GRUImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type GRUImpl interface {
	Swigcptr() uintptr
	SwigIsGRUImpl()
	Forward(a ...interface{}) RNNOutput
}

func SetGRU(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_GRU_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetGRU() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_GRU_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrConv1dImpl uintptr

func (p SwigcptrConv1dImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConv1dImpl) SwigIsConv1dImpl() {
}

func (arg1 SwigcptrConv1dImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_Conv1dImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewConv1dImpl() (_swig_ret Conv1dImpl) {
	var swig_r Conv1dImpl
	swig_r = (Conv1dImpl)(SwigcptrConv1dImpl(C._wrap_new_Conv1dImpl_swig_787f477e80c1f310()))
	return swig_r
}

func DeleteConv1dImpl(arg1 Conv1dImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Conv1dImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type Conv1dImpl interface {
	Swigcptr() uintptr
	SwigIsConv1dImpl()
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
}

func SetConv1d(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Conv1d_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetConv1d() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_Conv1d_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrConv2dImpl uintptr

func (p SwigcptrConv2dImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConv2dImpl) SwigIsConv2dImpl() {
}

func (arg1 SwigcptrConv2dImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_Conv2dImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewConv2dImpl() (_swig_ret Conv2dImpl) {
	var swig_r Conv2dImpl
	swig_r = (Conv2dImpl)(SwigcptrConv2dImpl(C._wrap_new_Conv2dImpl_swig_787f477e80c1f310()))
	return swig_r
}

func DeleteConv2dImpl(arg1 Conv2dImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Conv2dImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type Conv2dImpl interface {
	Swigcptr() uintptr
	SwigIsConv2dImpl()
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
}

func SetConv2d(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Conv2d_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetConv2d() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_Conv2d_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrConv3dImpl uintptr

func (p SwigcptrConv3dImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConv3dImpl) SwigIsConv3dImpl() {
}

func (arg1 SwigcptrConv3dImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_Conv3dImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewConv3dImpl() (_swig_ret Conv3dImpl) {
	var swig_r Conv3dImpl
	swig_r = (Conv3dImpl)(SwigcptrConv3dImpl(C._wrap_new_Conv3dImpl_swig_787f477e80c1f310()))
	return swig_r
}

func DeleteConv3dImpl(arg1 Conv3dImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Conv3dImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type Conv3dImpl interface {
	Swigcptr() uintptr
	SwigIsConv3dImpl()
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
}

func SetConv3d(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Conv3d_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetConv3d() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_Conv3d_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrFunctionalImpl uintptr

func (p SwigcptrFunctionalImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFunctionalImpl) SwigIsFunctionalImpl() {
}

func NewFunctionalImpl(arg1 Std_function_Sl_at_Tensor_Sp_at_Tensor_SP__Sg_) (_swig_ret FunctionalImpl) {
	var swig_r FunctionalImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (FunctionalImpl)(SwigcptrFunctionalImpl(C._wrap_new_FunctionalImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrFunctionalImpl) Reset() {
	_swig_i_0 := arg1
	C._wrap_FunctionalImpl_reset_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFunctionalImpl) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_FunctionalImpl_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrFunctionalImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_FunctionalImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFunctionalImpl) Is_serializable() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FunctionalImpl_is_serializable_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteFunctionalImpl(arg1 FunctionalImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FunctionalImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type FunctionalImpl interface {
	Swigcptr() uintptr
	SwigIsFunctionalImpl()
	Reset()
	Pretty_print(arg2 Std_ostream)
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
	Is_serializable() (_swig_ret bool)
}

func SetFunctional(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Functional_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetFunctional() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_Functional_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrLinearOptions uintptr

func (p SwigcptrLinearOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLinearOptions) SwigIsLinearOptions() {
}

func NewLinearOptions(arg1 Int64_t, arg2 Int64_t) (_swig_ret LinearOptions) {
	var swig_r LinearOptions
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (LinearOptions)(SwigcptrLinearOptions(C._wrap_new_LinearOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrLinearOptions) SetIn_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LinearOptions_in__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLinearOptions) GetIn_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_LinearOptions_in__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLinearOptions) SetOut_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LinearOptions_out__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLinearOptions) GetOut_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_LinearOptions_out__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLinearOptions) SetWith_bias_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LinearOptions_with_bias__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrLinearOptions) GetWith_bias_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_LinearOptions_with_bias__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteLinearOptions(arg1 LinearOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_LinearOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type LinearOptions interface {
	Swigcptr() uintptr
	SwigIsLinearOptions()
	SetIn_(arg2 Int64_t)
	GetIn_() (_swig_ret Int64_t)
	SetOut_(arg2 Int64_t)
	GetOut_() (_swig_ret Int64_t)
	SetWith_bias_(arg2 bool)
	GetWith_bias_() (_swig_ret bool)
}

type SwigcptrLinearImpl uintptr

func (p SwigcptrLinearImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLinearImpl) SwigIsLinearImpl() {
}

func NewLinearImpl__SWIG_0(arg1 Int64_t, arg2 Int64_t) (_swig_ret LinearImpl) {
	var swig_r LinearImpl
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (LinearImpl)(SwigcptrLinearImpl(C._wrap_new_LinearImpl__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewLinearImpl__SWIG_1(arg1 LinearOptions) (_swig_ret LinearImpl) {
	var swig_r LinearImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (LinearImpl)(SwigcptrLinearImpl(C._wrap_new_LinearImpl__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewLinearImpl(a ...interface{}) LinearImpl {
	argc := len(a)
	if argc == 1 {
		return NewLinearImpl__SWIG_1(a[0].(LinearOptions))
	}
	if argc == 2 {
		return NewLinearImpl__SWIG_0(a[0].(Int64_t), a[1].(Int64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrLinearImpl) Reset() {
	_swig_i_0 := arg1
	C._wrap_LinearImpl_reset_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLinearImpl) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LinearImpl_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLinearImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LinearImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrLinearImpl) SetOptions(arg2 LinearOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LinearImpl_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLinearImpl) GetOptions() (_swig_ret LinearOptions) {
	var swig_r LinearOptions
	_swig_i_0 := arg1
	swig_r = (LinearOptions)(SwigcptrLinearOptions(C._wrap_LinearImpl_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLinearImpl) SetWeight(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LinearImpl_weight_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLinearImpl) GetWeight() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LinearImpl_weight_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLinearImpl) SetBias(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_LinearImpl_bias_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrLinearImpl) GetBias() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_LinearImpl_bias_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteLinearImpl(arg1 LinearImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_LinearImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type LinearImpl interface {
	Swigcptr() uintptr
	SwigIsLinearImpl()
	Reset()
	Pretty_print(arg2 Std_ostream)
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
	SetOptions(arg2 LinearOptions)
	GetOptions() (_swig_ret LinearOptions)
	SetWeight(arg2 At_Tensor)
	GetWeight() (_swig_ret At_Tensor)
	SetBias(arg2 At_Tensor)
	GetBias() (_swig_ret At_Tensor)
}

func SetLinear(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Linear_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetLinear() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_Linear_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrSequentialImpl uintptr

func (p SwigcptrSequentialImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSequentialImpl) SwigIsSequentialImpl() {
}

func NewSequentialImpl__SWIG_0() (_swig_ret SequentialImpl) {
	var swig_r SequentialImpl
	swig_r = (SequentialImpl)(SwigcptrSequentialImpl(C._wrap_new_SequentialImpl__SWIG_0_swig_787f477e80c1f310()))
	return swig_r
}

func NewSequentialImpl__SWIG_2(arg1 uintptr) (_swig_ret SequentialImpl) {
	var swig_r SequentialImpl
	_swig_i_0 := arg1
	swig_r = (SequentialImpl)(SwigcptrSequentialImpl(C._wrap_new_SequentialImpl__SWIG_2_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSequentialImpl(a ...interface{}) SequentialImpl {
	argc := len(a)
	if argc == 0 {
		return NewSequentialImpl__SWIG_0()
	}
	if argc == 1 {
		return NewSequentialImpl__SWIG_2(a[0].(uintptr))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSequentialImpl) Clone__SWIG_0(arg2 Optional_Sl_Device_Sg_) (_swig_ret Std_shared_ptr_Sl_torch_nn_Module_Sg_) {
	var swig_r Std_shared_ptr_Sl_torch_nn_Module_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Std_shared_ptr_Sl_torch_nn_Module_Sg_)(SwigcptrStd_shared_ptr_Sl_torch_nn_Module_Sg_(C._wrap_SequentialImpl_clone__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSequentialImpl) Clone__SWIG_1() (_swig_ret Std_shared_ptr_Sl_torch_nn_Module_Sg_) {
	var swig_r Std_shared_ptr_Sl_torch_nn_Module_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_torch_nn_Module_Sg_)(SwigcptrStd_shared_ptr_Sl_torch_nn_Module_Sg_(C._wrap_SequentialImpl_clone__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrSequentialImpl) Clone(a ...interface{}) Std_shared_ptr_Sl_torch_nn_Module_Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Clone__SWIG_1()
	}
	if argc == 1 {
		return p.Clone__SWIG_0(a[0].(Optional_Sl_Device_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSequentialImpl) Reset() {
	_swig_i_0 := arg1
	C._wrap_SequentialImpl_reset_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSequentialImpl) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SequentialImpl_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSequentialImpl) Begin__SWIG_0() (_swig_ret Std_vector_Sl_AnyModule_Sg__iterator) {
	var swig_r Std_vector_Sl_AnyModule_Sg__iterator
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_AnyModule_Sg__iterator)(SwigcptrStd_vector_Sl_AnyModule_Sg__iterator(C._wrap_SequentialImpl_begin__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSequentialImpl) Begin__SWIG_1() (_swig_ret Std_vector_Sl_AnyModule_Sg__const_iterator) {
	var swig_r Std_vector_Sl_AnyModule_Sg__const_iterator
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_AnyModule_Sg__const_iterator)(SwigcptrStd_vector_Sl_AnyModule_Sg__const_iterator(C._wrap_SequentialImpl_begin__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrSequentialImpl) Begin(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Begin__SWIG_0()
	}
	if argc == 0 {
		return p.Begin__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSequentialImpl) End__SWIG_0() (_swig_ret Std_vector_Sl_AnyModule_Sg__iterator) {
	var swig_r Std_vector_Sl_AnyModule_Sg__iterator
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_AnyModule_Sg__iterator)(SwigcptrStd_vector_Sl_AnyModule_Sg__iterator(C._wrap_SequentialImpl_end__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSequentialImpl) End__SWIG_1() (_swig_ret Std_vector_Sl_AnyModule_Sg__const_iterator) {
	var swig_r Std_vector_Sl_AnyModule_Sg__const_iterator
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_AnyModule_Sg__const_iterator)(SwigcptrStd_vector_Sl_AnyModule_Sg__const_iterator(C._wrap_SequentialImpl_end__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrSequentialImpl) End(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.End__SWIG_0()
	}
	if argc == 0 {
		return p.End__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSequentialImpl) Ptr(arg2 int64) (_swig_ret Std_shared_ptr_Sl_torch_nn_Module_Sg_) {
	var swig_r Std_shared_ptr_Sl_torch_nn_Module_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_shared_ptr_Sl_torch_nn_Module_Sg_)(SwigcptrStd_shared_ptr_Sl_torch_nn_Module_Sg_(C._wrap_SequentialImpl_ptr_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.swig_type_12(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSequentialImpl) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SequentialImpl_size_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequentialImpl) Is_empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SequentialImpl_is_empty_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteSequentialImpl(arg1 SequentialImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_SequentialImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type SequentialImpl interface {
	Swigcptr() uintptr
	SwigIsSequentialImpl()
	Clone(a ...interface{}) Std_shared_ptr_Sl_torch_nn_Module_Sg_
	Reset()
	Pretty_print(arg2 Std_ostream)
	Begin(a ...interface{}) interface{}
	End(a ...interface{}) interface{}
	Ptr(arg2 int64) (_swig_ret Std_shared_ptr_Sl_torch_nn_Module_Sg_)
	Size() (_swig_ret int64)
	Is_empty() (_swig_ret bool)
}

func SetSequential(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Sequential_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetSequential() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_Sequential_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrNamedAnyModule uintptr

func (p SwigcptrNamedAnyModule) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrNamedAnyModule) SwigIsNamedAnyModule() {
}

func (arg1 SwigcptrNamedAnyModule) Name() (_swig_ret Std_string) {
	var swig_r Std_string
	_swig_i_0 := arg1
	swig_r = (Std_string)(SwigcptrStd_string(C._wrap_NamedAnyModule_name_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrNamedAnyModule) Module() (_swig_ret AnyModule) {
	var swig_r AnyModule
	_swig_i_0 := arg1
	swig_r = (AnyModule)(SwigcptrAnyModule(C._wrap_NamedAnyModule_module_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteNamedAnyModule(arg1 NamedAnyModule) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_NamedAnyModule_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type NamedAnyModule interface {
	Swigcptr() uintptr
	SwigIsNamedAnyModule()
	Name() (_swig_ret Std_string)
	Module() (_swig_ret AnyModule)
}

func Modules_ordered_dict(arg1 Std_initializer_list_Sl_torch_nn_NamedAnyModule_Sg_) (_swig_ret Torch_OrderedDict_Sl_std_string_Sc_AnyModule_Sg_) {
	var swig_r Torch_OrderedDict_Sl_std_string_Sc_AnyModule_Sg_
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Torch_OrderedDict_Sl_std_string_Sc_AnyModule_Sg_)(SwigcptrTorch_OrderedDict_Sl_std_string_Sc_AnyModule_Sg_(C._wrap_modules_ordered_dict_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type SwigcptrEmbeddingOptions uintptr

func (p SwigcptrEmbeddingOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEmbeddingOptions) SwigIsEmbeddingOptions() {
}

func NewEmbeddingOptions(arg1 Int64_t, arg2 Int64_t) (_swig_ret EmbeddingOptions) {
	var swig_r EmbeddingOptions
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (EmbeddingOptions)(SwigcptrEmbeddingOptions(C._wrap_new_EmbeddingOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrEmbeddingOptions) SetCount_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_EmbeddingOptions_count__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEmbeddingOptions) GetCount_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_EmbeddingOptions_count__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrEmbeddingOptions) SetDimension_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_EmbeddingOptions_dimension__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEmbeddingOptions) GetDimension_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_EmbeddingOptions_dimension__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteEmbeddingOptions(arg1 EmbeddingOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_EmbeddingOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type EmbeddingOptions interface {
	Swigcptr() uintptr
	SwigIsEmbeddingOptions()
	SetCount_(arg2 Int64_t)
	GetCount_() (_swig_ret Int64_t)
	SetDimension_(arg2 Int64_t)
	GetDimension_() (_swig_ret Int64_t)
}

type SwigcptrEmbeddingImpl uintptr

func (p SwigcptrEmbeddingImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEmbeddingImpl) SwigIsEmbeddingImpl() {
}

func NewEmbeddingImpl__SWIG_0(arg1 Int64_t, arg2 Int64_t) (_swig_ret EmbeddingImpl) {
	var swig_r EmbeddingImpl
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (EmbeddingImpl)(SwigcptrEmbeddingImpl(C._wrap_new_EmbeddingImpl__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewEmbeddingImpl__SWIG_1(arg1 EmbeddingOptions) (_swig_ret EmbeddingImpl) {
	var swig_r EmbeddingImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (EmbeddingImpl)(SwigcptrEmbeddingImpl(C._wrap_new_EmbeddingImpl__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewEmbeddingImpl(a ...interface{}) EmbeddingImpl {
	argc := len(a)
	if argc == 1 {
		return NewEmbeddingImpl__SWIG_1(a[0].(EmbeddingOptions))
	}
	if argc == 2 {
		return NewEmbeddingImpl__SWIG_0(a[0].(Int64_t), a[1].(Int64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrEmbeddingImpl) Reset() {
	_swig_i_0 := arg1
	C._wrap_EmbeddingImpl_reset_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrEmbeddingImpl) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_EmbeddingImpl_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEmbeddingImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_EmbeddingImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrEmbeddingImpl) SetOptions(arg2 EmbeddingOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_EmbeddingImpl_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEmbeddingImpl) GetOptions() (_swig_ret EmbeddingOptions) {
	var swig_r EmbeddingOptions
	_swig_i_0 := arg1
	swig_r = (EmbeddingOptions)(SwigcptrEmbeddingOptions(C._wrap_EmbeddingImpl_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrEmbeddingImpl) SetWeight(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_EmbeddingImpl_weight_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEmbeddingImpl) GetWeight() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_EmbeddingImpl_weight_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteEmbeddingImpl(arg1 EmbeddingImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_EmbeddingImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type EmbeddingImpl interface {
	Swigcptr() uintptr
	SwigIsEmbeddingImpl()
	Reset()
	Pretty_print(arg2 Std_ostream)
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
	SetOptions(arg2 EmbeddingOptions)
	GetOptions() (_swig_ret EmbeddingOptions)
	SetWeight(arg2 At_Tensor)
	GetWeight() (_swig_ret At_Tensor)
}

func SetEmbedding(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Embedding_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetEmbedding() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_Embedding_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrBatchNormOptions uintptr

func (p SwigcptrBatchNormOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBatchNormOptions) SwigIsBatchNormOptions() {
}

func NewBatchNormOptions(arg1 Int64_t) (_swig_ret BatchNormOptions) {
	var swig_r BatchNormOptions
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (BatchNormOptions)(SwigcptrBatchNormOptions(C._wrap_new_BatchNormOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBatchNormOptions) SetFeatures_(arg2 Int64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_BatchNormOptions_features__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBatchNormOptions) GetFeatures_() (_swig_ret Int64_t) {
	var swig_r Int64_t
	_swig_i_0 := arg1
	swig_r = (Int64_t)(SwigcptrInt64_t(C._wrap_BatchNormOptions_features__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBatchNormOptions) SetAffine_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BatchNormOptions_affine__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrBatchNormOptions) GetAffine_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BatchNormOptions_affine__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBatchNormOptions) SetStateful_(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BatchNormOptions_stateful__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrBatchNormOptions) GetStateful_() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BatchNormOptions_stateful__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBatchNormOptions) SetEps_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BatchNormOptions_eps__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrBatchNormOptions) GetEps_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_BatchNormOptions_eps__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBatchNormOptions) SetMomentum_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BatchNormOptions_momentum__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrBatchNormOptions) GetMomentum_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_BatchNormOptions_momentum__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteBatchNormOptions(arg1 BatchNormOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_BatchNormOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type BatchNormOptions interface {
	Swigcptr() uintptr
	SwigIsBatchNormOptions()
	SetFeatures_(arg2 Int64_t)
	GetFeatures_() (_swig_ret Int64_t)
	SetAffine_(arg2 bool)
	GetAffine_() (_swig_ret bool)
	SetStateful_(arg2 bool)
	GetStateful_() (_swig_ret bool)
	SetEps_(arg2 float64)
	GetEps_() (_swig_ret float64)
	SetMomentum_(arg2 float64)
	GetMomentum_() (_swig_ret float64)
}

type SwigcptrBatchNormImpl uintptr

func (p SwigcptrBatchNormImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBatchNormImpl) SwigIsBatchNormImpl() {
}

func NewBatchNormImpl__SWIG_0(arg1 Int64_t) (_swig_ret BatchNormImpl) {
	var swig_r BatchNormImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (BatchNormImpl)(SwigcptrBatchNormImpl(C._wrap_new_BatchNormImpl__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewBatchNormImpl__SWIG_1(arg1 BatchNormOptions) (_swig_ret BatchNormImpl) {
	var swig_r BatchNormImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (BatchNormImpl)(SwigcptrBatchNormImpl(C._wrap_new_BatchNormImpl__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewBatchNormImpl(a ...interface{}) BatchNormImpl {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrInt64_t); !ok {
			goto check_1
		}
		return NewBatchNormImpl__SWIG_0(a[0].(Int64_t))
	}
check_1:
	if argc == 1 {
		return NewBatchNormImpl__SWIG_1(a[0].(BatchNormOptions))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBatchNormImpl) Reset() {
	_swig_i_0 := arg1
	C._wrap_BatchNormImpl_reset_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrBatchNormImpl) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_BatchNormImpl_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBatchNormImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_BatchNormImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBatchNormImpl) Pure_forward(arg2 At_Tensor, arg3 At_Tensor, arg4 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_BatchNormImpl_pure_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrBatchNormImpl) SetOptions(arg2 BatchNormOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_BatchNormImpl_options_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBatchNormImpl) GetOptions() (_swig_ret BatchNormOptions) {
	var swig_r BatchNormOptions
	_swig_i_0 := arg1
	swig_r = (BatchNormOptions)(SwigcptrBatchNormOptions(C._wrap_BatchNormImpl_options_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBatchNormImpl) SetWeight(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_BatchNormImpl_weight_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBatchNormImpl) GetWeight() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_BatchNormImpl_weight_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBatchNormImpl) SetBias(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_BatchNormImpl_bias_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBatchNormImpl) GetBias() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_BatchNormImpl_bias_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBatchNormImpl) SetRunning_mean(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_BatchNormImpl_running_mean_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBatchNormImpl) GetRunning_mean() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_BatchNormImpl_running_mean_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBatchNormImpl) SetRunning_var(arg2 At_Tensor) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_BatchNormImpl_running_var_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBatchNormImpl) GetRunning_var() (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_BatchNormImpl_running_var_get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteBatchNormImpl(arg1 BatchNormImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_BatchNormImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type BatchNormImpl interface {
	Swigcptr() uintptr
	SwigIsBatchNormImpl()
	Reset()
	Pretty_print(arg2 Std_ostream)
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
	Pure_forward(arg2 At_Tensor, arg3 At_Tensor, arg4 At_Tensor) (_swig_ret At_Tensor)
	SetOptions(arg2 BatchNormOptions)
	GetOptions() (_swig_ret BatchNormOptions)
	SetWeight(arg2 At_Tensor)
	GetWeight() (_swig_ret At_Tensor)
	SetBias(arg2 At_Tensor)
	GetBias() (_swig_ret At_Tensor)
	SetRunning_mean(arg2 At_Tensor)
	GetRunning_mean() (_swig_ret At_Tensor)
	SetRunning_var(arg2 At_Tensor)
	GetRunning_var() (_swig_ret At_Tensor)
}

func SetBatchNorm(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_BatchNorm_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetBatchNorm() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_BatchNorm_get_swig_787f477e80c1f310()))
	return swig_r
}

type SwigcptrAnyModule uintptr

func (p SwigcptrAnyModule) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAnyModule) SwigIsAnyModule() {
}

func NewAnyModule__SWIG_0() (_swig_ret AnyModule) {
	var swig_r AnyModule
	swig_r = (AnyModule)(SwigcptrAnyModule(C._wrap_new_AnyModule__SWIG_0_swig_787f477e80c1f310()))
	return swig_r
}

func NewAnyModule__SWIG_4(arg1 uintptr) (_swig_ret AnyModule) {
	var swig_r AnyModule
	_swig_i_0 := arg1
	swig_r = (AnyModule)(SwigcptrAnyModule(C._wrap_new_AnyModule__SWIG_4_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewAnyModule__SWIG_5(arg1 AnyModule) (_swig_ret AnyModule) {
	var swig_r AnyModule
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (AnyModule)(SwigcptrAnyModule(C._wrap_new_AnyModule__SWIG_5_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewAnyModule(a ...interface{}) AnyModule {
	argc := len(a)
	if argc == 0 {
		return NewAnyModule__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_2
		}
		return NewAnyModule__SWIG_4(a[0].(uintptr))
	}
check_2:
	if argc == 1 {
		return NewAnyModule__SWIG_5(a[0].(AnyModule))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAnyModule) Clone__SWIG_0(arg2 Optional_Sl_Device_Sg_) (_swig_ret AnyModule) {
	var swig_r AnyModule
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (AnyModule)(SwigcptrAnyModule(C._wrap_AnyModule_clone__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrAnyModule) Clone__SWIG_1() (_swig_ret AnyModule) {
	var swig_r AnyModule
	_swig_i_0 := arg1
	swig_r = (AnyModule)(SwigcptrAnyModule(C._wrap_AnyModule_clone__SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrAnyModule) Clone(a ...interface{}) AnyModule {
	argc := len(a)
	if argc == 0 {
		return p.Clone__SWIG_1()
	}
	if argc == 1 {
		return p.Clone__SWIG_0(a[0].(Optional_Sl_Device_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAnyModule) Ptr() (_swig_ret Std_shared_ptr_Sl_torch_nn_Module_Sg_) {
	var swig_r Std_shared_ptr_Sl_torch_nn_Module_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_torch_nn_Module_Sg_)(SwigcptrStd_shared_ptr_Sl_torch_nn_Module_Sg_(C._wrap_AnyModule_ptr_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAnyModule) Type_info() (_swig_ret Std_type_info) {
	var swig_r Std_type_info
	_swig_i_0 := arg1
	swig_r = (Std_type_info)(SwigcptrStd_type_info(C._wrap_AnyModule_type_info_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrAnyModule) Is_empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_AnyModule_is_empty_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteAnyModule(arg1 AnyModule) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_AnyModule_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type AnyModule interface {
	Swigcptr() uintptr
	SwigIsAnyModule()
	Clone(a ...interface{}) AnyModule
	Ptr() (_swig_ret Std_shared_ptr_Sl_torch_nn_Module_Sg_)
	Type_info() (_swig_ret Std_type_info)
	Is_empty() (_swig_ret bool)
}

type SwigcptrDropoutOptions uintptr

func (p SwigcptrDropoutOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDropoutOptions) SwigIsDropoutOptions() {
}

func NewDropoutOptions__SWIG_0(arg1 float64) (_swig_ret DropoutOptions) {
	var swig_r DropoutOptions
	_swig_i_0 := arg1
	swig_r = (DropoutOptions)(SwigcptrDropoutOptions(C._wrap_new_DropoutOptions__SWIG_0_swig_787f477e80c1f310(C.double(_swig_i_0))))
	return swig_r
}

func NewDropoutOptions__SWIG_1() (_swig_ret DropoutOptions) {
	var swig_r DropoutOptions
	swig_r = (DropoutOptions)(SwigcptrDropoutOptions(C._wrap_new_DropoutOptions__SWIG_1_swig_787f477e80c1f310()))
	return swig_r
}

func NewDropoutOptions(a ...interface{}) DropoutOptions {
	argc := len(a)
	if argc == 0 {
		return NewDropoutOptions__SWIG_1()
	}
	if argc == 1 {
		return NewDropoutOptions__SWIG_0(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDropoutOptions) SetRate_(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DropoutOptions_rate__set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrDropoutOptions) GetRate_() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_DropoutOptions_rate__get_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteDropoutOptions(arg1 DropoutOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DropoutOptions_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type DropoutOptions interface {
	Swigcptr() uintptr
	SwigIsDropoutOptions()
	SetRate_(arg2 float64)
	GetRate_() (_swig_ret float64)
}

type SwigcptrDropoutImpl uintptr

func (p SwigcptrDropoutImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDropoutImpl) SwigIsDropoutImpl() {
}

func NewDropoutImpl__SWIG_0(arg1 DropoutOptions) (_swig_ret DropoutImpl) {
	var swig_r DropoutImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (DropoutImpl)(SwigcptrDropoutImpl(C._wrap_new_DropoutImpl__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDropoutImpl__SWIG_1() (_swig_ret DropoutImpl) {
	var swig_r DropoutImpl
	swig_r = (DropoutImpl)(SwigcptrDropoutImpl(C._wrap_new_DropoutImpl__SWIG_1_swig_787f477e80c1f310()))
	return swig_r
}

func NewDropoutImpl(a ...interface{}) DropoutImpl {
	argc := len(a)
	if argc == 0 {
		return NewDropoutImpl__SWIG_1()
	}
	if argc == 1 {
		return NewDropoutImpl__SWIG_0(a[0].(DropoutOptions))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDropoutImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_DropoutImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDropoutImpl) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DropoutImpl_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteDropoutImpl(arg1 DropoutImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DropoutImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type DropoutImpl interface {
	Swigcptr() uintptr
	SwigIsDropoutImpl()
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
	Pretty_print(arg2 Std_ostream)
}

type SwigcptrFeatureDropoutImpl uintptr

func (p SwigcptrFeatureDropoutImpl) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFeatureDropoutImpl) SwigIsFeatureDropoutImpl() {
}

func NewFeatureDropoutImpl__SWIG_0(arg1 DropoutOptions) (_swig_ret FeatureDropoutImpl) {
	var swig_r FeatureDropoutImpl
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (FeatureDropoutImpl)(SwigcptrFeatureDropoutImpl(C._wrap_new_FeatureDropoutImpl__SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewFeatureDropoutImpl__SWIG_1() (_swig_ret FeatureDropoutImpl) {
	var swig_r FeatureDropoutImpl
	swig_r = (FeatureDropoutImpl)(SwigcptrFeatureDropoutImpl(C._wrap_new_FeatureDropoutImpl__SWIG_1_swig_787f477e80c1f310()))
	return swig_r
}

func NewFeatureDropoutImpl(a ...interface{}) FeatureDropoutImpl {
	argc := len(a)
	if argc == 0 {
		return NewFeatureDropoutImpl__SWIG_1()
	}
	if argc == 1 {
		return NewFeatureDropoutImpl__SWIG_0(a[0].(DropoutOptions))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeatureDropoutImpl) Forward(arg2 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_FeatureDropoutImpl_forward_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFeatureDropoutImpl) Pretty_print(arg2 Std_ostream) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_FeatureDropoutImpl_pretty_print_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteFeatureDropoutImpl(arg1 FeatureDropoutImpl) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FeatureDropoutImpl_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

type FeatureDropoutImpl interface {
	Swigcptr() uintptr
	SwigIsFeatureDropoutImpl()
	Forward(arg2 At_Tensor) (_swig_ret At_Tensor)
	Pretty_print(arg2 Std_ostream)
}

func SetDropout(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Dropout_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetDropout() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_Dropout_get_swig_787f477e80c1f310()))
	return swig_r
}

func SetFeatureDropout(arg1 TORCH_MODULE) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_FeatureDropout_set_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))
}

func GetFeatureDropout() (_swig_ret TORCH_MODULE) {
	var swig_r TORCH_MODULE
	swig_r = (TORCH_MODULE)(SwigcptrTORCH_MODULE(C._wrap_FeatureDropout_get_swig_787f477e80c1f310()))
	return swig_r
}

type TorchNnInitNonlinearity int
func _swig_getNonlinearity_Linear() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_Linear_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_Linear TorchNnInitNonlinearity = _swig_getNonlinearity_Linear()
func _swig_getNonlinearity_Conv1D() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_Conv1D_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_Conv1D TorchNnInitNonlinearity = _swig_getNonlinearity_Conv1D()
func _swig_getNonlinearity_Conv2D() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_Conv2D_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_Conv2D TorchNnInitNonlinearity = _swig_getNonlinearity_Conv2D()
func _swig_getNonlinearity_Conv3D() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_Conv3D_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_Conv3D TorchNnInitNonlinearity = _swig_getNonlinearity_Conv3D()
func _swig_getNonlinearity_ConvTranspose1D() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_ConvTranspose1D_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_ConvTranspose1D TorchNnInitNonlinearity = _swig_getNonlinearity_ConvTranspose1D()
func _swig_getNonlinearity_ConvTranspose2D() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_ConvTranspose2D_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_ConvTranspose2D TorchNnInitNonlinearity = _swig_getNonlinearity_ConvTranspose2D()
func _swig_getNonlinearity_ConvTranspose3D() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_ConvTranspose3D_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_ConvTranspose3D TorchNnInitNonlinearity = _swig_getNonlinearity_ConvTranspose3D()
func _swig_getNonlinearity_Sigmoid() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_Sigmoid_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_Sigmoid TorchNnInitNonlinearity = _swig_getNonlinearity_Sigmoid()
func _swig_getNonlinearity_Tanh() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_Tanh_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_Tanh TorchNnInitNonlinearity = _swig_getNonlinearity_Tanh()
func _swig_getNonlinearity_ReLU() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_ReLU_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_ReLU TorchNnInitNonlinearity = _swig_getNonlinearity_ReLU()
func _swig_getNonlinearity_LeakyReLU() (_swig_ret TorchNnInitNonlinearity) {
	var swig_r TorchNnInitNonlinearity
	swig_r = (TorchNnInitNonlinearity)(C._wrap_Nonlinearity_LeakyReLU_swig_787f477e80c1f310())
	return swig_r
}

var Nonlinearity_LeakyReLU TorchNnInitNonlinearity = _swig_getNonlinearity_LeakyReLU()
type TorchNnInitFanMode int
func _swig_getFanMode_FanIn() (_swig_ret TorchNnInitFanMode) {
	var swig_r TorchNnInitFanMode
	swig_r = (TorchNnInitFanMode)(C._wrap_FanMode_FanIn_swig_787f477e80c1f310())
	return swig_r
}

var FanMode_FanIn TorchNnInitFanMode = _swig_getFanMode_FanIn()
func _swig_getFanMode_FanOut() (_swig_ret TorchNnInitFanMode) {
	var swig_r TorchNnInitFanMode
	swig_r = (TorchNnInitFanMode)(C._wrap_FanMode_FanOut_swig_787f477e80c1f310())
	return swig_r
}

var FanMode_FanOut TorchNnInitFanMode = _swig_getFanMode_FanOut()
func Calculate_gain__SWIG_0(arg1 TorchNnInitNonlinearity, arg2 float64) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_calculate_gain__SWIG_0_swig_787f477e80c1f310(C.swig_intgo(_swig_i_0), C.double(_swig_i_1)))
	return swig_r
}

func Calculate_gain__SWIG_1(arg1 TorchNnInitNonlinearity) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_calculate_gain__SWIG_1_swig_787f477e80c1f310(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func Calculate_gain(a ...interface{}) float64 {
	argc := len(a)
	if argc == 1 {
		return Calculate_gain__SWIG_1(a[0].(TorchNnInitNonlinearity))
	}
	if argc == 2 {
		return Calculate_gain__SWIG_0(a[0].(TorchNnInitNonlinearity), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func Constant_(arg1 At_Tensor, arg2 Scalar) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_constant__swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func Dirac_(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_dirac__swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Eye_(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_eye__swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Normal___SWIG_0(arg1 At_Tensor, arg2 float64, arg3 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_normal___SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func Normal___SWIG_1(arg1 At_Tensor, arg2 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_normal___SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func Normal___SWIG_2(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_normal___SWIG_2_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Normal_(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 1 {
		return Normal___SWIG_2(a[0].(At_Tensor))
	}
	if argc == 2 {
		return Normal___SWIG_1(a[0].(At_Tensor), a[1].(float64))
	}
	if argc == 3 {
		return Normal___SWIG_0(a[0].(At_Tensor), a[1].(float64), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

func Ones_(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_ones__swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Orthogonal___SWIG_0(arg1 At_Tensor, arg2 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_orthogonal___SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func Orthogonal___SWIG_1(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_orthogonal___SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Orthogonal_(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 1 {
		return Orthogonal___SWIG_1(a[0].(At_Tensor))
	}
	if argc == 2 {
		return Orthogonal___SWIG_0(a[0].(At_Tensor), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func Sparse___SWIG_0(arg1 At_Tensor, arg2 float64, arg3 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_sparse___SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func Sparse___SWIG_1(arg1 At_Tensor, arg2 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_sparse___SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func Sparse_(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 2 {
		return Sparse___SWIG_1(a[0].(At_Tensor), a[1].(float64))
	}
	if argc == 3 {
		return Sparse___SWIG_0(a[0].(At_Tensor), a[1].(float64), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

func Uniform___SWIG_0(arg1 At_Tensor, arg2 float64, arg3 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_uniform___SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func Uniform___SWIG_1(arg1 At_Tensor, arg2 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_uniform___SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func Uniform___SWIG_2(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_uniform___SWIG_2_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Uniform_(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 1 {
		return Uniform___SWIG_2(a[0].(At_Tensor))
	}
	if argc == 2 {
		return Uniform___SWIG_1(a[0].(At_Tensor), a[1].(float64))
	}
	if argc == 3 {
		return Uniform___SWIG_0(a[0].(At_Tensor), a[1].(float64), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

func Kaiming_normal___SWIG_0(arg1 At_Tensor, arg2 float64, arg3 TorchNnInitFanMode, arg4 TorchNnInitNonlinearity) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_kaiming_normal___SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func Kaiming_normal___SWIG_1(arg1 At_Tensor, arg2 float64, arg3 TorchNnInitFanMode) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_kaiming_normal___SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func Kaiming_normal___SWIG_2(arg1 At_Tensor, arg2 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_kaiming_normal___SWIG_2_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func Kaiming_normal___SWIG_3(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_kaiming_normal___SWIG_3_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Kaiming_normal_(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 1 {
		return Kaiming_normal___SWIG_3(a[0].(At_Tensor))
	}
	if argc == 2 {
		return Kaiming_normal___SWIG_2(a[0].(At_Tensor), a[1].(float64))
	}
	if argc == 3 {
		return Kaiming_normal___SWIG_1(a[0].(At_Tensor), a[1].(float64), a[2].(TorchNnInitFanMode))
	}
	if argc == 4 {
		return Kaiming_normal___SWIG_0(a[0].(At_Tensor), a[1].(float64), a[2].(TorchNnInitFanMode), a[3].(TorchNnInitNonlinearity))
	}
	panic("No match for overloaded function call")
}

func Kaiming_uniform___SWIG_0(arg1 At_Tensor, arg2 float64, arg3 TorchNnInitFanMode, arg4 TorchNnInitNonlinearity) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_kaiming_uniform___SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func Kaiming_uniform___SWIG_1(arg1 At_Tensor, arg2 float64, arg3 TorchNnInitFanMode) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_kaiming_uniform___SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func Kaiming_uniform___SWIG_2(arg1 At_Tensor, arg2 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_kaiming_uniform___SWIG_2_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func Kaiming_uniform___SWIG_3(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_kaiming_uniform___SWIG_3_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Kaiming_uniform_(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 1 {
		return Kaiming_uniform___SWIG_3(a[0].(At_Tensor))
	}
	if argc == 2 {
		return Kaiming_uniform___SWIG_2(a[0].(At_Tensor), a[1].(float64))
	}
	if argc == 3 {
		return Kaiming_uniform___SWIG_1(a[0].(At_Tensor), a[1].(float64), a[2].(TorchNnInitFanMode))
	}
	if argc == 4 {
		return Kaiming_uniform___SWIG_0(a[0].(At_Tensor), a[1].(float64), a[2].(TorchNnInitFanMode), a[3].(TorchNnInitNonlinearity))
	}
	panic("No match for overloaded function call")
}

func Xavier_normal___SWIG_0(arg1 At_Tensor, arg2 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_xavier_normal___SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func Xavier_normal___SWIG_1(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_xavier_normal___SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Xavier_normal_(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 1 {
		return Xavier_normal___SWIG_1(a[0].(At_Tensor))
	}
	if argc == 2 {
		return Xavier_normal___SWIG_0(a[0].(At_Tensor), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func Xavier_uniform___SWIG_0(arg1 At_Tensor, arg2 float64) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_xavier_uniform___SWIG_0_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func Xavier_uniform___SWIG_1(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_xavier_uniform___SWIG_1_swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func Xavier_uniform_(a ...interface{}) At_Tensor {
	argc := len(a)
	if argc == 1 {
		return Xavier_uniform___SWIG_1(a[0].(At_Tensor))
	}
	if argc == 2 {
		return Xavier_uniform___SWIG_0(a[0].(At_Tensor), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func Zeros_(arg1 At_Tensor) (_swig_ret At_Tensor) {
	var swig_r At_Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (At_Tensor)(SwigcptrAt_Tensor(C._wrap_zeros__swig_787f477e80c1f310(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func GetKUInt8() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kUInt8_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKInt8() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kInt8_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKInt16() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kInt16_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKInt32() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kInt32_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKInt64() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kInt64_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKFloat16() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kFloat16_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKFloat32() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kFloat32_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKFloat64() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kFloat64_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKU8() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kU8_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKI8() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kI8_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKI16() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kI16_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKI32() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kI32_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKI64() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kI64_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKF16() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kF16_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKF32() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kF32_get_swig_787f477e80c1f310()))
	return swig_r
}

func GetKF64() (_swig_ret C10_ScalarType) {
	var swig_r C10_ScalarType
	swig_r = (C10_ScalarType)(SwigcptrC10_ScalarType(C._wrap_kF64_get_swig_787f477e80c1f310()))
	return swig_r
}


type SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SA__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SA__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SA__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_torch_nn_Module_Sg_ uintptr
type Std_shared_ptr_Sl_torch_nn_Module_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_torch_nn_Module_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrInt64_t uintptr
type Int64_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrInt64_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_initializer_list_Sl_torch_nn_NamedAnyModule_Sg_ uintptr
type Std_initializer_list_Sl_torch_nn_NamedAnyModule_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_initializer_list_Sl_torch_nn_NamedAnyModule_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTorch_OrderedDict_Sl_std_string_Sc_AnyModule_Sg_ uintptr
type Torch_OrderedDict_Sl_std_string_Sc_AnyModule_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTorch_OrderedDict_Sl_std_string_Sc_AnyModule_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAt_Tensor uintptr
type At_Tensor interface {
	Swigcptr() uintptr;
}
func (p SwigcptrAt_Tensor) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAt_ScalarType uintptr
type At_ScalarType interface {
	Swigcptr() uintptr;
}
func (p SwigcptrAt_ScalarType) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTORCH_MODULE uintptr
type TORCH_MODULE interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTORCH_MODULE) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrC10_ScalarType uintptr
type C10_ScalarType interface {
	Swigcptr() uintptr;
}
func (p SwigcptrC10_ScalarType) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_int64_t_Sg_ uintptr
type Std_vector_Sl_int64_t_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_int64_t_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_torch_nn_Module_SA__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_torch_nn_Module_SA__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_void_Sp_torch_nn_Module_SA__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_ uintptr
type Std_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTorch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_ uintptr
type Torch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTorch_OrderedDict_Sl_std_string_Sc_std_shared_ptr_Sl_torch_nn_Module_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_torch_jit_script_CompilationUnit_Sg_ uintptr
type Std_shared_ptr_Sl_torch_jit_script_CompilationUnit_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_torch_jit_script_CompilationUnit_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_deque_Sl_at_Tensor_Sg_ uintptr
type Std_deque_Sl_at_Tensor_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_deque_Sl_at_Tensor_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_at_Tensor_Sg_ uintptr
type Std_vector_Sl_at_Tensor_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_at_Tensor_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_at_Tensor_Sp__SP__Sg_ uintptr
type Std_function_Sl_at_Tensor_Sp__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_at_Tensor_Sp__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTorch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_ uintptr
type Torch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTorch_OrderedDict_Sl_std_string_Sc_at_Tensor_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_at_Tensor_Sp_at_Tensor_SP__Sg_ uintptr
type Std_function_Sl_at_Tensor_Sp_at_Tensor_SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_at_Tensor_Sp_at_Tensor_SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTorch_optim_serialize_InputArchive uintptr
type Torch_optim_serialize_InputArchive interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTorch_optim_serialize_InputArchive) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTorch_optim_serialize_OutputArchive uintptr
type Torch_optim_serialize_OutputArchive interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTorch_optim_serialize_OutputArchive) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOutputArchive uintptr
type OutputArchive interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOutputArchive) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTorch_serialize_OutputArchive uintptr
type Torch_serialize_OutputArchive interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTorch_serialize_OutputArchive) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTorch_serialize_InputArchive uintptr
type Torch_serialize_InputArchive interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTorch_serialize_InputArchive) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_torch_nn_Module_SS_const_SA__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_std_string_SS_const_SA__Sc_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_void_Sp_std_string_SS_const_SA__Sc_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_AnyModule_Sg__iterator uintptr
type Std_vector_Sl_AnyModule_Sg__iterator interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_AnyModule_Sg__iterator) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_AnyModule_Sg__const_iterator uintptr
type Std_vector_Sl_AnyModule_Sg__const_iterator interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_AnyModule_Sg__const_iterator) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOptional_Sl_Device_Sg_ uintptr
type Optional_Sl_Device_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOptional_Sl_Device_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_void_Sp_std_shared_ptr_Sl_torch_nn_Module_Sg_const_SA__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_type_info uintptr
type Std_type_info interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_type_info) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_ostream uintptr
type Std_ostream interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_ostream) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_torch_nn_Module_SS_const_SA__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_torch_nn_Module_SS_const_SA__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_void_Sp_torch_nn_Module_SS_const_SA__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_string uintptr
type Std_string interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_string) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrScalar uintptr
type Scalar interface {
	Swigcptr() uintptr;
}
func (p SwigcptrScalar) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTorch_Device uintptr
type Torch_Device interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTorch_Device) Swigcptr() uintptr {
	return uintptr(p)
}

