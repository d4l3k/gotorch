/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: torch.i

#define SWIGMODULE swig

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include <torch/torch.h>

using namespace c10;
using namespace torch::serialize;
namespace torch{
namespace optim {
namespace serialize{
using OutputArchive = torch::serialize::OutputArchive;
using InputArchive = torch::serialize::InputArchive;
}
}
}

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_swig_787f477e80c1f310(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_swig_787f477e80c1f310(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_final_set_swig_787f477e80c1f310(OutputArchive *_swig_go_0) {
  OutputArchive arg1 ;
  OutputArchive *argp1 ;
  
  
  argp1 = (OutputArchive *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null OutputArchive");
  }
  arg1 = (OutputArchive)*argp1;
  
  
  torch::serialize::final = arg1;
  
}


OutputArchive *_wrap_final_get_swig_787f477e80c1f310() {
  OutputArchive result;
  OutputArchive *_swig_go_result;
  
  
  result = torch::serialize::final;
  *(OutputArchive **)&_swig_go_result = new OutputArchive(result); 
  return _swig_go_result;
}


long long _wrap_device_count_swig_787f477e80c1f310() {
  size_t result;
  long long _swig_go_result;
  
  
  result = torch::cuda::device_count();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_is_available_swig_787f477e80c1f310() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)torch::cuda::is_available();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_cudnn_is_available_swig_787f477e80c1f310() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)torch::cuda::cudnn_is_available();
  _swig_go_result = result; 
  return _swig_go_result;
}


torch::optim::detail::OptimizerBase *_wrap_new_OptimizerBase_swig_787f477e80c1f310(std::vector< at::Tensor > *_swig_go_0) {
  SwigValueWrapper< std::vector< at::Tensor > > arg1 ;
  std::vector< torch::Tensor > *argp1 ;
  torch::optim::detail::OptimizerBase *result = 0 ;
  torch::optim::detail::OptimizerBase *_swig_go_result;
  
  
  argp1 = (std::vector< torch::Tensor > *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null std::vector< torch::Tensor >");
  }
  arg1 = (std::vector< torch::Tensor >)*argp1;
  
  
  result = (torch::optim::detail::OptimizerBase *)new torch::optim::detail::OptimizerBase(arg1);
  *(torch::optim::detail::OptimizerBase **)&_swig_go_result = (torch::optim::detail::OptimizerBase *)result; 
  return _swig_go_result;
}


void _wrap_delete_OptimizerBase_swig_787f477e80c1f310(torch::optim::detail::OptimizerBase *_swig_go_0) {
  torch::optim::detail::OptimizerBase *arg1 = (torch::optim::detail::OptimizerBase *) 0 ;
  
  arg1 = *(torch::optim::detail::OptimizerBase **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_OptimizerBase_add_parameters_swig_787f477e80c1f310(torch::optim::detail::OptimizerBase *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::detail::OptimizerBase *arg1 = (torch::optim::detail::OptimizerBase *) 0 ;
  std::vector< torch::Tensor > *arg2 = 0 ;
  
  arg1 = *(torch::optim::detail::OptimizerBase **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  (arg1)->add_parameters((std::vector< torch::Tensor > const &)*arg2);
  
}


void _wrap_OptimizerBase_zero_grad_swig_787f477e80c1f310(torch::optim::detail::OptimizerBase *_swig_go_0) {
  torch::optim::detail::OptimizerBase *arg1 = (torch::optim::detail::OptimizerBase *) 0 ;
  
  arg1 = *(torch::optim::detail::OptimizerBase **)&_swig_go_0; 
  
  (arg1)->zero_grad();
  
}


std::vector< at::Tensor > *_wrap_OptimizerBase_parameters__SWIG_0_swig_787f477e80c1f310(torch::optim::detail::OptimizerBase *_swig_go_0) {
  torch::optim::detail::OptimizerBase *arg1 = (torch::optim::detail::OptimizerBase *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::detail::OptimizerBase **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *) &((torch::optim::detail::OptimizerBase const *)arg1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_OptimizerBase_parameters__SWIG_1_swig_787f477e80c1f310(torch::optim::detail::OptimizerBase *_swig_go_0) {
  torch::optim::detail::OptimizerBase *arg1 = (torch::optim::detail::OptimizerBase *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::detail::OptimizerBase **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *) &(arg1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_OptimizerBase_size_swig_787f477e80c1f310(torch::optim::detail::OptimizerBase *_swig_go_0) {
  torch::optim::detail::OptimizerBase *arg1 = (torch::optim::detail::OptimizerBase *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::detail::OptimizerBase **)&_swig_go_0; 
  
  result = ((torch::optim::detail::OptimizerBase const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_OptimizerBase_save_swig_787f477e80c1f310(torch::optim::detail::OptimizerBase *_swig_go_0, torch::serialize::OutputArchive *_swig_go_1) {
  torch::optim::detail::OptimizerBase *arg1 = (torch::optim::detail::OptimizerBase *) 0 ;
  torch::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::detail::OptimizerBase **)&_swig_go_0; 
  arg2 = *(torch::serialize::OutputArchive **)&_swig_go_1; 
  
  ((torch::optim::detail::OptimizerBase const *)arg1)->save(*arg2);
  
}


void _wrap_OptimizerBase_load_swig_787f477e80c1f310(torch::optim::detail::OptimizerBase *_swig_go_0, torch::serialize::InputArchive *_swig_go_1) {
  torch::optim::detail::OptimizerBase *arg1 = (torch::optim::detail::OptimizerBase *) 0 ;
  torch::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::detail::OptimizerBase **)&_swig_go_0; 
  arg2 = *(torch::serialize::InputArchive **)&_swig_go_1; 
  
  (arg1)->load(*arg2);
  
}


void _wrap_Optimizer_step_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  
  (arg1)->step();
  
}


void _wrap_delete_Optimizer_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Optimizer_add_parameters_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  std::vector< torch::Tensor > *arg2 = 0 ;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  (swig_b0)->add_parameters((std::vector< torch::Tensor > const &)*arg2);
  
}


void _wrap_Optimizer_zero_grad_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  (swig_b0)->zero_grad();
  
}


std::vector< at::Tensor > *_wrap_Optimizer_parameters__SWIG_0_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  result = (std::vector< torch::Tensor > *) &((torch::optim::detail::OptimizerBase const *)swig_b0)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_Optimizer_parameters__SWIG_1_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  result = (std::vector< torch::Tensor > *) &(swig_b0)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Optimizer_size_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  result = ((torch::optim::detail::OptimizerBase const *)swig_b0)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Optimizer_save_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0, torch::serialize::OutputArchive *_swig_go_1) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  torch::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  arg2 = *(torch::serialize::OutputArchive **)&_swig_go_1; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  ((torch::optim::detail::OptimizerBase const *)swig_b0)->save(*arg2);
  
}


void _wrap_Optimizer_load_swig_787f477e80c1f310(torch::optim::Optimizer *_swig_go_0, torch::serialize::InputArchive *_swig_go_1) {
  torch::optim::Optimizer *arg1 = (torch::optim::Optimizer *) 0 ;
  torch::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::Optimizer **)&_swig_go_0; 
  arg2 = *(torch::serialize::InputArchive **)&_swig_go_1; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  (swig_b0)->load(*arg2);
  
}


at::Tensor *_wrap_LossClosureOptimizer_step_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0, std::function< at::Tensor () > *_swig_go_1) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  SwigValueWrapper< std::function< at::Tensor () > > arg2 ;
  torch::optim::LossClosureOptimizer::LossClosure *argp2 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  
  argp2 = (torch::optim::LossClosureOptimizer::LossClosure *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::optim::LossClosureOptimizer::LossClosure");
  }
  arg2 = (torch::optim::LossClosureOptimizer::LossClosure)*argp2;
  
  
  result = (arg1)->step(arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


void _wrap_delete_LossClosureOptimizer_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_LossClosureOptimizer_add_parameters_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  std::vector< torch::Tensor > *arg2 = 0 ;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  (swig_b0)->add_parameters((std::vector< torch::Tensor > const &)*arg2);
  
}


void _wrap_LossClosureOptimizer_zero_grad_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  (swig_b0)->zero_grad();
  
}


std::vector< at::Tensor > *_wrap_LossClosureOptimizer_parameters__SWIG_0_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  result = (std::vector< torch::Tensor > *) &((torch::optim::detail::OptimizerBase const *)swig_b0)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_LossClosureOptimizer_parameters__SWIG_1_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  result = (std::vector< torch::Tensor > *) &(swig_b0)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LossClosureOptimizer_size_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  result = ((torch::optim::detail::OptimizerBase const *)swig_b0)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LossClosureOptimizer_save_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0, torch::serialize::OutputArchive *_swig_go_1) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  torch::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  arg2 = *(torch::serialize::OutputArchive **)&_swig_go_1; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  ((torch::optim::detail::OptimizerBase const *)swig_b0)->save(*arg2);
  
}


void _wrap_LossClosureOptimizer_load_swig_787f477e80c1f310(torch::optim::LossClosureOptimizer *_swig_go_0, torch::serialize::InputArchive *_swig_go_1) {
  torch::optim::LossClosureOptimizer *arg1 = (torch::optim::LossClosureOptimizer *) 0 ;
  torch::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::LossClosureOptimizer **)&_swig_go_0; 
  arg2 = *(torch::serialize::InputArchive **)&_swig_go_1; 
  
  torch::optim::detail::OptimizerBase *swig_b0 = (torch::optim::detail::OptimizerBase *)arg1;
  (swig_b0)->load(*arg2);
  
}


torch::optim::RMSpropOptions *_wrap_new_RMSpropOptions_swig_787f477e80c1f310(double _swig_go_0) {
  double arg1 ;
  torch::optim::RMSpropOptions *result = 0 ;
  torch::optim::RMSpropOptions *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  result = (torch::optim::RMSpropOptions *)new torch::optim::RMSpropOptions(arg1);
  *(torch::optim::RMSpropOptions **)&_swig_go_result = (torch::optim::RMSpropOptions *)result; 
  return _swig_go_result;
}


void _wrap_RMSpropOptions_learning_rate__set_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->learning_rate_ = arg2;
  
}


double _wrap_RMSpropOptions_learning_rate__get_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->learning_rate_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RMSpropOptions_alpha__set_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->alpha_ = arg2;
  
}


double _wrap_RMSpropOptions_alpha__get_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->alpha_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RMSpropOptions_eps__set_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->eps_ = arg2;
  
}


double _wrap_RMSpropOptions_eps__get_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->eps_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RMSpropOptions_weight_decay__set_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->weight_decay_ = arg2;
  
}


double _wrap_RMSpropOptions_weight_decay__get_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->weight_decay_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RMSpropOptions_momentum__set_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->momentum_ = arg2;
  
}


double _wrap_RMSpropOptions_momentum__get_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->momentum_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RMSpropOptions_centered__set_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0, bool _swig_go_1) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->centered_ = arg2;
  
}


bool _wrap_RMSpropOptions_centered__get_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->centered_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_RMSpropOptions_swig_787f477e80c1f310(torch::optim::RMSpropOptions *_swig_go_0) {
  torch::optim::RMSpropOptions *arg1 = (torch::optim::RMSpropOptions *) 0 ;
  
  arg1 = *(torch::optim::RMSpropOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_RMSprop_step_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  (arg1)->step();
  
}


void _wrap_RMSprop_options_set_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0, torch::optim::RMSpropOptions *_swig_go_1) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  torch::optim::RMSpropOptions *arg2 = (torch::optim::RMSpropOptions *) 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  arg2 = *(torch::optim::RMSpropOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::optim::RMSpropOptions *_wrap_RMSprop_options_get_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  torch::optim::RMSpropOptions *result = 0 ;
  torch::optim::RMSpropOptions *_swig_go_result;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  result = (torch::optim::RMSpropOptions *)& ((arg1)->options);
  *(torch::optim::RMSpropOptions **)&_swig_go_result = (torch::optim::RMSpropOptions *)result; 
  return _swig_go_result;
}


void _wrap_RMSprop_save_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0, torch::serialize::OutputArchive *_swig_go_1) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  torch::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  arg2 = *(torch::serialize::OutputArchive **)&_swig_go_1; 
  
  ((torch::optim::RMSprop const *)arg1)->save(*arg2);
  
}


void _wrap_RMSprop_load_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0, torch::serialize::InputArchive *_swig_go_1) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  torch::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  arg2 = *(torch::serialize::InputArchive **)&_swig_go_1; 
  
  (arg1)->load(*arg2);
  
}


void _wrap_RMSprop_square_average_buffers_set_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->square_average_buffers = *arg2;
  
}


std::vector< at::Tensor > *_wrap_RMSprop_square_average_buffers_get_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->square_average_buffers);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_RMSprop_momentum_buffers_set_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->momentum_buffers = *arg2;
  
}


std::vector< at::Tensor > *_wrap_RMSprop_momentum_buffers_get_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->momentum_buffers);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_RMSprop_grad_average_buffers_set_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->grad_average_buffers = *arg2;
  
}


std::vector< at::Tensor > *_wrap_RMSprop_grad_average_buffers_get_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->grad_average_buffers);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_delete_RMSprop_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_RMSprop_add_parameters_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *arg2 = 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->add_parameters((std::vector< torch::Tensor > const &)*arg2);
  
}


void _wrap_RMSprop_zero_grad_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->zero_grad();
  
}


std::vector< at::Tensor > *_wrap_RMSprop_parameters__SWIG_0_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &((torch::optim::detail::OptimizerBase const *)swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_RMSprop_parameters__SWIG_1_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &(swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_RMSprop_size_swig_787f477e80c1f310(torch::optim::RMSprop *_swig_go_0) {
  torch::optim::RMSprop *arg1 = (torch::optim::RMSprop *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::RMSprop **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = ((torch::optim::detail::OptimizerBase const *)swig_b1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


torch::optim::AdagradOptions *_wrap_new_AdagradOptions_swig_787f477e80c1f310(double _swig_go_0) {
  double arg1 ;
  torch::optim::AdagradOptions *result = 0 ;
  torch::optim::AdagradOptions *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  result = (torch::optim::AdagradOptions *)new torch::optim::AdagradOptions(arg1);
  *(torch::optim::AdagradOptions **)&_swig_go_result = (torch::optim::AdagradOptions *)result; 
  return _swig_go_result;
}


void _wrap_AdagradOptions_learning_rate__set_swig_787f477e80c1f310(torch::optim::AdagradOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::AdagradOptions *arg1 = (torch::optim::AdagradOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::AdagradOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->learning_rate_ = arg2;
  
}


double _wrap_AdagradOptions_learning_rate__get_swig_787f477e80c1f310(torch::optim::AdagradOptions *_swig_go_0) {
  torch::optim::AdagradOptions *arg1 = (torch::optim::AdagradOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::AdagradOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->learning_rate_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AdagradOptions_lr_decay__set_swig_787f477e80c1f310(torch::optim::AdagradOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::AdagradOptions *arg1 = (torch::optim::AdagradOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::AdagradOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->lr_decay_ = arg2;
  
}


double _wrap_AdagradOptions_lr_decay__get_swig_787f477e80c1f310(torch::optim::AdagradOptions *_swig_go_0) {
  torch::optim::AdagradOptions *arg1 = (torch::optim::AdagradOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::AdagradOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->lr_decay_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AdagradOptions_weight_decay__set_swig_787f477e80c1f310(torch::optim::AdagradOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::AdagradOptions *arg1 = (torch::optim::AdagradOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::AdagradOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->weight_decay_ = arg2;
  
}


double _wrap_AdagradOptions_weight_decay__get_swig_787f477e80c1f310(torch::optim::AdagradOptions *_swig_go_0) {
  torch::optim::AdagradOptions *arg1 = (torch::optim::AdagradOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::AdagradOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->weight_decay_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_AdagradOptions_swig_787f477e80c1f310(torch::optim::AdagradOptions *_swig_go_0) {
  torch::optim::AdagradOptions *arg1 = (torch::optim::AdagradOptions *) 0 ;
  
  arg1 = *(torch::optim::AdagradOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Adagrad_step_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  (arg1)->step();
  
}


void _wrap_Adagrad_options_set_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0, torch::optim::AdagradOptions *_swig_go_1) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  torch::optim::AdagradOptions *arg2 = (torch::optim::AdagradOptions *) 0 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  arg2 = *(torch::optim::AdagradOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::optim::AdagradOptions *_wrap_Adagrad_options_get_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  torch::optim::AdagradOptions *result = 0 ;
  torch::optim::AdagradOptions *_swig_go_result;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  result = (torch::optim::AdagradOptions *)& ((arg1)->options);
  *(torch::optim::AdagradOptions **)&_swig_go_result = (torch::optim::AdagradOptions *)result; 
  return _swig_go_result;
}


void _wrap_Adagrad_save_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0, torch::serialize::OutputArchive *_swig_go_1) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  torch::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  arg2 = *(torch::serialize::OutputArchive **)&_swig_go_1; 
  
  ((torch::optim::Adagrad const *)arg1)->save(*arg2);
  
}


void _wrap_Adagrad_load_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0, torch::serialize::InputArchive *_swig_go_1) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  torch::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  arg2 = *(torch::serialize::InputArchive **)&_swig_go_1; 
  
  (arg1)->load(*arg2);
  
}


void _wrap_Adagrad_sum_buffers_set_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->sum_buffers = *arg2;
  
}


std::vector< at::Tensor > *_wrap_Adagrad_sum_buffers_get_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->sum_buffers);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_Adagrad_step_buffers_set_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0, std::vector< int64_t > *_swig_go_1) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  std::vector< int64_t > arg2 ;
  std::vector< int64_t > *argp2 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  argp2 = (std::vector< int64_t > *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::vector< int64_t >");
  }
  arg2 = (std::vector< int64_t >)*argp2;
  
  
  if (arg1) (arg1)->step_buffers = arg2;
  
}


std::vector< int64_t > *_wrap_Adagrad_step_buffers_get_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  std::vector< int64_t > result;
  std::vector< int64_t > *_swig_go_result;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  result =  ((arg1)->step_buffers);
  *(std::vector< int64_t > **)&_swig_go_result = new std::vector< int64_t >(result); 
  return _swig_go_result;
}


void _wrap_delete_Adagrad_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Adagrad_add_parameters_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  std::vector< torch::Tensor > *arg2 = 0 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->add_parameters((std::vector< torch::Tensor > const &)*arg2);
  
}


void _wrap_Adagrad_zero_grad_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->zero_grad();
  
}


std::vector< at::Tensor > *_wrap_Adagrad_parameters__SWIG_0_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &((torch::optim::detail::OptimizerBase const *)swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_Adagrad_parameters__SWIG_1_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &(swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Adagrad_size_swig_787f477e80c1f310(torch::optim::Adagrad *_swig_go_0) {
  torch::optim::Adagrad *arg1 = (torch::optim::Adagrad *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::Adagrad **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = ((torch::optim::detail::OptimizerBase const *)swig_b1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_serialize__SWIG_0_swig_787f477e80c1f310(torch::serialize::OutputArchive *_swig_go_0, std::string *_swig_go_1, std::vector< int64_t > *_swig_go_2) {
  torch::serialize::OutputArchive *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< int64_t > *arg3 = 0 ;
  
  arg1 = *(torch::serialize::OutputArchive **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  arg3 = *(std::vector< int64_t > **)&_swig_go_2; 
  
  torch::optim::serialize(*arg1,(std::string const &)*arg2,(std::vector< int64_t > const &)*arg3);
  
}


void _wrap_serialize__SWIG_1_swig_787f477e80c1f310(torch::serialize::InputArchive *_swig_go_0, std::string *_swig_go_1, std::vector< int64_t > *_swig_go_2) {
  torch::serialize::InputArchive *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< int64_t > *arg3 = 0 ;
  
  arg1 = *(torch::serialize::InputArchive **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  arg3 = *(std::vector< int64_t > **)&_swig_go_2; 
  
  torch::optim::serialize(*arg1,(std::string const &)*arg2,*arg3);
  
}


torch::optim::SGDOptions *_wrap_new_SGDOptions_swig_787f477e80c1f310(double _swig_go_0) {
  double arg1 ;
  torch::optim::SGDOptions *result = 0 ;
  torch::optim::SGDOptions *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  result = (torch::optim::SGDOptions *)new torch::optim::SGDOptions(arg1);
  *(torch::optim::SGDOptions **)&_swig_go_result = (torch::optim::SGDOptions *)result; 
  return _swig_go_result;
}


void _wrap_SGDOptions_learning_rate__set_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->learning_rate_ = arg2;
  
}


double _wrap_SGDOptions_learning_rate__get_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->learning_rate_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SGDOptions_momentum__set_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->momentum_ = arg2;
  
}


double _wrap_SGDOptions_momentum__get_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->momentum_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SGDOptions_dampening__set_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->dampening_ = arg2;
  
}


double _wrap_SGDOptions_dampening__get_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->dampening_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SGDOptions_weight_decay__set_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->weight_decay_ = arg2;
  
}


double _wrap_SGDOptions_weight_decay__get_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->weight_decay_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SGDOptions_nesterov__set_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0, bool _swig_go_1) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->nesterov_ = arg2;
  
}


bool _wrap_SGDOptions_nesterov__get_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->nesterov_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_SGDOptions_swig_787f477e80c1f310(torch::optim::SGDOptions *_swig_go_0) {
  torch::optim::SGDOptions *arg1 = (torch::optim::SGDOptions *) 0 ;
  
  arg1 = *(torch::optim::SGDOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SGD_step_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  
  (arg1)->step();
  
}


void _wrap_SGD_save_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0, torch::optim::serialize::OutputArchive *_swig_go_1) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  torch::optim::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  arg2 = *(torch::optim::serialize::OutputArchive **)&_swig_go_1; 
  
  ((torch::optim::SGD const *)arg1)->save(*arg2);
  
}


void _wrap_SGD_load_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0, torch::optim::serialize::InputArchive *_swig_go_1) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  torch::optim::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  arg2 = *(torch::optim::serialize::InputArchive **)&_swig_go_1; 
  
  (arg1)->load(*arg2);
  
}


void _wrap_SGD_options_set_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0, torch::optim::SGDOptions *_swig_go_1) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  torch::optim::SGDOptions *arg2 = (torch::optim::SGDOptions *) 0 ;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  arg2 = *(torch::optim::SGDOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::optim::SGDOptions *_wrap_SGD_options_get_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  torch::optim::SGDOptions *result = 0 ;
  torch::optim::SGDOptions *_swig_go_result;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  
  result = (torch::optim::SGDOptions *)& ((arg1)->options);
  *(torch::optim::SGDOptions **)&_swig_go_result = (torch::optim::SGDOptions *)result; 
  return _swig_go_result;
}


void _wrap_SGD_momentum_buffers_set_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->momentum_buffers = *arg2;
  
}


std::vector< at::Tensor > *_wrap_SGD_momentum_buffers_get_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->momentum_buffers);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_delete_SGD_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SGD_add_parameters_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  std::vector< torch::Tensor > *arg2 = 0 ;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->add_parameters((std::vector< torch::Tensor > const &)*arg2);
  
}


void _wrap_SGD_zero_grad_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->zero_grad();
  
}


std::vector< at::Tensor > *_wrap_SGD_parameters__SWIG_0_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &((torch::optim::detail::OptimizerBase const *)swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_SGD_parameters__SWIG_1_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &(swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SGD_size_swig_787f477e80c1f310(torch::optim::SGD *_swig_go_0) {
  torch::optim::SGD *arg1 = (torch::optim::SGD *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::SGD **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = ((torch::optim::detail::OptimizerBase const *)swig_b1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


torch::optim::AdamOptions *_wrap_new_AdamOptions_swig_787f477e80c1f310(double _swig_go_0) {
  double arg1 ;
  torch::optim::AdamOptions *result = 0 ;
  torch::optim::AdamOptions *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  result = (torch::optim::AdamOptions *)new torch::optim::AdamOptions(arg1);
  *(torch::optim::AdamOptions **)&_swig_go_result = (torch::optim::AdamOptions *)result; 
  return _swig_go_result;
}


void _wrap_AdamOptions_learning_rate__set_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->learning_rate_ = arg2;
  
}


double _wrap_AdamOptions_learning_rate__get_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->learning_rate_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AdamOptions_beta1__set_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->beta1_ = arg2;
  
}


double _wrap_AdamOptions_beta1__get_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->beta1_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AdamOptions_beta2__set_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->beta2_ = arg2;
  
}


double _wrap_AdamOptions_beta2__get_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->beta2_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AdamOptions_weight_decay__set_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->weight_decay_ = arg2;
  
}


double _wrap_AdamOptions_weight_decay__get_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->weight_decay_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AdamOptions_eps__set_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->eps_ = arg2;
  
}


double _wrap_AdamOptions_eps__get_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->eps_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AdamOptions_amsgrad__set_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0, bool _swig_go_1) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->amsgrad_ = arg2;
  
}


bool _wrap_AdamOptions_amsgrad__get_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->amsgrad_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_AdamOptions_swig_787f477e80c1f310(torch::optim::AdamOptions *_swig_go_0) {
  torch::optim::AdamOptions *arg1 = (torch::optim::AdamOptions *) 0 ;
  
  arg1 = *(torch::optim::AdamOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Adam_step_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  (arg1)->step();
  
}


void _wrap_Adam_save_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0, torch::optim::serialize::OutputArchive *_swig_go_1) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  torch::optim::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  arg2 = *(torch::optim::serialize::OutputArchive **)&_swig_go_1; 
  
  ((torch::optim::Adam const *)arg1)->save(*arg2);
  
}


void _wrap_Adam_load_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0, torch::optim::serialize::InputArchive *_swig_go_1) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  torch::optim::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  arg2 = *(torch::optim::serialize::InputArchive **)&_swig_go_1; 
  
  (arg1)->load(*arg2);
  
}


void _wrap_Adam_options_set_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0, torch::optim::AdamOptions *_swig_go_1) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  torch::optim::AdamOptions *arg2 = (torch::optim::AdamOptions *) 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  arg2 = *(torch::optim::AdamOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::optim::AdamOptions *_wrap_Adam_options_get_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  torch::optim::AdamOptions *result = 0 ;
  torch::optim::AdamOptions *_swig_go_result;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  result = (torch::optim::AdamOptions *)& ((arg1)->options);
  *(torch::optim::AdamOptions **)&_swig_go_result = (torch::optim::AdamOptions *)result; 
  return _swig_go_result;
}


void _wrap_Adam_step_buffers_set_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0, std::vector< int64_t > *_swig_go_1) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< int64_t > arg2 ;
  std::vector< int64_t > *argp2 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  argp2 = (std::vector< int64_t > *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::vector< int64_t >");
  }
  arg2 = (std::vector< int64_t >)*argp2;
  
  
  if (arg1) (arg1)->step_buffers = arg2;
  
}


std::vector< int64_t > *_wrap_Adam_step_buffers_get_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< int64_t > result;
  std::vector< int64_t > *_swig_go_result;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  result =  ((arg1)->step_buffers);
  *(std::vector< int64_t > **)&_swig_go_result = new std::vector< int64_t >(result); 
  return _swig_go_result;
}


void _wrap_Adam_exp_average_buffers_set_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->exp_average_buffers = *arg2;
  
}


std::vector< at::Tensor > *_wrap_Adam_exp_average_buffers_get_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->exp_average_buffers);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_Adam_exp_average_sq_buffers_set_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->exp_average_sq_buffers = *arg2;
  
}


std::vector< at::Tensor > *_wrap_Adam_exp_average_sq_buffers_get_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->exp_average_sq_buffers);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_Adam_max_exp_average_sq_buffers_set_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->max_exp_average_sq_buffers = *arg2;
  
}


std::vector< at::Tensor > *_wrap_Adam_max_exp_average_sq_buffers_get_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->max_exp_average_sq_buffers);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_delete_Adam_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Adam_add_parameters_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *arg2 = 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->add_parameters((std::vector< torch::Tensor > const &)*arg2);
  
}


void _wrap_Adam_zero_grad_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->zero_grad();
  
}


std::vector< at::Tensor > *_wrap_Adam_parameters__SWIG_0_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &((torch::optim::detail::OptimizerBase const *)swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_Adam_parameters__SWIG_1_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &(swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Adam_size_swig_787f477e80c1f310(torch::optim::Adam *_swig_go_0) {
  torch::optim::Adam *arg1 = (torch::optim::Adam *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::Adam **)&_swig_go_0; 
  
  torch::optim::Optimizer *swig_b0 = (torch::optim::Optimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = ((torch::optim::detail::OptimizerBase const *)swig_b1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


torch::optim::LBFGSOptions *_wrap_new_LBFGSOptions_swig_787f477e80c1f310(double _swig_go_0) {
  double arg1 ;
  torch::optim::LBFGSOptions *result = 0 ;
  torch::optim::LBFGSOptions *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  result = (torch::optim::LBFGSOptions *)new torch::optim::LBFGSOptions(arg1);
  *(torch::optim::LBFGSOptions **)&_swig_go_result = (torch::optim::LBFGSOptions *)result; 
  return _swig_go_result;
}


void _wrap_LBFGSOptions_learning_rate__set_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0, double _swig_go_1) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->learning_rate_ = arg2;
  
}


double _wrap_LBFGSOptions_learning_rate__get_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->learning_rate_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LBFGSOptions_max_iter__set_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->max_iter_ = arg2;
  
}


int64_t *_wrap_LBFGSOptions_max_iter__get_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  result =  ((arg1)->max_iter_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_LBFGSOptions_max_eval__set_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->max_eval_ = arg2;
  
}


int64_t *_wrap_LBFGSOptions_max_eval__get_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  result =  ((arg1)->max_eval_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_LBFGSOptions_tolerance_grad__set_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0, float _swig_go_1) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  float arg2 ;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->tolerance_grad_ = arg2;
  
}


float _wrap_LBFGSOptions_tolerance_grad__get_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  result = (float) ((arg1)->tolerance_grad_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LBFGSOptions_tolerance_change__set_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0, float _swig_go_1) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  float arg2 ;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->tolerance_change_ = arg2;
  
}


float _wrap_LBFGSOptions_tolerance_change__get_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  result = (float) ((arg1)->tolerance_change_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LBFGSOptions_history_size__set_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0, long long _swig_go_1) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  size_t arg2 ;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->history_size_ = arg2;
  
}


long long _wrap_LBFGSOptions_history_size__get_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  result =  ((arg1)->history_size_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_LBFGSOptions_swig_787f477e80c1f310(torch::optim::LBFGSOptions *_swig_go_0) {
  torch::optim::LBFGSOptions *arg1 = (torch::optim::LBFGSOptions *) 0 ;
  
  arg1 = *(torch::optim::LBFGSOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


at::Tensor *_wrap_LBFGS_step_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, std::function< at::Tensor () > *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  SwigValueWrapper< std::function< at::Tensor () > > arg2 ;
  torch::optim::LossClosureOptimizer::LossClosure *argp2 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  argp2 = (torch::optim::LossClosureOptimizer::LossClosure *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::optim::LossClosureOptimizer::LossClosure");
  }
  arg2 = (torch::optim::LossClosureOptimizer::LossClosure)*argp2;
  
  
  result = (arg1)->step(arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


void _wrap_LBFGS_options_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, torch::optim::LBFGSOptions *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::optim::LBFGSOptions *arg2 = (torch::optim::LBFGSOptions *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(torch::optim::LBFGSOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::optim::LBFGSOptions *_wrap_LBFGS_options_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::optim::LBFGSOptions *result = 0 ;
  torch::optim::LBFGSOptions *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (torch::optim::LBFGSOptions *)& ((arg1)->options);
  *(torch::optim::LBFGSOptions **)&_swig_go_result = (torch::optim::LBFGSOptions *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_save_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, torch::optim::serialize::OutputArchive *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::optim::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(torch::optim::serialize::OutputArchive **)&_swig_go_1; 
  
  ((torch::optim::LBFGS const *)arg1)->save(*arg2);
  
}


void _wrap_LBFGS_load_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, torch::optim::serialize::InputArchive *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::optim::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(torch::optim::serialize::InputArchive **)&_swig_go_1; 
  
  (arg1)->load(*arg2);
  
}


void _wrap_LBFGS_d_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->d = *arg2;
  
}


at::Tensor *_wrap_LBFGS_d_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->d);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_H_diag_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->H_diag = *arg2;
  
}


at::Tensor *_wrap_LBFGS_H_diag_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->H_diag);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_prev_flat_grad_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->prev_flat_grad = *arg2;
  
}


at::Tensor *_wrap_LBFGS_prev_flat_grad_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->prev_flat_grad);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_t_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->t = *arg2;
  
}


at::Tensor *_wrap_LBFGS_t_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->t);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_prev_loss_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->prev_loss = *arg2;
  
}


at::Tensor *_wrap_LBFGS_prev_loss_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->prev_loss);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_ro_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->ro = *arg2;
  
}


std::vector< at::Tensor > *_wrap_LBFGS_ro_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->ro);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_al_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::vector< torch::Tensor > *arg2 = (std::vector< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->al = *arg2;
  
}


std::vector< at::Tensor > *_wrap_LBFGS_al_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (std::vector< torch::Tensor > *)& ((arg1)->al);
  *(std::vector< torch::Tensor > **)&_swig_go_result = (std::vector< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_old_dirs_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, std::deque< at::Tensor > *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::deque< torch::Tensor > *arg2 = (std::deque< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(std::deque< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->old_dirs = *arg2;
  
}


std::deque< at::Tensor > *_wrap_LBFGS_old_dirs_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::deque< torch::Tensor > *result = 0 ;
  std::deque< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (std::deque< torch::Tensor > *)& ((arg1)->old_dirs);
  *(std::deque< torch::Tensor > **)&_swig_go_result = (std::deque< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_old_stps_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, std::deque< at::Tensor > *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::deque< torch::Tensor > *arg2 = (std::deque< torch::Tensor > *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(std::deque< torch::Tensor > **)&_swig_go_1; 
  
  if (arg1) (arg1)->old_stps = *arg2;
  
}


std::deque< at::Tensor > *_wrap_LBFGS_old_stps_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::deque< torch::Tensor > *result = 0 ;
  std::deque< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result = (std::deque< torch::Tensor > *)& ((arg1)->old_stps);
  *(std::deque< torch::Tensor > **)&_swig_go_result = (std::deque< torch::Tensor > *)result; 
  return _swig_go_result;
}


void _wrap_LBFGS_func_evals_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, int64_t *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->func_evals = arg2;
  
}


int64_t *_wrap_LBFGS_func_evals_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result =  ((arg1)->func_evals);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_LBFGS_state_n_iter_set_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, int64_t *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->state_n_iter = arg2;
  
}


int64_t *_wrap_LBFGS_state_n_iter_get_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  result =  ((arg1)->state_n_iter);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_delete_LBFGS_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_LBFGS_add_parameters_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0, std::vector< at::Tensor > *_swig_go_1) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::vector< torch::Tensor > *arg2 = 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  arg2 = *(std::vector< torch::Tensor > **)&_swig_go_1; 
  
  torch::optim::LossClosureOptimizer *swig_b0 = (torch::optim::LossClosureOptimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->add_parameters((std::vector< torch::Tensor > const &)*arg2);
  
}


void _wrap_LBFGS_zero_grad_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  torch::optim::LossClosureOptimizer *swig_b0 = (torch::optim::LossClosureOptimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  (swig_b1)->zero_grad();
  
}


std::vector< at::Tensor > *_wrap_LBFGS_parameters__SWIG_0_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  torch::optim::LossClosureOptimizer *swig_b0 = (torch::optim::LossClosureOptimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &((torch::optim::detail::OptimizerBase const *)swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_LBFGS_parameters__SWIG_1_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  std::vector< torch::Tensor > *result = 0 ;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  torch::optim::LossClosureOptimizer *swig_b0 = (torch::optim::LossClosureOptimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = (std::vector< torch::Tensor > *) &(swig_b1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LBFGS_size_swig_787f477e80c1f310(torch::optim::LBFGS *_swig_go_0) {
  torch::optim::LBFGS *arg1 = (torch::optim::LBFGS *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::optim::LBFGS **)&_swig_go_0; 
  
  torch::optim::LossClosureOptimizer *swig_b0 = (torch::optim::LossClosureOptimizer *)arg1;
  torch::optim::detail::OptimizerBase *swig_b1 = (torch::optim::detail::OptimizerBase *)swig_b0;
  result = ((torch::optim::detail::OptimizerBase const *)swig_b1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


std::shared_ptr< torch::jit::script::CompilationUnit > *_wrap_compile_swig_787f477e80c1f310(std::string *_swig_go_0) {
  std::string *arg1 = 0 ;
  std::shared_ptr< torch::jit::script::CompilationUnit > result;
  std::shared_ptr< torch::jit::script::CompilationUnit > *_swig_go_result;
  
  arg1 = *(std::string **)&_swig_go_0; 
  
  result = torch::jit::compile((std::string const &)*arg1);
  *(std::shared_ptr< torch::jit::script::CompilationUnit > **)&_swig_go_result = new std::shared_ptr< torch::jit::script::CompilationUnit >(result); 
  return _swig_go_result;
}


torch::nn::Module *_wrap_new_Module__SWIG_0_swig_787f477e80c1f310(std::string *_swig_go_0) {
  std::string arg1 ;
  std::string *argp1 ;
  torch::nn::Module *result = 0 ;
  torch::nn::Module *_swig_go_result;
  
  
  argp1 = (std::string *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null std::string");
  }
  arg1 = (std::string)*argp1;
  
  
  result = (torch::nn::Module *)new torch::nn::Module(arg1);
  *(torch::nn::Module **)&_swig_go_result = (torch::nn::Module *)result; 
  return _swig_go_result;
}


torch::nn::Module *_wrap_new_Module__SWIG_1_swig_787f477e80c1f310() {
  torch::nn::Module *result = 0 ;
  torch::nn::Module *_swig_go_result;
  
  
  result = (torch::nn::Module *)new torch::nn::Module();
  *(torch::nn::Module **)&_swig_go_result = (torch::nn::Module *)result; 
  return _swig_go_result;
}


void _wrap_delete_Module_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  delete arg1;
  
}


std::string *_wrap_Module_name_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  std::string *result = 0 ;
  std::string *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = (std::string *) &((torch::nn::Module const *)arg1)->name();
  *(std::string **)&_swig_go_result = result; 
  return _swig_go_result;
}


std::shared_ptr< torch::nn::Module > *_wrap_Module_clone__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, optional< Device > *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  optional< Device > *arg2 = 0 ;
  SwigValueWrapper< std::shared_ptr< torch::nn::Module > > result;
  std::shared_ptr< torch::nn::Module > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(optional< Device > **)&_swig_go_1; 
  
  result = ((torch::nn::Module const *)arg1)->clone((optional< Device > const &)*arg2);
  *(std::shared_ptr< torch::nn::Module > **)&_swig_go_result = new std::shared_ptr< torch::nn::Module >(result); 
  return _swig_go_result;
}


std::shared_ptr< torch::nn::Module > *_wrap_Module_clone__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< std::shared_ptr< torch::nn::Module > > result;
  std::shared_ptr< torch::nn::Module > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->clone();
  *(std::shared_ptr< torch::nn::Module > **)&_swig_go_result = new std::shared_ptr< torch::nn::Module >(result); 
  return _swig_go_result;
}


void _wrap_Module_apply__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (torch::nn::Module &) > *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::ModuleApplyFunction *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::ModuleApplyFunction **)&_swig_go_1; 
  
  (arg1)->apply((torch::nn::Module::ModuleApplyFunction const &)*arg2);
  
}


void _wrap_Module_apply__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (torch::nn::Module const &) > *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::ConstModuleApplyFunction *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::ConstModuleApplyFunction **)&_swig_go_1; 
  
  ((torch::nn::Module const *)arg1)->apply((torch::nn::Module::ConstModuleApplyFunction const &)*arg2);
  
}


void _wrap_Module_apply__SWIG_2_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (std::string const &,torch::nn::Module &) > *_swig_go_1, std::string *_swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::NamedModuleApplyFunction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::NamedModuleApplyFunction **)&_swig_go_1; 
  arg3 = *(std::string **)&_swig_go_2; 
  
  (arg1)->apply((torch::nn::Module::NamedModuleApplyFunction const &)*arg2,(std::string const &)*arg3);
  
}


void _wrap_Module_apply__SWIG_3_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (std::string const &,torch::nn::Module &) > *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::NamedModuleApplyFunction *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::NamedModuleApplyFunction **)&_swig_go_1; 
  
  (arg1)->apply((torch::nn::Module::NamedModuleApplyFunction const &)*arg2);
  
}


void _wrap_Module_apply__SWIG_4_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (std::string const &,torch::nn::Module const &) > *_swig_go_1, std::string *_swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::ConstNamedModuleApplyFunction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::ConstNamedModuleApplyFunction **)&_swig_go_1; 
  arg3 = *(std::string **)&_swig_go_2; 
  
  ((torch::nn::Module const *)arg1)->apply((torch::nn::Module::ConstNamedModuleApplyFunction const &)*arg2,(std::string const &)*arg3);
  
}


void _wrap_Module_apply__SWIG_5_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (std::string const &,torch::nn::Module const &) > *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::ConstNamedModuleApplyFunction *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::ConstNamedModuleApplyFunction **)&_swig_go_1; 
  
  ((torch::nn::Module const *)arg1)->apply((torch::nn::Module::ConstNamedModuleApplyFunction const &)*arg2);
  
}


void _wrap_Module_apply__SWIG_6_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (std::shared_ptr< torch::nn::Module > const &) > *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::ModulePointerApplyFunction *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::ModulePointerApplyFunction **)&_swig_go_1; 
  
  ((torch::nn::Module const *)arg1)->apply((torch::nn::Module::ModulePointerApplyFunction const &)*arg2);
  
}


void _wrap_Module_apply__SWIG_7_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (std::string const &,std::shared_ptr< torch::nn::Module > const &) > *_swig_go_1, std::string *_swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::NamedModulePointerApplyFunction *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::NamedModulePointerApplyFunction **)&_swig_go_1; 
  arg3 = *(std::string **)&_swig_go_2; 
  
  ((torch::nn::Module const *)arg1)->apply((torch::nn::Module::NamedModulePointerApplyFunction const &)*arg2,(std::string const &)*arg3);
  
}


void _wrap_Module_apply__SWIG_8_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::function< void (std::string const &,std::shared_ptr< torch::nn::Module > const &) > *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::nn::Module::NamedModulePointerApplyFunction *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::nn::Module::NamedModulePointerApplyFunction **)&_swig_go_1; 
  
  ((torch::nn::Module const *)arg1)->apply((torch::nn::Module::NamedModulePointerApplyFunction const &)*arg2);
  
}


std::vector< at::Tensor > *_wrap_Module_parameters__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, bool _swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  bool arg2 ;
  SwigValueWrapper< std::vector< at::Tensor > > result;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = ((torch::nn::Module const *)arg1)->parameters(arg2);
  *(std::vector< torch::Tensor > **)&_swig_go_result = new std::vector< torch::Tensor >(result); 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_Module_parameters__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< std::vector< at::Tensor > > result;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->parameters();
  *(std::vector< torch::Tensor > **)&_swig_go_result = new std::vector< torch::Tensor >(result); 
  return _swig_go_result;
}


torch::OrderedDict< std::string,at::Tensor > *_wrap_Module_named_parameters__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, bool _swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  bool arg2 ;
  SwigValueWrapper< torch::OrderedDict< std::string,at::Tensor > > result;
  torch::OrderedDict< std::string,at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = ((torch::nn::Module const *)arg1)->named_parameters(arg2);
  *(torch::OrderedDict< std::string,torch::Tensor > **)&_swig_go_result = new torch::OrderedDict< std::string,torch::Tensor >(result); 
  return _swig_go_result;
}


torch::OrderedDict< std::string,at::Tensor > *_wrap_Module_named_parameters__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< torch::OrderedDict< std::string,at::Tensor > > result;
  torch::OrderedDict< std::string,at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->named_parameters();
  *(torch::OrderedDict< std::string,torch::Tensor > **)&_swig_go_result = new torch::OrderedDict< std::string,torch::Tensor >(result); 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_Module_buffers__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, bool _swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  bool arg2 ;
  SwigValueWrapper< std::vector< at::Tensor > > result;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = ((torch::nn::Module const *)arg1)->buffers(arg2);
  *(std::vector< torch::Tensor > **)&_swig_go_result = new std::vector< torch::Tensor >(result); 
  return _swig_go_result;
}


std::vector< at::Tensor > *_wrap_Module_buffers__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< std::vector< at::Tensor > > result;
  std::vector< at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->buffers();
  *(std::vector< torch::Tensor > **)&_swig_go_result = new std::vector< torch::Tensor >(result); 
  return _swig_go_result;
}


torch::OrderedDict< std::string,at::Tensor > *_wrap_Module_named_buffers__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, bool _swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  bool arg2 ;
  SwigValueWrapper< torch::OrderedDict< std::string,at::Tensor > > result;
  torch::OrderedDict< std::string,at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = ((torch::nn::Module const *)arg1)->named_buffers(arg2);
  *(torch::OrderedDict< std::string,torch::Tensor > **)&_swig_go_result = new torch::OrderedDict< std::string,torch::Tensor >(result); 
  return _swig_go_result;
}


torch::OrderedDict< std::string,at::Tensor > *_wrap_Module_named_buffers__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< torch::OrderedDict< std::string,at::Tensor > > result;
  torch::OrderedDict< std::string,at::Tensor > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->named_buffers();
  *(torch::OrderedDict< std::string,torch::Tensor > **)&_swig_go_result = new torch::OrderedDict< std::string,torch::Tensor >(result); 
  return _swig_go_result;
}


std::vector< std::shared_ptr< torch::nn::Module > > *_wrap_Module_modules__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, bool _swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  bool arg2 ;
  SwigValueWrapper< std::vector< std::shared_ptr< torch::nn::Module > > > result;
  std::vector< std::shared_ptr< torch::nn::Module > > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = ((torch::nn::Module const *)arg1)->modules(arg2);
  *(std::vector< std::shared_ptr< torch::nn::Module > > **)&_swig_go_result = new std::vector< std::shared_ptr< torch::nn::Module > >(result); 
  return _swig_go_result;
}


std::vector< std::shared_ptr< torch::nn::Module > > *_wrap_Module_modules__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< std::vector< std::shared_ptr< torch::nn::Module > > > result;
  std::vector< std::shared_ptr< torch::nn::Module > > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->modules();
  *(std::vector< std::shared_ptr< torch::nn::Module > > **)&_swig_go_result = new std::vector< std::shared_ptr< torch::nn::Module > >(result); 
  return _swig_go_result;
}


torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > *_wrap_Module_named_modules__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::string *_swig_go_1, bool _swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  std::string *arg2 = 0 ;
  bool arg3 ;
  SwigValueWrapper< torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > > result;
  torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = ((torch::nn::Module const *)arg1)->named_modules((std::string const &)*arg2,arg3);
  *(torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > **)&_swig_go_result = new torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > >(result); 
  return _swig_go_result;
}


torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > *_wrap_Module_named_modules__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::string *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  std::string *arg2 = 0 ;
  SwigValueWrapper< torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > > result;
  torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  
  result = ((torch::nn::Module const *)arg1)->named_modules((std::string const &)*arg2);
  *(torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > **)&_swig_go_result = new torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > >(result); 
  return _swig_go_result;
}


torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > *_wrap_Module_named_modules__SWIG_2_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > > result;
  torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->named_modules();
  *(torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > **)&_swig_go_result = new torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > >(result); 
  return _swig_go_result;
}


std::vector< std::shared_ptr< torch::nn::Module > > *_wrap_Module_children_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< std::vector< std::shared_ptr< torch::nn::Module > > > result;
  std::vector< std::shared_ptr< torch::nn::Module > > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->children();
  *(std::vector< std::shared_ptr< torch::nn::Module > > **)&_swig_go_result = new std::vector< std::shared_ptr< torch::nn::Module > >(result); 
  return _swig_go_result;
}


torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > *_wrap_Module_named_children_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  SwigValueWrapper< torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > > result;
  torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = ((torch::nn::Module const *)arg1)->named_children();
  *(torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > > **)&_swig_go_result = new torch::OrderedDict< std::string,std::shared_ptr< torch::nn::Module > >(result); 
  return _swig_go_result;
}


void _wrap_Module_train__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, bool _swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->train(arg2);
  
}


void _wrap_Module_train__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  (arg1)->train();
  
}


void _wrap_Module_eval_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  (arg1)->eval();
  
}


bool _wrap_Module_is_training_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = (bool)((torch::nn::Module const *)arg1)->is_training();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Module_to__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, torch::Device *_swig_go_1, at::ScalarType *_swig_go_2, bool _swig_go_3) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::Device arg2 ;
  torch::Dtype arg3 ;
  bool arg4 ;
  torch::Device *argp2 ;
  torch::Dtype *argp3 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (torch::Device *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Device");
  }
  arg2 = (torch::Device)*argp2;
  
  
  argp3 = (torch::Dtype *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Dtype");
  }
  arg3 = (torch::Dtype)*argp3;
  
  arg4 = (bool)_swig_go_3; 
  
  (arg1)->to(arg2,arg3,arg4);
  
}


void _wrap_Module_to__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, torch::Device *_swig_go_1, at::ScalarType *_swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::Device arg2 ;
  torch::Dtype arg3 ;
  torch::Device *argp2 ;
  torch::Dtype *argp3 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (torch::Device *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Device");
  }
  arg2 = (torch::Device)*argp2;
  
  
  argp3 = (torch::Dtype *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Dtype");
  }
  arg3 = (torch::Dtype)*argp3;
  
  
  (arg1)->to(arg2,arg3);
  
}


void _wrap_Module_to__SWIG_2_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, at::ScalarType *_swig_go_1, bool _swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::Dtype arg2 ;
  bool arg3 ;
  torch::Dtype *argp2 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (torch::Dtype *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Dtype");
  }
  arg2 = (torch::Dtype)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->to(arg2,arg3);
  
}


void _wrap_Module_to__SWIG_3_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, at::ScalarType *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::Dtype arg2 ;
  torch::Dtype *argp2 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (torch::Dtype *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Dtype");
  }
  arg2 = (torch::Dtype)*argp2;
  
  
  (arg1)->to(arg2);
  
}


void _wrap_Module_to__SWIG_4_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, torch::Device *_swig_go_1, bool _swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::Device arg2 ;
  bool arg3 ;
  torch::Device *argp2 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (torch::Device *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Device");
  }
  arg2 = (torch::Device)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->to(arg2,arg3);
  
}


void _wrap_Module_to__SWIG_5_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, torch::Device *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::Device arg2 ;
  torch::Device *argp2 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (torch::Device *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Device");
  }
  arg2 = (torch::Device)*argp2;
  
  
  (arg1)->to(arg2);
  
}


void _wrap_Module_zero_grad_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  (arg1)->zero_grad();
  
}


void _wrap_Module_save_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, torch::serialize::OutputArchive *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::serialize::OutputArchive *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::serialize::OutputArchive **)&_swig_go_1; 
  
  ((torch::nn::Module const *)arg1)->save(*arg2);
  
}


void _wrap_Module_load_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, torch::serialize::InputArchive *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  torch::serialize::InputArchive *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(torch::serialize::InputArchive **)&_swig_go_1; 
  
  (arg1)->load(*arg2);
  
}


void _wrap_Module_pretty_print_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::Module const *)arg1)->pretty_print(*arg2);
  
}


bool _wrap_Module_is_serializable_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  result = (bool)((torch::nn::Module const *)arg1)->is_serializable();
  _swig_go_result = result; 
  return _swig_go_result;
}


at::Tensor *_wrap_Module_register_parameter__SWIG_0_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::string *_swig_go_1, at::Tensor *_swig_go_2, bool _swig_go_3) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  std::string arg2 ;
  torch::Tensor arg3 ;
  bool arg4 ;
  std::string *argp2 ;
  torch::Tensor *argp3 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (std::string *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::string");
  }
  arg2 = (std::string)*argp2;
  
  
  argp3 = (torch::Tensor *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg3 = (torch::Tensor)*argp3;
  
  arg4 = (bool)_swig_go_3; 
  
  result = (torch::Tensor *) &(arg1)->register_parameter(arg2,arg3,arg4);
  *(torch::Tensor **)&_swig_go_result = result; 
  return _swig_go_result;
}


at::Tensor *_wrap_Module_register_parameter__SWIG_1_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::string *_swig_go_1, at::Tensor *_swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  std::string arg2 ;
  torch::Tensor arg3 ;
  std::string *argp2 ;
  torch::Tensor *argp3 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (std::string *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::string");
  }
  arg2 = (std::string)*argp2;
  
  
  argp3 = (torch::Tensor *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg3 = (torch::Tensor)*argp3;
  
  
  result = (torch::Tensor *) &(arg1)->register_parameter(arg2,arg3);
  *(torch::Tensor **)&_swig_go_result = result; 
  return _swig_go_result;
}


at::Tensor *_wrap_Module_register_buffer_swig_787f477e80c1f310(torch::nn::Module *_swig_go_0, std::string *_swig_go_1, at::Tensor *_swig_go_2) {
  torch::nn::Module *arg1 = (torch::nn::Module *) 0 ;
  std::string arg2 ;
  torch::Tensor arg3 ;
  std::string *argp2 ;
  torch::Tensor *argp3 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::Module **)&_swig_go_0; 
  
  argp2 = (std::string *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::string");
  }
  arg2 = (std::string)*argp2;
  
  
  argp3 = (torch::Tensor *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg3 = (torch::Tensor)*argp3;
  
  
  result = (torch::Tensor *) &(arg1)->register_buffer(arg2,arg3);
  *(torch::Tensor **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOutput_output_set_swig_787f477e80c1f310(torch::nn::RNNOutput *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::RNNOutput *arg1 = (torch::nn::RNNOutput *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::RNNOutput **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->output = *arg2;
  
}


at::Tensor *_wrap_RNNOutput_output_get_swig_787f477e80c1f310(torch::nn::RNNOutput *_swig_go_0) {
  torch::nn::RNNOutput *arg1 = (torch::nn::RNNOutput *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::RNNOutput **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->output);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_RNNOutput_state_set_swig_787f477e80c1f310(torch::nn::RNNOutput *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::RNNOutput *arg1 = (torch::nn::RNNOutput *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::RNNOutput **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->state = *arg2;
  
}


at::Tensor *_wrap_RNNOutput_state_get_swig_787f477e80c1f310(torch::nn::RNNOutput *_swig_go_0) {
  torch::nn::RNNOutput *arg1 = (torch::nn::RNNOutput *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::RNNOutput **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->state);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


torch::nn::RNNOutput *_wrap_new_RNNOutput_swig_787f477e80c1f310() {
  torch::nn::RNNOutput *result = 0 ;
  torch::nn::RNNOutput *_swig_go_result;
  
  
  result = (torch::nn::RNNOutput *)new torch::nn::RNNOutput();
  *(torch::nn::RNNOutput **)&_swig_go_result = (torch::nn::RNNOutput *)result; 
  return _swig_go_result;
}


void _wrap_delete_RNNOutput_swig_787f477e80c1f310(torch::nn::RNNOutput *_swig_go_0) {
  torch::nn::RNNOutput *arg1 = (torch::nn::RNNOutput *) 0 ;
  
  arg1 = *(torch::nn::RNNOutput **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::nn::detail::RNNOptionsBase *_wrap_new_RNNOptionsBase_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::detail::RNNOptionsBase *result = 0 ;
  torch::nn::detail::RNNOptionsBase *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::detail::RNNOptionsBase *)new torch::nn::detail::RNNOptionsBase(arg1,arg2);
  *(torch::nn::detail::RNNOptionsBase **)&_swig_go_result = (torch::nn::detail::RNNOptionsBase *)result; 
  return _swig_go_result;
}


void _wrap_delete_RNNOptionsBase_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_RNNOptionsBase_input_size__set_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->input_size_ = arg2;
  
}


int64_t *_wrap_RNNOptionsBase_input_size__get_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  result =  ((arg1)->input_size_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_RNNOptionsBase_hidden_size__set_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->hidden_size_ = arg2;
  
}


int64_t *_wrap_RNNOptionsBase_hidden_size__get_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  result =  ((arg1)->hidden_size_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_RNNOptionsBase_layers__set_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->layers_ = arg2;
  
}


int64_t *_wrap_RNNOptionsBase_layers__get_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  result =  ((arg1)->layers_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_RNNOptionsBase_with_bias__set_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0, bool _swig_go_1) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->with_bias_ = arg2;
  
}


bool _wrap_RNNOptionsBase_with_bias__get_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  result = (bool) ((arg1)->with_bias_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOptionsBase_dropout__set_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0, double _swig_go_1) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->dropout_ = arg2;
  
}


double _wrap_RNNOptionsBase_dropout__get_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  result = (double) ((arg1)->dropout_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOptionsBase_bidirectional__set_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0, bool _swig_go_1) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bidirectional_ = arg2;
  
}


bool _wrap_RNNOptionsBase_bidirectional__get_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bidirectional_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOptionsBase_batch_first__set_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0, bool _swig_go_1) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->batch_first_ = arg2;
  
}


bool _wrap_RNNOptionsBase_batch_first__get_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::detail::RNNOptionsBase *arg1 = (torch::nn::detail::RNNOptionsBase *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::detail::RNNOptionsBase **)&_swig_go_0; 
  
  result = (bool) ((arg1)->batch_first_);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_RNNActivation_ReLU_swig_787f477e80c1f310() {
  torch::nn::RNNActivation result;
  intgo _swig_go_result;
  
  
  result = torch::nn::RNNActivation::ReLU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_RNNActivation_Tanh_swig_787f477e80c1f310() {
  torch::nn::RNNActivation result;
  intgo _swig_go_result;
  
  
  result = torch::nn::RNNActivation::Tanh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


torch::nn::RNNOptions *_wrap_new_RNNOptions_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::RNNOptions *result = 0 ;
  torch::nn::RNNOptions *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::RNNOptions *)new torch::nn::RNNOptions(arg1,arg2);
  *(torch::nn::RNNOptions **)&_swig_go_result = (torch::nn::RNNOptions *)result; 
  return _swig_go_result;
}


torch::nn::RNNOptions *_wrap_RNNOptions_tanh_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  torch::nn::RNNOptions *result = 0 ;
  torch::nn::RNNOptions *_swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result = (torch::nn::RNNOptions *) &(arg1)->tanh();
  *(torch::nn::RNNOptions **)&_swig_go_result = result; 
  return _swig_go_result;
}


torch::nn::RNNOptions *_wrap_RNNOptions_relu_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  torch::nn::RNNOptions *result = 0 ;
  torch::nn::RNNOptions *_swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result = (torch::nn::RNNOptions *) &(arg1)->relu();
  *(torch::nn::RNNOptions **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOptions_input_size__set_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->input_size_ = arg2;
  
}


int64_t *_wrap_RNNOptions_input_size__get_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result =  ((arg1)->input_size_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_RNNOptions_hidden_size__set_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->hidden_size_ = arg2;
  
}


int64_t *_wrap_RNNOptions_hidden_size__get_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result =  ((arg1)->hidden_size_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_RNNOptions_layers__set_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->layers_ = arg2;
  
}


int64_t *_wrap_RNNOptions_layers__get_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result =  ((arg1)->layers_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_RNNOptions_with_bias__set_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0, bool _swig_go_1) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->with_bias_ = arg2;
  
}


bool _wrap_RNNOptions_with_bias__get_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->with_bias_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOptions_dropout__set_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0, double _swig_go_1) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->dropout_ = arg2;
  
}


double _wrap_RNNOptions_dropout__get_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->dropout_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOptions_bidirectional__set_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0, bool _swig_go_1) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->bidirectional_ = arg2;
  
}


bool _wrap_RNNOptions_bidirectional__get_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->bidirectional_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOptions_batch_first__set_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0, bool _swig_go_1) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->batch_first_ = arg2;
  
}


bool _wrap_RNNOptions_batch_first__get_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->batch_first_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNNOptions_activation__set_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0, intgo _swig_go_1) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  torch::nn::RNNActivation arg2 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  arg2 = (torch::nn::RNNActivation)_swig_go_1; 
  
  if (arg1) (arg1)->activation_ = arg2;
  
}


intgo _wrap_RNNOptions_activation__get_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  torch::nn::RNNActivation result;
  intgo _swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result = (torch::nn::RNNActivation) ((arg1)->activation_);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_RNNOptions_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = (torch::nn::RNNOptions *) 0 ;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::nn::RNNImpl *_wrap_new_RNNImpl__SWIG_0_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::RNNImpl *result = 0 ;
  torch::nn::RNNImpl *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::RNNImpl *)new torch::nn::RNNImpl(arg1,arg2);
  *(torch::nn::RNNImpl **)&_swig_go_result = (torch::nn::RNNImpl *)result; 
  return _swig_go_result;
}


torch::nn::RNNImpl *_wrap_new_RNNImpl__SWIG_1_swig_787f477e80c1f310(torch::nn::RNNOptions *_swig_go_0) {
  torch::nn::RNNOptions *arg1 = 0 ;
  torch::nn::RNNImpl *result = 0 ;
  torch::nn::RNNImpl *_swig_go_result;
  
  arg1 = *(torch::nn::RNNOptions **)&_swig_go_0; 
  
  result = (torch::nn::RNNImpl *)new torch::nn::RNNImpl((torch::nn::RNNOptions const &)*arg1);
  *(torch::nn::RNNImpl **)&_swig_go_result = (torch::nn::RNNImpl *)result; 
  return _swig_go_result;
}


void _wrap_RNNImpl_pretty_print_swig_787f477e80c1f310(torch::nn::RNNImpl *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::RNNImpl *arg1 = (torch::nn::RNNImpl *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::RNNImpl **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::RNNImpl const *)arg1)->pretty_print(*arg2);
  
}


torch::nn::RNNOutput *_wrap_RNNImpl_forward__SWIG_0_swig_787f477e80c1f310(torch::nn::RNNImpl *_swig_go_0, at::Tensor *_swig_go_1, at::Tensor *_swig_go_2) {
  torch::nn::RNNImpl *arg1 = (torch::nn::RNNImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor arg3 ;
  torch::Tensor *argp3 ;
  torch::nn::RNNOutput result;
  torch::nn::RNNOutput *_swig_go_result;
  
  arg1 = *(torch::nn::RNNImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  argp3 = (torch::Tensor *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg3 = (torch::Tensor)*argp3;
  
  
  result = (arg1)->forward((torch::Tensor const &)*arg2,arg3);
  *(torch::nn::RNNOutput **)&_swig_go_result = new torch::nn::RNNOutput(result); 
  return _swig_go_result;
}


torch::nn::RNNOutput *_wrap_RNNImpl_forward__SWIG_1_swig_787f477e80c1f310(torch::nn::RNNImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::RNNImpl *arg1 = (torch::nn::RNNImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::nn::RNNOutput result;
  torch::nn::RNNOutput *_swig_go_result;
  
  arg1 = *(torch::nn::RNNImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::nn::RNNOutput **)&_swig_go_result = new torch::nn::RNNOutput(result); 
  return _swig_go_result;
}


void _wrap_RNNImpl_options_set_swig_787f477e80c1f310(torch::nn::RNNImpl *_swig_go_0, torch::nn::RNNOptions *_swig_go_1) {
  torch::nn::RNNImpl *arg1 = (torch::nn::RNNImpl *) 0 ;
  torch::nn::RNNOptions *arg2 = (torch::nn::RNNOptions *) 0 ;
  
  arg1 = *(torch::nn::RNNImpl **)&_swig_go_0; 
  arg2 = *(torch::nn::RNNOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::nn::RNNOptions *_wrap_RNNImpl_options_get_swig_787f477e80c1f310(torch::nn::RNNImpl *_swig_go_0) {
  torch::nn::RNNImpl *arg1 = (torch::nn::RNNImpl *) 0 ;
  torch::nn::RNNOptions *result = 0 ;
  torch::nn::RNNOptions *_swig_go_result;
  
  arg1 = *(torch::nn::RNNImpl **)&_swig_go_0; 
  
  result = (torch::nn::RNNOptions *)& ((arg1)->options);
  *(torch::nn::RNNOptions **)&_swig_go_result = (torch::nn::RNNOptions *)result; 
  return _swig_go_result;
}


void _wrap_delete_RNNImpl_swig_787f477e80c1f310(torch::nn::RNNImpl *_swig_go_0) {
  torch::nn::RNNImpl *arg1 = (torch::nn::RNNImpl *) 0 ;
  
  arg1 = *(torch::nn::RNNImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_RNN_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::RNN = arg1;
  
}


TORCH_MODULE *_wrap_RNN_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::RNN;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


torch::nn::LSTMImpl *_wrap_new_LSTMImpl__SWIG_0_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::LSTMImpl *result = 0 ;
  torch::nn::LSTMImpl *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::LSTMImpl *)new torch::nn::LSTMImpl(arg1,arg2);
  *(torch::nn::LSTMImpl **)&_swig_go_result = (torch::nn::LSTMImpl *)result; 
  return _swig_go_result;
}


torch::nn::LSTMImpl *_wrap_new_LSTMImpl__SWIG_1_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::LSTMOptions *arg1 = 0 ;
  torch::nn::LSTMImpl *result = 0 ;
  torch::nn::LSTMImpl *_swig_go_result;
  
  arg1 = *(torch::nn::LSTMOptions **)&_swig_go_0; 
  
  result = (torch::nn::LSTMImpl *)new torch::nn::LSTMImpl((torch::nn::LSTMOptions const &)*arg1);
  *(torch::nn::LSTMImpl **)&_swig_go_result = (torch::nn::LSTMImpl *)result; 
  return _swig_go_result;
}


torch::nn::RNNOutput *_wrap_LSTMImpl_forward__SWIG_0_swig_787f477e80c1f310(torch::nn::LSTMImpl *_swig_go_0, at::Tensor *_swig_go_1, at::Tensor *_swig_go_2) {
  torch::nn::LSTMImpl *arg1 = (torch::nn::LSTMImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor arg3 ;
  torch::Tensor *argp3 ;
  torch::nn::RNNOutput result;
  torch::nn::RNNOutput *_swig_go_result;
  
  arg1 = *(torch::nn::LSTMImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  argp3 = (torch::Tensor *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg3 = (torch::Tensor)*argp3;
  
  
  result = (arg1)->forward((torch::Tensor const &)*arg2,arg3);
  *(torch::nn::RNNOutput **)&_swig_go_result = new torch::nn::RNNOutput(result); 
  return _swig_go_result;
}


torch::nn::RNNOutput *_wrap_LSTMImpl_forward__SWIG_1_swig_787f477e80c1f310(torch::nn::LSTMImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::LSTMImpl *arg1 = (torch::nn::LSTMImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::nn::RNNOutput result;
  torch::nn::RNNOutput *_swig_go_result;
  
  arg1 = *(torch::nn::LSTMImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::nn::RNNOutput **)&_swig_go_result = new torch::nn::RNNOutput(result); 
  return _swig_go_result;
}


void _wrap_delete_LSTMImpl_swig_787f477e80c1f310(torch::nn::LSTMImpl *_swig_go_0) {
  torch::nn::LSTMImpl *arg1 = (torch::nn::LSTMImpl *) 0 ;
  
  arg1 = *(torch::nn::LSTMImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_LSTM_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::LSTM = arg1;
  
}


TORCH_MODULE *_wrap_LSTM_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::LSTM;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


torch::nn::GRUImpl *_wrap_new_GRUImpl__SWIG_0_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::GRUImpl *result = 0 ;
  torch::nn::GRUImpl *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::GRUImpl *)new torch::nn::GRUImpl(arg1,arg2);
  *(torch::nn::GRUImpl **)&_swig_go_result = (torch::nn::GRUImpl *)result; 
  return _swig_go_result;
}


torch::nn::GRUImpl *_wrap_new_GRUImpl__SWIG_1_swig_787f477e80c1f310(torch::nn::detail::RNNOptionsBase *_swig_go_0) {
  torch::nn::GRUOptions *arg1 = 0 ;
  torch::nn::GRUImpl *result = 0 ;
  torch::nn::GRUImpl *_swig_go_result;
  
  arg1 = *(torch::nn::GRUOptions **)&_swig_go_0; 
  
  result = (torch::nn::GRUImpl *)new torch::nn::GRUImpl((torch::nn::GRUOptions const &)*arg1);
  *(torch::nn::GRUImpl **)&_swig_go_result = (torch::nn::GRUImpl *)result; 
  return _swig_go_result;
}


torch::nn::RNNOutput *_wrap_GRUImpl_forward__SWIG_0_swig_787f477e80c1f310(torch::nn::GRUImpl *_swig_go_0, at::Tensor *_swig_go_1, at::Tensor *_swig_go_2) {
  torch::nn::GRUImpl *arg1 = (torch::nn::GRUImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor arg3 ;
  torch::Tensor *argp3 ;
  torch::nn::RNNOutput result;
  torch::nn::RNNOutput *_swig_go_result;
  
  arg1 = *(torch::nn::GRUImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  argp3 = (torch::Tensor *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg3 = (torch::Tensor)*argp3;
  
  
  result = (arg1)->forward((torch::Tensor const &)*arg2,arg3);
  *(torch::nn::RNNOutput **)&_swig_go_result = new torch::nn::RNNOutput(result); 
  return _swig_go_result;
}


torch::nn::RNNOutput *_wrap_GRUImpl_forward__SWIG_1_swig_787f477e80c1f310(torch::nn::GRUImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::GRUImpl *arg1 = (torch::nn::GRUImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::nn::RNNOutput result;
  torch::nn::RNNOutput *_swig_go_result;
  
  arg1 = *(torch::nn::GRUImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::nn::RNNOutput **)&_swig_go_result = new torch::nn::RNNOutput(result); 
  return _swig_go_result;
}


void _wrap_delete_GRUImpl_swig_787f477e80c1f310(torch::nn::GRUImpl *_swig_go_0) {
  torch::nn::GRUImpl *arg1 = (torch::nn::GRUImpl *) 0 ;
  
  arg1 = *(torch::nn::GRUImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_GRU_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::GRU = arg1;
  
}


TORCH_MODULE *_wrap_GRU_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::GRU;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_Conv1dImpl_forward_swig_787f477e80c1f310(torch::nn::Conv1dImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::Conv1dImpl *arg1 = (torch::nn::Conv1dImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::Conv1dImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


torch::nn::Conv1dImpl *_wrap_new_Conv1dImpl_swig_787f477e80c1f310() {
  torch::nn::Conv1dImpl *result = 0 ;
  torch::nn::Conv1dImpl *_swig_go_result;
  
  
  result = (torch::nn::Conv1dImpl *)new torch::nn::Conv1dImpl();
  *(torch::nn::Conv1dImpl **)&_swig_go_result = (torch::nn::Conv1dImpl *)result; 
  return _swig_go_result;
}


void _wrap_delete_Conv1dImpl_swig_787f477e80c1f310(torch::nn::Conv1dImpl *_swig_go_0) {
  torch::nn::Conv1dImpl *arg1 = (torch::nn::Conv1dImpl *) 0 ;
  
  arg1 = *(torch::nn::Conv1dImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Conv1d_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::Conv1d = arg1;
  
}


TORCH_MODULE *_wrap_Conv1d_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::Conv1d;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_Conv2dImpl_forward_swig_787f477e80c1f310(torch::nn::Conv2dImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::Conv2dImpl *arg1 = (torch::nn::Conv2dImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::Conv2dImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


torch::nn::Conv2dImpl *_wrap_new_Conv2dImpl_swig_787f477e80c1f310() {
  torch::nn::Conv2dImpl *result = 0 ;
  torch::nn::Conv2dImpl *_swig_go_result;
  
  
  result = (torch::nn::Conv2dImpl *)new torch::nn::Conv2dImpl();
  *(torch::nn::Conv2dImpl **)&_swig_go_result = (torch::nn::Conv2dImpl *)result; 
  return _swig_go_result;
}


void _wrap_delete_Conv2dImpl_swig_787f477e80c1f310(torch::nn::Conv2dImpl *_swig_go_0) {
  torch::nn::Conv2dImpl *arg1 = (torch::nn::Conv2dImpl *) 0 ;
  
  arg1 = *(torch::nn::Conv2dImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Conv2d_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::Conv2d = arg1;
  
}


TORCH_MODULE *_wrap_Conv2d_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::Conv2d;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_Conv3dImpl_forward_swig_787f477e80c1f310(torch::nn::Conv3dImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::Conv3dImpl *arg1 = (torch::nn::Conv3dImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::Conv3dImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


torch::nn::Conv3dImpl *_wrap_new_Conv3dImpl_swig_787f477e80c1f310() {
  torch::nn::Conv3dImpl *result = 0 ;
  torch::nn::Conv3dImpl *_swig_go_result;
  
  
  result = (torch::nn::Conv3dImpl *)new torch::nn::Conv3dImpl();
  *(torch::nn::Conv3dImpl **)&_swig_go_result = (torch::nn::Conv3dImpl *)result; 
  return _swig_go_result;
}


void _wrap_delete_Conv3dImpl_swig_787f477e80c1f310(torch::nn::Conv3dImpl *_swig_go_0) {
  torch::nn::Conv3dImpl *arg1 = (torch::nn::Conv3dImpl *) 0 ;
  
  arg1 = *(torch::nn::Conv3dImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Conv3d_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::Conv3d = arg1;
  
}


TORCH_MODULE *_wrap_Conv3d_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::Conv3d;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


torch::nn::FunctionalImpl *_wrap_new_FunctionalImpl_swig_787f477e80c1f310(std::function< at::Tensor (torch::Tensor) > *_swig_go_0) {
  SwigValueWrapper< std::function< at::Tensor (torch::Tensor) > > arg1 ;
  torch::nn::FunctionalImpl::Function *argp1 ;
  torch::nn::FunctionalImpl *result = 0 ;
  torch::nn::FunctionalImpl *_swig_go_result;
  
  
  argp1 = (torch::nn::FunctionalImpl::Function *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::nn::FunctionalImpl::Function");
  }
  arg1 = (torch::nn::FunctionalImpl::Function)*argp1;
  
  
  result = (torch::nn::FunctionalImpl *)new torch::nn::FunctionalImpl(arg1);
  *(torch::nn::FunctionalImpl **)&_swig_go_result = (torch::nn::FunctionalImpl *)result; 
  return _swig_go_result;
}


void _wrap_FunctionalImpl_reset_swig_787f477e80c1f310(torch::nn::FunctionalImpl *_swig_go_0) {
  torch::nn::FunctionalImpl *arg1 = (torch::nn::FunctionalImpl *) 0 ;
  
  arg1 = *(torch::nn::FunctionalImpl **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_FunctionalImpl_pretty_print_swig_787f477e80c1f310(torch::nn::FunctionalImpl *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::FunctionalImpl *arg1 = (torch::nn::FunctionalImpl *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::FunctionalImpl **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::FunctionalImpl const *)arg1)->pretty_print(*arg2);
  
}


at::Tensor *_wrap_FunctionalImpl_forward_swig_787f477e80c1f310(torch::nn::FunctionalImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::FunctionalImpl *arg1 = (torch::nn::FunctionalImpl *) 0 ;
  torch::Tensor arg2 ;
  torch::Tensor *argp2 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::FunctionalImpl **)&_swig_go_0; 
  
  argp2 = (torch::Tensor *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg2 = (torch::Tensor)*argp2;
  
  
  result = (arg1)->forward(arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


bool _wrap_FunctionalImpl_is_serializable_swig_787f477e80c1f310(torch::nn::FunctionalImpl *_swig_go_0) {
  torch::nn::FunctionalImpl *arg1 = (torch::nn::FunctionalImpl *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::FunctionalImpl **)&_swig_go_0; 
  
  result = (bool)((torch::nn::FunctionalImpl const *)arg1)->is_serializable();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_FunctionalImpl_swig_787f477e80c1f310(torch::nn::FunctionalImpl *_swig_go_0) {
  torch::nn::FunctionalImpl *arg1 = (torch::nn::FunctionalImpl *) 0 ;
  
  arg1 = *(torch::nn::FunctionalImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Functional_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::Functional = arg1;
  
}


TORCH_MODULE *_wrap_Functional_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::Functional;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


torch::nn::LinearOptions *_wrap_new_LinearOptions_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::LinearOptions *result = 0 ;
  torch::nn::LinearOptions *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::LinearOptions *)new torch::nn::LinearOptions(arg1,arg2);
  *(torch::nn::LinearOptions **)&_swig_go_result = (torch::nn::LinearOptions *)result; 
  return _swig_go_result;
}


void _wrap_LinearOptions_in__set_swig_787f477e80c1f310(torch::nn::LinearOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::LinearOptions *arg1 = (torch::nn::LinearOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::LinearOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->in_ = arg2;
  
}


int64_t *_wrap_LinearOptions_in__get_swig_787f477e80c1f310(torch::nn::LinearOptions *_swig_go_0) {
  torch::nn::LinearOptions *arg1 = (torch::nn::LinearOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::LinearOptions **)&_swig_go_0; 
  
  result =  ((arg1)->in_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_LinearOptions_out__set_swig_787f477e80c1f310(torch::nn::LinearOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::LinearOptions *arg1 = (torch::nn::LinearOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::LinearOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->out_ = arg2;
  
}


int64_t *_wrap_LinearOptions_out__get_swig_787f477e80c1f310(torch::nn::LinearOptions *_swig_go_0) {
  torch::nn::LinearOptions *arg1 = (torch::nn::LinearOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::LinearOptions **)&_swig_go_0; 
  
  result =  ((arg1)->out_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_LinearOptions_with_bias__set_swig_787f477e80c1f310(torch::nn::LinearOptions *_swig_go_0, bool _swig_go_1) {
  torch::nn::LinearOptions *arg1 = (torch::nn::LinearOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::LinearOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->with_bias_ = arg2;
  
}


bool _wrap_LinearOptions_with_bias__get_swig_787f477e80c1f310(torch::nn::LinearOptions *_swig_go_0) {
  torch::nn::LinearOptions *arg1 = (torch::nn::LinearOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::LinearOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->with_bias_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_LinearOptions_swig_787f477e80c1f310(torch::nn::LinearOptions *_swig_go_0) {
  torch::nn::LinearOptions *arg1 = (torch::nn::LinearOptions *) 0 ;
  
  arg1 = *(torch::nn::LinearOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::nn::LinearImpl *_wrap_new_LinearImpl__SWIG_0_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::LinearImpl *result = 0 ;
  torch::nn::LinearImpl *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::LinearImpl *)new torch::nn::LinearImpl(arg1,arg2);
  *(torch::nn::LinearImpl **)&_swig_go_result = (torch::nn::LinearImpl *)result; 
  return _swig_go_result;
}


torch::nn::LinearImpl *_wrap_new_LinearImpl__SWIG_1_swig_787f477e80c1f310(torch::nn::LinearOptions *_swig_go_0) {
  SwigValueWrapper< torch::nn::LinearOptions > arg1 ;
  torch::nn::LinearOptions *argp1 ;
  torch::nn::LinearImpl *result = 0 ;
  torch::nn::LinearImpl *_swig_go_result;
  
  
  argp1 = (torch::nn::LinearOptions *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::nn::LinearOptions");
  }
  arg1 = (torch::nn::LinearOptions)*argp1;
  
  
  result = (torch::nn::LinearImpl *)new torch::nn::LinearImpl(arg1);
  *(torch::nn::LinearImpl **)&_swig_go_result = (torch::nn::LinearImpl *)result; 
  return _swig_go_result;
}


void _wrap_LinearImpl_reset_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_LinearImpl_pretty_print_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::LinearImpl const *)arg1)->pretty_print(*arg2);
  
}


at::Tensor *_wrap_LinearImpl_forward_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


void _wrap_LinearImpl_options_set_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0, torch::nn::LinearOptions *_swig_go_1) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  torch::nn::LinearOptions *arg2 = (torch::nn::LinearOptions *) 0 ;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  arg2 = *(torch::nn::LinearOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::nn::LinearOptions *_wrap_LinearImpl_options_get_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  torch::nn::LinearOptions *result = 0 ;
  torch::nn::LinearOptions *_swig_go_result;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  
  result = (torch::nn::LinearOptions *)& ((arg1)->options);
  *(torch::nn::LinearOptions **)&_swig_go_result = (torch::nn::LinearOptions *)result; 
  return _swig_go_result;
}


void _wrap_LinearImpl_weight_set_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->weight = *arg2;
  
}


at::Tensor *_wrap_LinearImpl_weight_get_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->weight);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_LinearImpl_bias_set_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->bias = *arg2;
  
}


at::Tensor *_wrap_LinearImpl_bias_get_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->bias);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_delete_LinearImpl_swig_787f477e80c1f310(torch::nn::LinearImpl *_swig_go_0) {
  torch::nn::LinearImpl *arg1 = (torch::nn::LinearImpl *) 0 ;
  
  arg1 = *(torch::nn::LinearImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Linear_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::Linear = arg1;
  
}


TORCH_MODULE *_wrap_Linear_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::Linear;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


torch::nn::SequentialImpl *_wrap_new_SequentialImpl__SWIG_0_swig_787f477e80c1f310() {
  torch::nn::SequentialImpl *result = 0 ;
  torch::nn::SequentialImpl *_swig_go_result;
  
  
  result = (torch::nn::SequentialImpl *)new torch::nn::SequentialImpl();
  *(torch::nn::SequentialImpl **)&_swig_go_result = (torch::nn::SequentialImpl *)result; 
  return _swig_go_result;
}


torch::nn::SequentialImpl *_wrap_new_SequentialImpl__SWIG_2_swig_787f477e80c1f310(torch::OrderedDict< std::string,AnyModule > *_swig_go_0) {
  torch::OrderedDict< std::string,AnyModule > *arg1 = 0 ;
  torch::nn::SequentialImpl *result = 0 ;
  torch::nn::SequentialImpl *_swig_go_result;
  
  arg1 = *(torch::OrderedDict< std::string,AnyModule > **)&_swig_go_0; 
  
  result = (torch::nn::SequentialImpl *)new torch::nn::SequentialImpl((torch::OrderedDict< std::string,AnyModule > &&)*arg1);
  *(torch::nn::SequentialImpl **)&_swig_go_result = (torch::nn::SequentialImpl *)result; 
  return _swig_go_result;
}


std::shared_ptr< torch::nn::Module > *_wrap_SequentialImpl_clone__SWIG_0_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0, optional< Device > *_swig_go_1) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  optional< Device > *arg2 = 0 ;
  SwigValueWrapper< std::shared_ptr< torch::nn::Module > > result;
  std::shared_ptr< torch::nn::Module > *_swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  arg2 = *(optional< Device > **)&_swig_go_1; 
  
  result = ((torch::nn::SequentialImpl const *)arg1)->clone((optional< Device > const &)*arg2);
  *(std::shared_ptr< torch::nn::Module > **)&_swig_go_result = new std::shared_ptr< torch::nn::Module >(result); 
  return _swig_go_result;
}


std::shared_ptr< torch::nn::Module > *_wrap_SequentialImpl_clone__SWIG_1_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  SwigValueWrapper< std::shared_ptr< torch::nn::Module > > result;
  std::shared_ptr< torch::nn::Module > *_swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  result = ((torch::nn::SequentialImpl const *)arg1)->clone();
  *(std::shared_ptr< torch::nn::Module > **)&_swig_go_result = new std::shared_ptr< torch::nn::Module >(result); 
  return _swig_go_result;
}


void _wrap_SequentialImpl_reset_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_SequentialImpl_pretty_print_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::SequentialImpl const *)arg1)->pretty_print(*arg2);
  
}


std::vector< AnyModule >::iterator *_wrap_SequentialImpl_begin__SWIG_0_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  torch::nn::SequentialImpl::Iterator result;
  std::vector< AnyModule >::iterator *_swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  result = (arg1)->begin();
  *(torch::nn::SequentialImpl::Iterator **)&_swig_go_result = new torch::nn::SequentialImpl::Iterator(result); 
  return _swig_go_result;
}


std::vector< AnyModule >::const_iterator *_wrap_SequentialImpl_begin__SWIG_1_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  torch::nn::SequentialImpl::ConstIterator result;
  std::vector< AnyModule >::const_iterator *_swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  result = ((torch::nn::SequentialImpl const *)arg1)->begin();
  *(torch::nn::SequentialImpl::ConstIterator **)&_swig_go_result = new torch::nn::SequentialImpl::ConstIterator(result); 
  return _swig_go_result;
}


std::vector< AnyModule >::iterator *_wrap_SequentialImpl_end__SWIG_0_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  torch::nn::SequentialImpl::Iterator result;
  std::vector< AnyModule >::iterator *_swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  result = (arg1)->end();
  *(torch::nn::SequentialImpl::Iterator **)&_swig_go_result = new torch::nn::SequentialImpl::Iterator(result); 
  return _swig_go_result;
}


std::vector< AnyModule >::const_iterator *_wrap_SequentialImpl_end__SWIG_1_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  torch::nn::SequentialImpl::ConstIterator result;
  std::vector< AnyModule >::const_iterator *_swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  result = ((torch::nn::SequentialImpl const *)arg1)->end();
  *(torch::nn::SequentialImpl::ConstIterator **)&_swig_go_result = new torch::nn::SequentialImpl::ConstIterator(result); 
  return _swig_go_result;
}


std::shared_ptr< torch::nn::Module > *_wrap_SequentialImpl_ptr_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0, long long _swig_go_1) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  size_t arg2 ;
  SwigValueWrapper< std::shared_ptr< torch::nn::Module > > result;
  std::shared_ptr< torch::nn::Module > *_swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  result = ((torch::nn::SequentialImpl const *)arg1)->ptr(arg2);
  *(std::shared_ptr< torch::nn::Module > **)&_swig_go_result = new std::shared_ptr< torch::nn::Module >(result); 
  return _swig_go_result;
}


long long _wrap_SequentialImpl_size_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  result = ((torch::nn::SequentialImpl const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_SequentialImpl_is_empty_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  result = (bool)((torch::nn::SequentialImpl const *)arg1)->is_empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_SequentialImpl_swig_787f477e80c1f310(torch::nn::SequentialImpl *_swig_go_0) {
  torch::nn::SequentialImpl *arg1 = (torch::nn::SequentialImpl *) 0 ;
  
  arg1 = *(torch::nn::SequentialImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Sequential_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::Sequential = arg1;
  
}


TORCH_MODULE *_wrap_Sequential_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::Sequential;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


std::string *_wrap_NamedAnyModule_name_swig_787f477e80c1f310(torch::nn::NamedAnyModule *_swig_go_0) {
  torch::nn::NamedAnyModule *arg1 = (torch::nn::NamedAnyModule *) 0 ;
  std::string *result = 0 ;
  std::string *_swig_go_result;
  
  arg1 = *(torch::nn::NamedAnyModule **)&_swig_go_0; 
  
  result = (std::string *) &((torch::nn::NamedAnyModule const *)arg1)->name();
  *(std::string **)&_swig_go_result = result; 
  return _swig_go_result;
}


AnyModule *_wrap_NamedAnyModule_module_swig_787f477e80c1f310(torch::nn::NamedAnyModule *_swig_go_0) {
  torch::nn::NamedAnyModule *arg1 = (torch::nn::NamedAnyModule *) 0 ;
  AnyModule *result = 0 ;
  AnyModule *_swig_go_result;
  
  arg1 = *(torch::nn::NamedAnyModule **)&_swig_go_0; 
  
  result = (AnyModule *) &(arg1)->module();
  *(AnyModule **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_NamedAnyModule_swig_787f477e80c1f310(torch::nn::NamedAnyModule *_swig_go_0) {
  torch::nn::NamedAnyModule *arg1 = (torch::nn::NamedAnyModule *) 0 ;
  
  arg1 = *(torch::nn::NamedAnyModule **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::OrderedDict< std::string,AnyModule > *_wrap_modules_ordered_dict_swig_787f477e80c1f310(std::initializer_list< torch::nn::NamedAnyModule > *_swig_go_0) {
  SwigValueWrapper< std::initializer_list< torch::nn::NamedAnyModule > > arg1 ;
  SwigValueWrapper< torch::OrderedDict< std::string,AnyModule > > result;
  torch::OrderedDict< std::string,AnyModule > *_swig_go_result;
  
  
  
  result = torch::nn::modules_ordered_dict(arg1);
  *(torch::OrderedDict< std::string,AnyModule > **)&_swig_go_result = new torch::OrderedDict< std::string,AnyModule >(result); 
  return _swig_go_result;
}


torch::nn::EmbeddingOptions *_wrap_new_EmbeddingOptions_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::EmbeddingOptions *result = 0 ;
  torch::nn::EmbeddingOptions *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::EmbeddingOptions *)new torch::nn::EmbeddingOptions(arg1,arg2);
  *(torch::nn::EmbeddingOptions **)&_swig_go_result = (torch::nn::EmbeddingOptions *)result; 
  return _swig_go_result;
}


void _wrap_EmbeddingOptions_count__set_swig_787f477e80c1f310(torch::nn::EmbeddingOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::EmbeddingOptions *arg1 = (torch::nn::EmbeddingOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::EmbeddingOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->count_ = arg2;
  
}


int64_t *_wrap_EmbeddingOptions_count__get_swig_787f477e80c1f310(torch::nn::EmbeddingOptions *_swig_go_0) {
  torch::nn::EmbeddingOptions *arg1 = (torch::nn::EmbeddingOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::EmbeddingOptions **)&_swig_go_0; 
  
  result =  ((arg1)->count_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_EmbeddingOptions_dimension__set_swig_787f477e80c1f310(torch::nn::EmbeddingOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::EmbeddingOptions *arg1 = (torch::nn::EmbeddingOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::EmbeddingOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->dimension_ = arg2;
  
}


int64_t *_wrap_EmbeddingOptions_dimension__get_swig_787f477e80c1f310(torch::nn::EmbeddingOptions *_swig_go_0) {
  torch::nn::EmbeddingOptions *arg1 = (torch::nn::EmbeddingOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::EmbeddingOptions **)&_swig_go_0; 
  
  result =  ((arg1)->dimension_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_delete_EmbeddingOptions_swig_787f477e80c1f310(torch::nn::EmbeddingOptions *_swig_go_0) {
  torch::nn::EmbeddingOptions *arg1 = (torch::nn::EmbeddingOptions *) 0 ;
  
  arg1 = *(torch::nn::EmbeddingOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::nn::EmbeddingImpl *_wrap_new_EmbeddingImpl__SWIG_0_swig_787f477e80c1f310(int64_t *_swig_go_0, int64_t *_swig_go_1) {
  int64_t arg1 ;
  int64_t arg2 ;
  int64_t *argp1 ;
  int64_t *argp2 ;
  torch::nn::EmbeddingImpl *result = 0 ;
  torch::nn::EmbeddingImpl *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (torch::nn::EmbeddingImpl *)new torch::nn::EmbeddingImpl(arg1,arg2);
  *(torch::nn::EmbeddingImpl **)&_swig_go_result = (torch::nn::EmbeddingImpl *)result; 
  return _swig_go_result;
}


torch::nn::EmbeddingImpl *_wrap_new_EmbeddingImpl__SWIG_1_swig_787f477e80c1f310(torch::nn::EmbeddingOptions *_swig_go_0) {
  SwigValueWrapper< torch::nn::EmbeddingOptions > arg1 ;
  torch::nn::EmbeddingOptions *argp1 ;
  torch::nn::EmbeddingImpl *result = 0 ;
  torch::nn::EmbeddingImpl *_swig_go_result;
  
  
  argp1 = (torch::nn::EmbeddingOptions *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::nn::EmbeddingOptions");
  }
  arg1 = (torch::nn::EmbeddingOptions)*argp1;
  
  
  result = (torch::nn::EmbeddingImpl *)new torch::nn::EmbeddingImpl(arg1);
  *(torch::nn::EmbeddingImpl **)&_swig_go_result = (torch::nn::EmbeddingImpl *)result; 
  return _swig_go_result;
}


void _wrap_EmbeddingImpl_reset_swig_787f477e80c1f310(torch::nn::EmbeddingImpl *_swig_go_0) {
  torch::nn::EmbeddingImpl *arg1 = (torch::nn::EmbeddingImpl *) 0 ;
  
  arg1 = *(torch::nn::EmbeddingImpl **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_EmbeddingImpl_pretty_print_swig_787f477e80c1f310(torch::nn::EmbeddingImpl *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::EmbeddingImpl *arg1 = (torch::nn::EmbeddingImpl *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::EmbeddingImpl **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::EmbeddingImpl const *)arg1)->pretty_print(*arg2);
  
}


at::Tensor *_wrap_EmbeddingImpl_forward_swig_787f477e80c1f310(torch::nn::EmbeddingImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::EmbeddingImpl *arg1 = (torch::nn::EmbeddingImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::EmbeddingImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


void _wrap_EmbeddingImpl_options_set_swig_787f477e80c1f310(torch::nn::EmbeddingImpl *_swig_go_0, torch::nn::EmbeddingOptions *_swig_go_1) {
  torch::nn::EmbeddingImpl *arg1 = (torch::nn::EmbeddingImpl *) 0 ;
  torch::nn::EmbeddingOptions *arg2 = (torch::nn::EmbeddingOptions *) 0 ;
  
  arg1 = *(torch::nn::EmbeddingImpl **)&_swig_go_0; 
  arg2 = *(torch::nn::EmbeddingOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::nn::EmbeddingOptions *_wrap_EmbeddingImpl_options_get_swig_787f477e80c1f310(torch::nn::EmbeddingImpl *_swig_go_0) {
  torch::nn::EmbeddingImpl *arg1 = (torch::nn::EmbeddingImpl *) 0 ;
  torch::nn::EmbeddingOptions *result = 0 ;
  torch::nn::EmbeddingOptions *_swig_go_result;
  
  arg1 = *(torch::nn::EmbeddingImpl **)&_swig_go_0; 
  
  result = (torch::nn::EmbeddingOptions *)& ((arg1)->options);
  *(torch::nn::EmbeddingOptions **)&_swig_go_result = (torch::nn::EmbeddingOptions *)result; 
  return _swig_go_result;
}


void _wrap_EmbeddingImpl_weight_set_swig_787f477e80c1f310(torch::nn::EmbeddingImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::EmbeddingImpl *arg1 = (torch::nn::EmbeddingImpl *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::EmbeddingImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->weight = *arg2;
  
}


at::Tensor *_wrap_EmbeddingImpl_weight_get_swig_787f477e80c1f310(torch::nn::EmbeddingImpl *_swig_go_0) {
  torch::nn::EmbeddingImpl *arg1 = (torch::nn::EmbeddingImpl *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::EmbeddingImpl **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->weight);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_delete_EmbeddingImpl_swig_787f477e80c1f310(torch::nn::EmbeddingImpl *_swig_go_0) {
  torch::nn::EmbeddingImpl *arg1 = (torch::nn::EmbeddingImpl *) 0 ;
  
  arg1 = *(torch::nn::EmbeddingImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Embedding_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::Embedding = arg1;
  
}


TORCH_MODULE *_wrap_Embedding_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::Embedding;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


torch::nn::BatchNormOptions *_wrap_new_BatchNormOptions_swig_787f477e80c1f310(int64_t *_swig_go_0) {
  int64_t arg1 ;
  int64_t *argp1 ;
  torch::nn::BatchNormOptions *result = 0 ;
  torch::nn::BatchNormOptions *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  result = (torch::nn::BatchNormOptions *)new torch::nn::BatchNormOptions(arg1);
  *(torch::nn::BatchNormOptions **)&_swig_go_result = (torch::nn::BatchNormOptions *)result; 
  return _swig_go_result;
}


void _wrap_BatchNormOptions_features__set_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0, int64_t *_swig_go_1) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->features_ = arg2;
  
}


int64_t *_wrap_BatchNormOptions_features__get_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  
  result =  ((arg1)->features_);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_BatchNormOptions_affine__set_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0, bool _swig_go_1) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->affine_ = arg2;
  
}


bool _wrap_BatchNormOptions_affine__get_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->affine_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_BatchNormOptions_stateful__set_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0, bool _swig_go_1) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  bool arg2 ;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->stateful_ = arg2;
  
}


bool _wrap_BatchNormOptions_stateful__get_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  
  result = (bool) ((arg1)->stateful_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_BatchNormOptions_eps__set_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0, double _swig_go_1) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->eps_ = arg2;
  
}


double _wrap_BatchNormOptions_eps__get_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->eps_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_BatchNormOptions_momentum__set_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0, double _swig_go_1) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->momentum_ = arg2;
  
}


double _wrap_BatchNormOptions_momentum__get_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->momentum_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_BatchNormOptions_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0) {
  torch::nn::BatchNormOptions *arg1 = (torch::nn::BatchNormOptions *) 0 ;
  
  arg1 = *(torch::nn::BatchNormOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::nn::BatchNormImpl *_wrap_new_BatchNormImpl__SWIG_0_swig_787f477e80c1f310(int64_t *_swig_go_0) {
  int64_t arg1 ;
  int64_t *argp1 ;
  torch::nn::BatchNormImpl *result = 0 ;
  torch::nn::BatchNormImpl *_swig_go_result;
  
  
  argp1 = (int64_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg1 = (int64_t)*argp1;
  
  
  result = (torch::nn::BatchNormImpl *)new torch::nn::BatchNormImpl(arg1);
  *(torch::nn::BatchNormImpl **)&_swig_go_result = (torch::nn::BatchNormImpl *)result; 
  return _swig_go_result;
}


torch::nn::BatchNormImpl *_wrap_new_BatchNormImpl__SWIG_1_swig_787f477e80c1f310(torch::nn::BatchNormOptions *_swig_go_0) {
  SwigValueWrapper< torch::nn::BatchNormOptions > arg1 ;
  torch::nn::BatchNormOptions *argp1 ;
  torch::nn::BatchNormImpl *result = 0 ;
  torch::nn::BatchNormImpl *_swig_go_result;
  
  
  argp1 = (torch::nn::BatchNormOptions *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::nn::BatchNormOptions");
  }
  arg1 = (torch::nn::BatchNormOptions)*argp1;
  
  
  result = (torch::nn::BatchNormImpl *)new torch::nn::BatchNormImpl(arg1);
  *(torch::nn::BatchNormImpl **)&_swig_go_result = (torch::nn::BatchNormImpl *)result; 
  return _swig_go_result;
}


void _wrap_BatchNormImpl_reset_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_BatchNormImpl_pretty_print_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::BatchNormImpl const *)arg1)->pretty_print(*arg2);
  
}


at::Tensor *_wrap_BatchNormImpl_forward_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_BatchNormImpl_pure_forward_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0, at::Tensor *_swig_go_1, at::Tensor *_swig_go_2, at::Tensor *_swig_go_3) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor *arg3 = 0 ;
  torch::Tensor *arg4 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  arg3 = *(torch::Tensor **)&_swig_go_2; 
  arg4 = *(torch::Tensor **)&_swig_go_3; 
  
  result = (arg1)->pure_forward((torch::Tensor const &)*arg2,(torch::Tensor const &)*arg3,(torch::Tensor const &)*arg4);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


void _wrap_BatchNormImpl_options_set_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0, torch::nn::BatchNormOptions *_swig_go_1) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::nn::BatchNormOptions *arg2 = (torch::nn::BatchNormOptions *) 0 ;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  arg2 = *(torch::nn::BatchNormOptions **)&_swig_go_1; 
  
  if (arg1) (arg1)->options = *arg2;
  
}


torch::nn::BatchNormOptions *_wrap_BatchNormImpl_options_get_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::nn::BatchNormOptions *result = 0 ;
  torch::nn::BatchNormOptions *_swig_go_result;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  
  result = (torch::nn::BatchNormOptions *)& ((arg1)->options);
  *(torch::nn::BatchNormOptions **)&_swig_go_result = (torch::nn::BatchNormOptions *)result; 
  return _swig_go_result;
}


void _wrap_BatchNormImpl_weight_set_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->weight = *arg2;
  
}


at::Tensor *_wrap_BatchNormImpl_weight_get_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->weight);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_BatchNormImpl_bias_set_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->bias = *arg2;
  
}


at::Tensor *_wrap_BatchNormImpl_bias_get_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->bias);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_BatchNormImpl_running_mean_set_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->running_mean = *arg2;
  
}


at::Tensor *_wrap_BatchNormImpl_running_mean_get_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->running_mean);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_BatchNormImpl_running_var_set_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *arg2 = (torch::Tensor *) 0 ;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  if (arg1) (arg1)->running_var = *arg2;
  
}


at::Tensor *_wrap_BatchNormImpl_running_var_get_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  torch::Tensor *result = 0 ;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  
  result = (torch::Tensor *)& ((arg1)->running_var);
  *(torch::Tensor **)&_swig_go_result = (torch::Tensor *)result; 
  return _swig_go_result;
}


void _wrap_delete_BatchNormImpl_swig_787f477e80c1f310(torch::nn::BatchNormImpl *_swig_go_0) {
  torch::nn::BatchNormImpl *arg1 = (torch::nn::BatchNormImpl *) 0 ;
  
  arg1 = *(torch::nn::BatchNormImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_BatchNorm_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::BatchNorm = arg1;
  
}


TORCH_MODULE *_wrap_BatchNorm_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::BatchNorm;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


torch::nn::AnyModule *_wrap_new_AnyModule__SWIG_0_swig_787f477e80c1f310() {
  torch::nn::AnyModule *result = 0 ;
  torch::nn::AnyModule *_swig_go_result;
  
  
  result = (torch::nn::AnyModule *)new torch::nn::AnyModule();
  *(torch::nn::AnyModule **)&_swig_go_result = (torch::nn::AnyModule *)result; 
  return _swig_go_result;
}


torch::nn::AnyModule *_wrap_new_AnyModule__SWIG_4_swig_787f477e80c1f310(torch::nn::AnyModule *_swig_go_0) {
  torch::nn::AnyModule *arg1 = 0 ;
  torch::nn::AnyModule *result = 0 ;
  torch::nn::AnyModule *_swig_go_result;
  
  arg1 = *(torch::nn::AnyModule **)&_swig_go_0; 
  
  result = (torch::nn::AnyModule *)new torch::nn::AnyModule((torch::nn::AnyModule &&)*arg1);
  *(torch::nn::AnyModule **)&_swig_go_result = (torch::nn::AnyModule *)result; 
  return _swig_go_result;
}


torch::nn::AnyModule *_wrap_new_AnyModule__SWIG_5_swig_787f477e80c1f310(torch::nn::AnyModule *_swig_go_0) {
  torch::nn::AnyModule *arg1 = 0 ;
  torch::nn::AnyModule *result = 0 ;
  torch::nn::AnyModule *_swig_go_result;
  
  arg1 = *(torch::nn::AnyModule **)&_swig_go_0; 
  
  result = (torch::nn::AnyModule *)new torch::nn::AnyModule((torch::nn::AnyModule const &)*arg1);
  *(torch::nn::AnyModule **)&_swig_go_result = (torch::nn::AnyModule *)result; 
  return _swig_go_result;
}


torch::nn::AnyModule *_wrap_AnyModule_clone__SWIG_0_swig_787f477e80c1f310(torch::nn::AnyModule *_swig_go_0, optional< Device > *_swig_go_1) {
  torch::nn::AnyModule *arg1 = (torch::nn::AnyModule *) 0 ;
  optional< Device > arg2 ;
  optional< Device > *argp2 ;
  torch::nn::AnyModule result;
  torch::nn::AnyModule *_swig_go_result;
  
  arg1 = *(torch::nn::AnyModule **)&_swig_go_0; 
  
  argp2 = (optional< Device > *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null optional< Device >");
  }
  arg2 = (optional< Device >)*argp2;
  
  
  result = ((torch::nn::AnyModule const *)arg1)->clone(arg2);
  *(torch::nn::AnyModule **)&_swig_go_result = new torch::nn::AnyModule(result); 
  return _swig_go_result;
}


torch::nn::AnyModule *_wrap_AnyModule_clone__SWIG_1_swig_787f477e80c1f310(torch::nn::AnyModule *_swig_go_0) {
  torch::nn::AnyModule *arg1 = (torch::nn::AnyModule *) 0 ;
  torch::nn::AnyModule result;
  torch::nn::AnyModule *_swig_go_result;
  
  arg1 = *(torch::nn::AnyModule **)&_swig_go_0; 
  
  result = ((torch::nn::AnyModule const *)arg1)->clone();
  *(torch::nn::AnyModule **)&_swig_go_result = new torch::nn::AnyModule(result); 
  return _swig_go_result;
}


std::shared_ptr< torch::nn::Module > *_wrap_AnyModule_ptr_swig_787f477e80c1f310(torch::nn::AnyModule *_swig_go_0) {
  torch::nn::AnyModule *arg1 = (torch::nn::AnyModule *) 0 ;
  SwigValueWrapper< std::shared_ptr< torch::nn::Module > > result;
  std::shared_ptr< torch::nn::Module > *_swig_go_result;
  
  arg1 = *(torch::nn::AnyModule **)&_swig_go_0; 
  
  result = ((torch::nn::AnyModule const *)arg1)->ptr();
  *(std::shared_ptr< torch::nn::Module > **)&_swig_go_result = new std::shared_ptr< torch::nn::Module >(result); 
  return _swig_go_result;
}


std::type_info *_wrap_AnyModule_type_info_swig_787f477e80c1f310(torch::nn::AnyModule *_swig_go_0) {
  torch::nn::AnyModule *arg1 = (torch::nn::AnyModule *) 0 ;
  std::type_info *result = 0 ;
  std::type_info *_swig_go_result;
  
  arg1 = *(torch::nn::AnyModule **)&_swig_go_0; 
  
  result = (std::type_info *) &((torch::nn::AnyModule const *)arg1)->type_info();
  *(std::type_info **)&_swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_AnyModule_is_empty_swig_787f477e80c1f310(torch::nn::AnyModule *_swig_go_0) {
  torch::nn::AnyModule *arg1 = (torch::nn::AnyModule *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(torch::nn::AnyModule **)&_swig_go_0; 
  
  result = (bool)((torch::nn::AnyModule const *)arg1)->is_empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_AnyModule_swig_787f477e80c1f310(torch::nn::AnyModule *_swig_go_0) {
  torch::nn::AnyModule *arg1 = (torch::nn::AnyModule *) 0 ;
  
  arg1 = *(torch::nn::AnyModule **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::nn::DropoutOptions *_wrap_new_DropoutOptions__SWIG_0_swig_787f477e80c1f310(double _swig_go_0) {
  double arg1 ;
  torch::nn::DropoutOptions *result = 0 ;
  torch::nn::DropoutOptions *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  result = (torch::nn::DropoutOptions *)new torch::nn::DropoutOptions(arg1);
  *(torch::nn::DropoutOptions **)&_swig_go_result = (torch::nn::DropoutOptions *)result; 
  return _swig_go_result;
}


torch::nn::DropoutOptions *_wrap_new_DropoutOptions__SWIG_1_swig_787f477e80c1f310() {
  torch::nn::DropoutOptions *result = 0 ;
  torch::nn::DropoutOptions *_swig_go_result;
  
  
  result = (torch::nn::DropoutOptions *)new torch::nn::DropoutOptions();
  *(torch::nn::DropoutOptions **)&_swig_go_result = (torch::nn::DropoutOptions *)result; 
  return _swig_go_result;
}


void _wrap_DropoutOptions_rate__set_swig_787f477e80c1f310(torch::nn::DropoutOptions *_swig_go_0, double _swig_go_1) {
  torch::nn::DropoutOptions *arg1 = (torch::nn::DropoutOptions *) 0 ;
  double arg2 ;
  
  arg1 = *(torch::nn::DropoutOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->rate_ = arg2;
  
}


double _wrap_DropoutOptions_rate__get_swig_787f477e80c1f310(torch::nn::DropoutOptions *_swig_go_0) {
  torch::nn::DropoutOptions *arg1 = (torch::nn::DropoutOptions *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(torch::nn::DropoutOptions **)&_swig_go_0; 
  
  result = (double) ((arg1)->rate_);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_DropoutOptions_swig_787f477e80c1f310(torch::nn::DropoutOptions *_swig_go_0) {
  torch::nn::DropoutOptions *arg1 = (torch::nn::DropoutOptions *) 0 ;
  
  arg1 = *(torch::nn::DropoutOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::nn::DropoutImpl *_wrap_new_DropoutImpl__SWIG_0_swig_787f477e80c1f310(torch::nn::DropoutOptions *_swig_go_0) {
  torch::nn::DropoutOptions arg1 ;
  torch::nn::DropoutOptions *argp1 ;
  torch::nn::DropoutImpl *result = 0 ;
  torch::nn::DropoutImpl *_swig_go_result;
  
  
  argp1 = (torch::nn::DropoutOptions *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::nn::DropoutOptions");
  }
  arg1 = (torch::nn::DropoutOptions)*argp1;
  
  
  result = (torch::nn::DropoutImpl *)new torch::nn::DropoutImpl(arg1);
  *(torch::nn::DropoutImpl **)&_swig_go_result = (torch::nn::DropoutImpl *)result; 
  return _swig_go_result;
}


torch::nn::DropoutImpl *_wrap_new_DropoutImpl__SWIG_1_swig_787f477e80c1f310() {
  torch::nn::DropoutImpl *result = 0 ;
  torch::nn::DropoutImpl *_swig_go_result;
  
  
  result = (torch::nn::DropoutImpl *)new torch::nn::DropoutImpl();
  *(torch::nn::DropoutImpl **)&_swig_go_result = (torch::nn::DropoutImpl *)result; 
  return _swig_go_result;
}


at::Tensor *_wrap_DropoutImpl_forward_swig_787f477e80c1f310(torch::nn::DropoutImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::DropoutImpl *arg1 = (torch::nn::DropoutImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::DropoutImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


void _wrap_DropoutImpl_pretty_print_swig_787f477e80c1f310(torch::nn::DropoutImpl *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::DropoutImpl *arg1 = (torch::nn::DropoutImpl *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::DropoutImpl **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::DropoutImpl const *)arg1)->pretty_print(*arg2);
  
}


void _wrap_delete_DropoutImpl_swig_787f477e80c1f310(torch::nn::DropoutImpl *_swig_go_0) {
  torch::nn::DropoutImpl *arg1 = (torch::nn::DropoutImpl *) 0 ;
  
  arg1 = *(torch::nn::DropoutImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


torch::nn::FeatureDropoutImpl *_wrap_new_FeatureDropoutImpl__SWIG_0_swig_787f477e80c1f310(torch::nn::DropoutOptions *_swig_go_0) {
  torch::nn::DropoutOptions arg1 ;
  torch::nn::DropoutOptions *argp1 ;
  torch::nn::FeatureDropoutImpl *result = 0 ;
  torch::nn::FeatureDropoutImpl *_swig_go_result;
  
  
  argp1 = (torch::nn::DropoutOptions *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::nn::DropoutOptions");
  }
  arg1 = (torch::nn::DropoutOptions)*argp1;
  
  
  result = (torch::nn::FeatureDropoutImpl *)new torch::nn::FeatureDropoutImpl(arg1);
  *(torch::nn::FeatureDropoutImpl **)&_swig_go_result = (torch::nn::FeatureDropoutImpl *)result; 
  return _swig_go_result;
}


torch::nn::FeatureDropoutImpl *_wrap_new_FeatureDropoutImpl__SWIG_1_swig_787f477e80c1f310() {
  torch::nn::FeatureDropoutImpl *result = 0 ;
  torch::nn::FeatureDropoutImpl *_swig_go_result;
  
  
  result = (torch::nn::FeatureDropoutImpl *)new torch::nn::FeatureDropoutImpl();
  *(torch::nn::FeatureDropoutImpl **)&_swig_go_result = (torch::nn::FeatureDropoutImpl *)result; 
  return _swig_go_result;
}


at::Tensor *_wrap_FeatureDropoutImpl_forward_swig_787f477e80c1f310(torch::nn::FeatureDropoutImpl *_swig_go_0, at::Tensor *_swig_go_1) {
  torch::nn::FeatureDropoutImpl *arg1 = (torch::nn::FeatureDropoutImpl *) 0 ;
  torch::Tensor *arg2 = 0 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  arg1 = *(torch::nn::FeatureDropoutImpl **)&_swig_go_0; 
  arg2 = *(torch::Tensor **)&_swig_go_1; 
  
  result = (arg1)->forward((torch::Tensor const &)*arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


void _wrap_FeatureDropoutImpl_pretty_print_swig_787f477e80c1f310(torch::nn::FeatureDropoutImpl *_swig_go_0, std::ostream *_swig_go_1) {
  torch::nn::FeatureDropoutImpl *arg1 = (torch::nn::FeatureDropoutImpl *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(torch::nn::FeatureDropoutImpl **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  ((torch::nn::FeatureDropoutImpl const *)arg1)->pretty_print(*arg2);
  
}


void _wrap_delete_FeatureDropoutImpl_swig_787f477e80c1f310(torch::nn::FeatureDropoutImpl *_swig_go_0) {
  torch::nn::FeatureDropoutImpl *arg1 = (torch::nn::FeatureDropoutImpl *) 0 ;
  
  arg1 = *(torch::nn::FeatureDropoutImpl **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Dropout_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::Dropout = arg1;
  
}


TORCH_MODULE *_wrap_Dropout_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::Dropout;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


void _wrap_FeatureDropout_set_swig_787f477e80c1f310(TORCH_MODULE *_swig_go_0) {
  TORCH_MODULE arg1 ;
  TORCH_MODULE *argp1 ;
  
  
  argp1 = (TORCH_MODULE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null TORCH_MODULE");
  }
  arg1 = (TORCH_MODULE)*argp1;
  
  
  torch::nn::FeatureDropout = arg1;
  
}


TORCH_MODULE *_wrap_FeatureDropout_get_swig_787f477e80c1f310() {
  TORCH_MODULE result;
  TORCH_MODULE *_swig_go_result;
  
  
  result = torch::nn::FeatureDropout;
  *(TORCH_MODULE **)&_swig_go_result = new TORCH_MODULE(result); 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_Linear_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::Linear;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_Conv1D_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::Conv1D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_Conv2D_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::Conv2D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_Conv3D_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::Conv3D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_ConvTranspose1D_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::ConvTranspose1D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_ConvTranspose2D_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::ConvTranspose2D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_ConvTranspose3D_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::ConvTranspose3D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_Sigmoid_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::Sigmoid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_Tanh_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::Tanh;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_ReLU_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::ReLU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Nonlinearity_LeakyReLU_swig_787f477e80c1f310() {
  torch::nn::init::Nonlinearity result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::Nonlinearity::LeakyReLU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FanMode_FanIn_swig_787f477e80c1f310() {
  torch::nn::init::FanMode result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::FanMode::FanIn;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FanMode_FanOut_swig_787f477e80c1f310() {
  torch::nn::init::FanMode result;
  intgo _swig_go_result;
  
  
  result = torch::nn::init::FanMode::FanOut;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


double _wrap_calculate_gain__SWIG_0_swig_787f477e80c1f310(intgo _swig_go_0, double _swig_go_1) {
  torch::nn::init::Nonlinearity arg1 ;
  double arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = (torch::nn::init::Nonlinearity)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = (double)torch::nn::init::calculate_gain(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_calculate_gain__SWIG_1_swig_787f477e80c1f310(intgo _swig_go_0) {
  torch::nn::init::Nonlinearity arg1 ;
  double result;
  double _swig_go_result;
  
  arg1 = (torch::nn::init::Nonlinearity)_swig_go_0; 
  
  result = (double)torch::nn::init::calculate_gain(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


at::Tensor *_wrap_constant__swig_787f477e80c1f310(at::Tensor *_swig_go_0, Scalar *_swig_go_1) {
  torch::Tensor arg1 ;
  Scalar arg2 ;
  torch::Tensor *argp1 ;
  Scalar *argp2 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  argp2 = (Scalar *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Scalar");
  }
  arg2 = (Scalar)*argp2;
  
  
  result = torch::nn::init::constant_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_dirac__swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::dirac_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_eye__swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::eye_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_normal___SWIG_0_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  torch::Tensor arg1 ;
  double arg2 ;
  double arg3 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = torch::nn::init::normal_(arg1,arg2,arg3);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_normal___SWIG_1_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  
  result = torch::nn::init::normal_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_normal___SWIG_2_swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::normal_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_ones__swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::ones_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_orthogonal___SWIG_0_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  
  result = torch::nn::init::orthogonal_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_orthogonal___SWIG_1_swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::orthogonal_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_sparse___SWIG_0_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  torch::Tensor arg1 ;
  double arg2 ;
  double arg3 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = torch::nn::init::sparse_(arg1,arg2,arg3);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_sparse___SWIG_1_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  
  result = torch::nn::init::sparse_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_uniform___SWIG_0_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  torch::Tensor arg1 ;
  double arg2 ;
  double arg3 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = torch::nn::init::uniform_(arg1,arg2,arg3);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_uniform___SWIG_1_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  
  result = torch::nn::init::uniform_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_uniform___SWIG_2_swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::uniform_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_kaiming_normal___SWIG_0_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::nn::init::FanMode arg3 ;
  torch::nn::init::Nonlinearity arg4 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (torch::nn::init::FanMode)_swig_go_2; 
  arg4 = (torch::nn::init::Nonlinearity)_swig_go_3; 
  
  result = torch::nn::init::kaiming_normal_(arg1,arg2,arg3,arg4);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_kaiming_normal___SWIG_1_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1, intgo _swig_go_2) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::nn::init::FanMode arg3 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (torch::nn::init::FanMode)_swig_go_2; 
  
  result = torch::nn::init::kaiming_normal_(arg1,arg2,arg3);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_kaiming_normal___SWIG_2_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  
  result = torch::nn::init::kaiming_normal_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_kaiming_normal___SWIG_3_swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::kaiming_normal_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_kaiming_uniform___SWIG_0_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::nn::init::FanMode arg3 ;
  torch::nn::init::Nonlinearity arg4 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (torch::nn::init::FanMode)_swig_go_2; 
  arg4 = (torch::nn::init::Nonlinearity)_swig_go_3; 
  
  result = torch::nn::init::kaiming_uniform_(arg1,arg2,arg3,arg4);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_kaiming_uniform___SWIG_1_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1, intgo _swig_go_2) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::nn::init::FanMode arg3 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (torch::nn::init::FanMode)_swig_go_2; 
  
  result = torch::nn::init::kaiming_uniform_(arg1,arg2,arg3);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_kaiming_uniform___SWIG_2_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  
  result = torch::nn::init::kaiming_uniform_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_kaiming_uniform___SWIG_3_swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::kaiming_uniform_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_xavier_normal___SWIG_0_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  
  result = torch::nn::init::xavier_normal_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_xavier_normal___SWIG_1_swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::xavier_normal_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_xavier_uniform___SWIG_0_swig_787f477e80c1f310(at::Tensor *_swig_go_0, double _swig_go_1) {
  torch::Tensor arg1 ;
  double arg2 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  arg2 = (double)_swig_go_1; 
  
  result = torch::nn::init::xavier_uniform_(arg1,arg2);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_xavier_uniform___SWIG_1_swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::xavier_uniform_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


at::Tensor *_wrap_zeros__swig_787f477e80c1f310(at::Tensor *_swig_go_0) {
  torch::Tensor arg1 ;
  torch::Tensor *argp1 ;
  torch::Tensor result;
  at::Tensor *_swig_go_result;
  
  
  argp1 = (torch::Tensor *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null torch::Tensor");
  }
  arg1 = (torch::Tensor)*argp1;
  
  
  result = torch::nn::init::zeros_(arg1);
  *(torch::Tensor **)&_swig_go_result = new torch::Tensor(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kUInt8_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kUInt8;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kInt8_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kInt8;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kInt16_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kInt16;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kInt32_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kInt32;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kInt64_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kInt64;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kFloat16_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kFloat16;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kFloat32_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kFloat32;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kFloat64_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kFloat64;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kU8_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kU8;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kI8_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kI8;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kI16_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kI16;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kI32_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kI32;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kI64_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kI64;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kF16_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kF16;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kF32_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kF32;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


c10::ScalarType *_wrap_kF64_get_swig_787f477e80c1f310() {
  c10::ScalarType result;
  c10::ScalarType *_swig_go_result;
  
  
  result = torch::kF64;
  *(c10::ScalarType **)&_swig_go_result = new c10::ScalarType(result); 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

